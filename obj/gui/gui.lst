                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module gui
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strlen
                             12 	.globl _cpct_getScreenPtr
                             13 	.globl _cpct_setPalette
                             14 	.globl _cpct_setVideoMode
                             15 	.globl _cpct_drawStringM2
                             16 	.globl _cpct_drawSolidBox
                             17 	.globl _cpct_px2byteM0
                             18 	.globl _cpct_isKeyPressed
                             19 	.globl _cpct_scanKeyboard
                             20 	.globl _cpct_memset
                             21 	.globl _putM0
                             22 	.globl _putM1
                             23 	.globl _putM2
                             24 	.globl _drawBoxM0
                             25 	.globl _drawBoxM2
                             26 	.globl _EraseMenuEntry
                             27 	.globl _drawMenuEntry
                             28 	.globl _drawMenu
                             29 	.globl _drawWindow
                             30 ;--------------------------------------------------------
                             31 ; special function registers
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; ram data
                             35 ;--------------------------------------------------------
                             36 	.area _DATA
                             37 ;--------------------------------------------------------
                             38 ; ram data
                             39 ;--------------------------------------------------------
                             40 	.area _INITIALIZED
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area _DABS (ABS)
                             45 ;--------------------------------------------------------
                             46 ; global & static initialisations
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _GSINIT
                             50 	.area _GSFINAL
                             51 	.area _GSINIT
                             52 ;--------------------------------------------------------
                             53 ; Home
                             54 ;--------------------------------------------------------
                             55 	.area _HOME
                             56 	.area _HOME
                             57 ;--------------------------------------------------------
                             58 ; code
                             59 ;--------------------------------------------------------
                             60 	.area _CODE
                             61 ;src/gui/gui.c:3: void putM0(void)
                             62 ;	---------------------------------
                             63 ; Function putM0
                             64 ; ---------------------------------
   0000                      65 _putM0::
                             66 ;src/gui/gui.c:5: cpct_setVideoMode(0);
   0000 2E 00         [ 7]   67 	ld	l, #0x00
   0002 CDr00r00      [17]   68 	call	_cpct_setVideoMode
                             69 ;src/gui/gui.c:7: cpct_setPalette(paletteTrains, 16);
   0005 21 10 00      [10]   70 	ld	hl, #0x0010
   0008 E5            [11]   71 	push	hl
   0009 21r00r00      [10]   72 	ld	hl, #_paletteTrains
   000C E5            [11]   73 	push	hl
   000D CDr00r00      [17]   74 	call	_cpct_setPalette
   0010 C9            [10]   75 	ret
                             76 ;src/gui/gui.c:10: void putM1(void)
                             77 ;	---------------------------------
                             78 ; Function putM1
                             79 ; ---------------------------------
   0011                      80 _putM1::
                             81 ;src/gui/gui.c:12: cpct_setVideoMode(1);
   0011 2E 01         [ 7]   82 	ld	l, #0x01
   0013 CDr00r00      [17]   83 	call	_cpct_setVideoMode
                             84 ;src/gui/gui.c:14: cpct_setPalette(paletteMenusM1, 4);
   0016 21 04 00      [10]   85 	ld	hl, #0x0004
   0019 E5            [11]   86 	push	hl
   001A 21r00r00      [10]   87 	ld	hl, #_paletteMenusM1
   001D E5            [11]   88 	push	hl
   001E CDr00r00      [17]   89 	call	_cpct_setPalette
   0021 C9            [10]   90 	ret
                             91 ;src/gui/gui.c:17: void putM2(void)
                             92 ;	---------------------------------
                             93 ; Function putM2
                             94 ; ---------------------------------
   0022                      95 _putM2::
                             96 ;src/gui/gui.c:19: cpct_setVideoMode(2);
   0022 2E 02         [ 7]   97 	ld	l, #0x02
   0024 CDr00r00      [17]   98 	call	_cpct_setVideoMode
                             99 ;src/gui/gui.c:21: cpct_setPalette(paletteMenusM2, 2);
   0027 21 02 00      [10]  100 	ld	hl, #0x0002
   002A E5            [11]  101 	push	hl
   002B 21r00r00      [10]  102 	ld	hl, #_paletteMenusM2
   002E E5            [11]  103 	push	hl
   002F CDr00r00      [17]  104 	call	_cpct_setPalette
                            105 ;src/gui/gui.c:22: cpct_clearScreen(0b11111111);
   0032 21 00 40      [10]  106 	ld	hl, #0x4000
   0035 E5            [11]  107 	push	hl
   0036 3E FF         [ 7]  108 	ld	a, #0xff
   0038 F5            [11]  109 	push	af
   0039 33            [ 6]  110 	inc	sp
   003A 26 C0         [ 7]  111 	ld	h, #0xc0
   003C E5            [11]  112 	push	hl
   003D CDr00r00      [17]  113 	call	_cpct_memset
   0040 C9            [10]  114 	ret
                            115 ;src/gui/gui.c:25: void drawBoxM0(int width_, int height_)
                            116 ;	---------------------------------
                            117 ; Function drawBoxM0
                            118 ; ---------------------------------
   0041                     119 _drawBoxM0::
   0041 DD E5         [15]  120 	push	ix
   0043 DD 21 00 00   [14]  121 	ld	ix,#0
   0047 DD 39         [15]  122 	add	ix,sp
   0049 21 F9 FF      [10]  123 	ld	hl, #-7
   004C 39            [11]  124 	add	hl, sp
   004D F9            [ 6]  125 	ld	sp, hl
                            126 ;src/gui/gui.c:30: int left = (80-width_)/2;
   004E 3E 50         [ 7]  127 	ld	a, #0x50
   0050 DD 96 04      [19]  128 	sub	a, 4 (ix)
   0053 5F            [ 4]  129 	ld	e, a
   0054 3E 00         [ 7]  130 	ld	a, #0x00
   0056 DD 9E 05      [19]  131 	sbc	a, 5 (ix)
   0059 57            [ 4]  132 	ld	d, a
   005A 4B            [ 4]  133 	ld	c, e
   005B 42            [ 4]  134 	ld	b, d
   005C CB 7A         [ 8]  135 	bit	7, d
   005E 28 03         [12]  136 	jr	Z,00103$
   0060 4B            [ 4]  137 	ld	c, e
   0061 42            [ 4]  138 	ld	b, d
   0062 03            [ 6]  139 	inc	bc
   0063                     140 00103$:
   0063 CB 28         [ 8]  141 	sra	b
   0065 CB 19         [ 8]  142 	rr	c
                            143 ;src/gui/gui.c:31: int top = (200-height_)/2;
   0067 3E C8         [ 7]  144 	ld	a, #0xc8
   0069 DD 96 06      [19]  145 	sub	a, 6 (ix)
   006C 6F            [ 4]  146 	ld	l, a
   006D 3E 00         [ 7]  147 	ld	a, #0x00
   006F DD 9E 07      [19]  148 	sbc	a, 7 (ix)
   0072 67            [ 4]  149 	ld	h, a
   0073 55            [ 4]  150 	ld	d, l
   0074 5C            [ 4]  151 	ld	e, h
   0075 CB 7C         [ 8]  152 	bit	7, h
   0077 28 03         [12]  153 	jr	Z,00104$
   0079 23            [ 6]  154 	inc	hl
   007A 55            [ 4]  155 	ld	d, l
   007B 5C            [ 4]  156 	ld	e, h
   007C                     157 00104$:
   007C DD 72 F9      [19]  158 	ld	-7 (ix), d
   007F DD 73 FA      [19]  159 	ld	-6 (ix), e
   0082 DD CB FA 2E   [23]  160 	sra	-6 (ix)
   0086 DD CB F9 1E   [23]  161 	rr	-7 (ix)
                            162 ;src/gui/gui.c:33: cpct_clearScreen(cpct_px2byteM0(9,9));
   008A C5            [11]  163 	push	bc
   008B 21 09 09      [10]  164 	ld	hl, #0x0909
   008E E5            [11]  165 	push	hl
   008F CDr00r00      [17]  166 	call	_cpct_px2byteM0
   0092 55            [ 4]  167 	ld	d, l
   0093 21 00 40      [10]  168 	ld	hl, #0x4000
   0096 E5            [11]  169 	push	hl
   0097 D5            [11]  170 	push	de
   0098 33            [ 6]  171 	inc	sp
   0099 26 C0         [ 7]  172 	ld	h, #0xc0
   009B E5            [11]  173 	push	hl
   009C CDr00r00      [17]  174 	call	_cpct_memset
   009F C1            [10]  175 	pop	bc
                            176 ;src/gui/gui.c:36: pvid = cpct_getScreenPtr(SCR_VMEM, left+1, top+4);
   00A0 DD 7E F9      [19]  177 	ld	a, -7 (ix)
   00A3 DD 77 FC      [19]  178 	ld	-4 (ix), a
   00A6 5F            [ 4]  179 	ld	e, a
   00A7 1C            [ 4]  180 	inc	e
   00A8 1C            [ 4]  181 	inc	e
   00A9 1C            [ 4]  182 	inc	e
   00AA 1C            [ 4]  183 	inc	e
   00AB 79            [ 4]  184 	ld	a, c
   00AC 3C            [ 4]  185 	inc	a
   00AD DD 77 FE      [19]  186 	ld	-2 (ix), a
   00B0 C5            [11]  187 	push	bc
   00B1 53            [ 4]  188 	ld	d, e
   00B2 DD 5E FE      [19]  189 	ld	e, -2 (ix)
   00B5 D5            [11]  190 	push	de
   00B6 21 00 C0      [10]  191 	ld	hl, #0xc000
   00B9 E5            [11]  192 	push	hl
   00BA CDr00r00      [17]  193 	call	_cpct_getScreenPtr
   00BD C1            [10]  194 	pop	bc
                            195 ;src/gui/gui.c:37: cpct_drawSolidBox(pvid, cpct_px2byteM0(2,2), width_, height_);
   00BE DD 7E 06      [19]  196 	ld	a, 6 (ix)
   00C1 DD 77 FB      [19]  197 	ld	-5 (ix), a
   00C4 DD 7E 04      [19]  198 	ld	a, 4 (ix)
   00C7 DD 77 FF      [19]  199 	ld	-1 (ix), a
   00CA E5            [11]  200 	push	hl
   00CB C5            [11]  201 	push	bc
   00CC 11 02 02      [10]  202 	ld	de, #0x0202
   00CF D5            [11]  203 	push	de
   00D0 CDr00r00      [17]  204 	call	_cpct_px2byteM0
   00D3 DD 75 FD      [19]  205 	ld	-3 (ix), l
   00D6 C1            [10]  206 	pop	bc
   00D7 E1            [10]  207 	pop	hl
   00D8 EB            [ 4]  208 	ex	de,hl
   00D9 C5            [11]  209 	push	bc
   00DA DD 66 FB      [19]  210 	ld	h, -5 (ix)
   00DD DD 6E FF      [19]  211 	ld	l, -1 (ix)
   00E0 E5            [11]  212 	push	hl
   00E1 DD 7E FD      [19]  213 	ld	a, -3 (ix)
   00E4 F5            [11]  214 	push	af
   00E5 33            [ 6]  215 	inc	sp
   00E6 D5            [11]  216 	push	de
   00E7 CDr00r00      [17]  217 	call	_cpct_drawSolidBox
   00EA F1            [10]  218 	pop	af
   00EB F1            [10]  219 	pop	af
   00EC 33            [ 6]  220 	inc	sp
   00ED C1            [10]  221 	pop	bc
                            222 ;src/gui/gui.c:40: pvid = cpct_getScreenPtr(SCR_VMEM, left, top);
   00EE DD 56 F9      [19]  223 	ld	d, -7 (ix)
   00F1 59            [ 4]  224 	ld	e, c
   00F2 D5            [11]  225 	push	de
   00F3 21 00 C0      [10]  226 	ld	hl, #0xc000
   00F6 E5            [11]  227 	push	hl
   00F7 CDr00r00      [17]  228 	call	_cpct_getScreenPtr
                            229 ;src/gui/gui.c:41: cpct_drawSolidBox(pvid, cpct_px2byteM0(6,6), width_, height_);
   00FA E5            [11]  230 	push	hl
   00FB 21 06 06      [10]  231 	ld	hl, #0x0606
   00FE E5            [11]  232 	push	hl
   00FF CDr00r00      [17]  233 	call	_cpct_px2byteM0
   0102 55            [ 4]  234 	ld	d, l
   0103 C1            [10]  235 	pop	bc
   0104 DD 66 FB      [19]  236 	ld	h, -5 (ix)
   0107 DD 6E FF      [19]  237 	ld	l, -1 (ix)
   010A E5            [11]  238 	push	hl
   010B D5            [11]  239 	push	de
   010C 33            [ 6]  240 	inc	sp
   010D C5            [11]  241 	push	bc
   010E CDr00r00      [17]  242 	call	_cpct_drawSolidBox
   0111 F1            [10]  243 	pop	af
   0112 F1            [10]  244 	pop	af
   0113 33            [ 6]  245 	inc	sp
                            246 ;src/gui/gui.c:44: pvid = cpct_getScreenPtr(SCR_VMEM, left+1, top+2);
   0114 DD 46 FC      [19]  247 	ld	b, -4 (ix)
   0117 04            [ 4]  248 	inc	b
   0118 04            [ 4]  249 	inc	b
   0119 C5            [11]  250 	push	bc
   011A 33            [ 6]  251 	inc	sp
   011B DD 7E FE      [19]  252 	ld	a, -2 (ix)
   011E F5            [11]  253 	push	af
   011F 33            [ 6]  254 	inc	sp
   0120 21 00 C0      [10]  255 	ld	hl, #0xc000
   0123 E5            [11]  256 	push	hl
   0124 CDr00r00      [17]  257 	call	_cpct_getScreenPtr
                            258 ;src/gui/gui.c:45: cpct_drawSolidBox(pvid, cpct_px2byteM0(0,0), width_-2, height_-4);
   0127 DD 7E 06      [19]  259 	ld	a, 6 (ix)
   012A C6 FC         [ 7]  260 	add	a, #0xfc
   012C 47            [ 4]  261 	ld	b, a
   012D DD 4E 04      [19]  262 	ld	c, 4 (ix)
   0130 0D            [ 4]  263 	dec	c
   0131 0D            [ 4]  264 	dec	c
   0132 E5            [11]  265 	push	hl
   0133 C5            [11]  266 	push	bc
   0134 11 00 00      [10]  267 	ld	de, #0x0000
   0137 D5            [11]  268 	push	de
   0138 CDr00r00      [17]  269 	call	_cpct_px2byteM0
   013B DD 75 FD      [19]  270 	ld	-3 (ix), l
   013E C1            [10]  271 	pop	bc
   013F E1            [10]  272 	pop	hl
   0140 EB            [ 4]  273 	ex	de,hl
   0141 C5            [11]  274 	push	bc
   0142 DD 7E FD      [19]  275 	ld	a, -3 (ix)
   0145 F5            [11]  276 	push	af
   0146 33            [ 6]  277 	inc	sp
   0147 D5            [11]  278 	push	de
   0148 CDr00r00      [17]  279 	call	_cpct_drawSolidBox
   014B DD F9         [10]  280 	ld	sp,ix
   014D DD E1         [14]  281 	pop	ix
   014F C9            [10]  282 	ret
                            283 ;src/gui/gui.c:49: void drawBoxM2(int width_, int height_)
                            284 ;	---------------------------------
                            285 ; Function drawBoxM2
                            286 ; ---------------------------------
   0150                     287 _drawBoxM2::
   0150 DD E5         [15]  288 	push	ix
   0152 DD 21 00 00   [14]  289 	ld	ix,#0
   0156 DD 39         [15]  290 	add	ix,sp
   0158 21 FA FF      [10]  291 	ld	hl, #-6
   015B 39            [11]  292 	add	hl, sp
   015C F9            [ 6]  293 	ld	sp, hl
                            294 ;src/gui/gui.c:54: int left = (80-width_)/2;
   015D 3E 50         [ 7]  295 	ld	a, #0x50
   015F DD 96 04      [19]  296 	sub	a, 4 (ix)
   0162 5F            [ 4]  297 	ld	e, a
   0163 3E 00         [ 7]  298 	ld	a, #0x00
   0165 DD 9E 05      [19]  299 	sbc	a, 5 (ix)
   0168 57            [ 4]  300 	ld	d, a
   0169 4B            [ 4]  301 	ld	c, e
   016A 42            [ 4]  302 	ld	b, d
   016B CB 7A         [ 8]  303 	bit	7, d
   016D 28 03         [12]  304 	jr	Z,00103$
   016F 4B            [ 4]  305 	ld	c, e
   0170 42            [ 4]  306 	ld	b, d
   0171 03            [ 6]  307 	inc	bc
   0172                     308 00103$:
   0172 CB 28         [ 8]  309 	sra	b
   0174 CB 19         [ 8]  310 	rr	c
                            311 ;src/gui/gui.c:55: int top = (200-height_)/2;
   0176 3E C8         [ 7]  312 	ld	a, #0xc8
   0178 DD 96 06      [19]  313 	sub	a, 6 (ix)
   017B 6F            [ 4]  314 	ld	l, a
   017C 3E 00         [ 7]  315 	ld	a, #0x00
   017E DD 9E 07      [19]  316 	sbc	a, 7 (ix)
   0181 67            [ 4]  317 	ld	h, a
   0182 55            [ 4]  318 	ld	d, l
   0183 5C            [ 4]  319 	ld	e, h
   0184 CB 7C         [ 8]  320 	bit	7, h
   0186 28 03         [12]  321 	jr	Z,00104$
   0188 23            [ 6]  322 	inc	hl
   0189 55            [ 4]  323 	ld	d, l
   018A 5C            [ 4]  324 	ld	e, h
   018B                     325 00104$:
   018B DD 72 FA      [19]  326 	ld	-6 (ix), d
   018E DD 73 FB      [19]  327 	ld	-5 (ix), e
   0191 DD CB FB 2E   [23]  328 	sra	-5 (ix)
   0195 DD CB FA 1E   [23]  329 	rr	-6 (ix)
                            330 ;src/gui/gui.c:58: pvid = cpct_getScreenPtr(SCR_VMEM, left+2, top+5);
   0199 DD 7E FA      [19]  331 	ld	a, -6 (ix)
   019C DD 77 FC      [19]  332 	ld	-4 (ix), a
   019F C6 05         [ 7]  333 	add	a, #0x05
   01A1 5F            [ 4]  334 	ld	e, a
   01A2 DD 71 FF      [19]  335 	ld	-1 (ix), c
   01A5 51            [ 4]  336 	ld	d, c
   01A6 14            [ 4]  337 	inc	d
   01A7 14            [ 4]  338 	inc	d
   01A8 C5            [11]  339 	push	bc
   01A9 7B            [ 4]  340 	ld	a, e
   01AA F5            [11]  341 	push	af
   01AB 33            [ 6]  342 	inc	sp
   01AC D5            [11]  343 	push	de
   01AD 33            [ 6]  344 	inc	sp
   01AE 21 00 C0      [10]  345 	ld	hl, #0xc000
   01B1 E5            [11]  346 	push	hl
   01B2 CDr00r00      [17]  347 	call	_cpct_getScreenPtr
   01B5 C1            [10]  348 	pop	bc
                            349 ;src/gui/gui.c:59: cpct_drawSolidBox(pvid, 0b00000000, width_-1, height_);
   01B6 DD 56 06      [19]  350 	ld	d, 6 (ix)
   01B9 DD 5E 04      [19]  351 	ld	e, 4 (ix)
   01BC 7B            [ 4]  352 	ld	a, e
   01BD C6 FF         [ 7]  353 	add	a, #0xff
   01BF DD 75 FD      [19]  354 	ld	-3 (ix), l
   01C2 DD 74 FE      [19]  355 	ld	-2 (ix), h
   01C5 C5            [11]  356 	push	bc
   01C6 D5            [11]  357 	push	de
   01C7 5F            [ 4]  358 	ld	e, a
   01C8 D5            [11]  359 	push	de
   01C9 AF            [ 4]  360 	xor	a, a
   01CA F5            [11]  361 	push	af
   01CB 33            [ 6]  362 	inc	sp
   01CC DD 6E FD      [19]  363 	ld	l,-3 (ix)
   01CF DD 66 FE      [19]  364 	ld	h,-2 (ix)
   01D2 E5            [11]  365 	push	hl
   01D3 CDr00r00      [17]  366 	call	_cpct_drawSolidBox
   01D6 F1            [10]  367 	pop	af
   01D7 F1            [10]  368 	pop	af
   01D8 33            [ 6]  369 	inc	sp
   01D9 D1            [10]  370 	pop	de
   01DA C1            [10]  371 	pop	bc
                            372 ;src/gui/gui.c:62: pvid = cpct_getScreenPtr(SCR_VMEM, left, top);
   01DB DD 66 FA      [19]  373 	ld	h, -6 (ix)
   01DE 41            [ 4]  374 	ld	b, c
   01DF D5            [11]  375 	push	de
   01E0 E5            [11]  376 	push	hl
   01E1 33            [ 6]  377 	inc	sp
   01E2 C5            [11]  378 	push	bc
   01E3 33            [ 6]  379 	inc	sp
   01E4 21 00 C0      [10]  380 	ld	hl, #0xc000
   01E7 E5            [11]  381 	push	hl
   01E8 CDr00r00      [17]  382 	call	_cpct_getScreenPtr
   01EB 4D            [ 4]  383 	ld	c, l
   01EC 44            [ 4]  384 	ld	b, h
   01ED D1            [10]  385 	pop	de
                            386 ;src/gui/gui.c:63: cpct_drawSolidBox(pvid, 0b11111000, width_, height_);
   01EE DD 7E 04      [19]  387 	ld	a, 4 (ix)
   01F1 D5            [11]  388 	push	de
   01F2 5F            [ 4]  389 	ld	e, a
   01F3 D5            [11]  390 	push	de
   01F4 3E F8         [ 7]  391 	ld	a, #0xf8
   01F6 F5            [11]  392 	push	af
   01F7 33            [ 6]  393 	inc	sp
   01F8 C5            [11]  394 	push	bc
   01F9 CDr00r00      [17]  395 	call	_cpct_drawSolidBox
   01FC F1            [10]  396 	pop	af
   01FD F1            [10]  397 	pop	af
   01FE 33            [ 6]  398 	inc	sp
   01FF D1            [10]  399 	pop	de
                            400 ;src/gui/gui.c:66: pvid = cpct_getScreenPtr(SCR_VMEM, left+1, top+1);
   0200 DD 56 FC      [19]  401 	ld	d, -4 (ix)
   0203 14            [ 4]  402 	inc	d
   0204 DD 46 FF      [19]  403 	ld	b, -1 (ix)
   0207 04            [ 4]  404 	inc	b
   0208 D5            [11]  405 	push	de
   0209 58            [ 4]  406 	ld	e, b
   020A D5            [11]  407 	push	de
   020B 21 00 C0      [10]  408 	ld	hl, #0xc000
   020E E5            [11]  409 	push	hl
   020F CDr00r00      [17]  410 	call	_cpct_getScreenPtr
   0212 4D            [ 4]  411 	ld	c, l
   0213 44            [ 4]  412 	ld	b, h
   0214 D1            [10]  413 	pop	de
                            414 ;src/gui/gui.c:67: cpct_drawSolidBox(pvid, 0b11111111, width_-2, height_-2);
   0215 DD 56 06      [19]  415 	ld	d, 6 (ix)
   0218 15            [ 4]  416 	dec	d
   0219 15            [ 4]  417 	dec	d
   021A 1D            [ 4]  418 	dec	e
   021B 1D            [ 4]  419 	dec	e
   021C D5            [11]  420 	push	de
   021D 33            [ 6]  421 	inc	sp
   021E 53            [ 4]  422 	ld	d, e
   021F 1E FF         [ 7]  423 	ld	e,#0xff
   0221 D5            [11]  424 	push	de
   0222 C5            [11]  425 	push	bc
   0223 CDr00r00      [17]  426 	call	_cpct_drawSolidBox
   0226 DD F9         [10]  427 	ld	sp,ix
   0228 DD E1         [14]  428 	pop	ix
   022A C9            [10]  429 	ret
                            430 ;src/gui/gui.c:70: void EraseMenuEntry(char **menu, u8 nbEntry, u8 iSelect)
                            431 ;	---------------------------------
                            432 ; Function EraseMenuEntry
                            433 ; ---------------------------------
   022B                     434 _EraseMenuEntry::
   022B DD E5         [15]  435 	push	ix
   022D DD 21 00 00   [14]  436 	ld	ix,#0
   0231 DD 39         [15]  437 	add	ix,sp
   0233 3B            [ 6]  438 	dec	sp
                            439 ;src/gui/gui.c:75: p_video = cpct_getScreenPtr(SCR_VMEM, 32, (201-nbEntry*10)/2+iSelect*10);
   0234 DD 4E 06      [19]  440 	ld	c,6 (ix)
   0237 06 00         [ 7]  441 	ld	b,#0x00
   0239 69            [ 4]  442 	ld	l, c
   023A 60            [ 4]  443 	ld	h, b
   023B 29            [11]  444 	add	hl, hl
   023C 29            [11]  445 	add	hl, hl
   023D 09            [11]  446 	add	hl, bc
   023E 29            [11]  447 	add	hl, hl
   023F 4D            [ 4]  448 	ld	c, l
   0240 44            [ 4]  449 	ld	b, h
   0241 3E C9         [ 7]  450 	ld	a, #0xc9
   0243 91            [ 4]  451 	sub	a, c
   0244 6F            [ 4]  452 	ld	l, a
   0245 3E 00         [ 7]  453 	ld	a, #0x00
   0247 98            [ 4]  454 	sbc	a, b
   0248 67            [ 4]  455 	ld	h, a
   0249 5D            [ 4]  456 	ld	e, l
   024A 54            [ 4]  457 	ld	d, h
   024B CB 7C         [ 8]  458 	bit	7, h
   024D 28 03         [12]  459 	jr	Z,00103$
   024F 5D            [ 4]  460 	ld	e, l
   0250 54            [ 4]  461 	ld	d, h
   0251 13            [ 6]  462 	inc	de
   0252                     463 00103$:
   0252 CB 2A         [ 8]  464 	sra	d
   0254 CB 1B         [ 8]  465 	rr	e
   0256 53            [ 4]  466 	ld	d, e
   0257 DD 6E 07      [19]  467 	ld	l, 7 (ix)
   025A 5D            [ 4]  468 	ld	e, l
   025B 29            [11]  469 	add	hl, hl
   025C 29            [11]  470 	add	hl, hl
   025D 19            [11]  471 	add	hl, de
   025E 29            [11]  472 	add	hl, hl
   025F DD 75 FF      [19]  473 	ld	-1 (ix), l
   0262 7A            [ 4]  474 	ld	a, d
   0263 DD 86 FF      [19]  475 	add	a, -1 (ix)
   0266 57            [ 4]  476 	ld	d, a
   0267 C5            [11]  477 	push	bc
   0268 1E 20         [ 7]  478 	ld	e, #0x20
   026A D5            [11]  479 	push	de
   026B 21 00 C0      [10]  480 	ld	hl, #0xc000
   026E E5            [11]  481 	push	hl
   026F CDr00r00      [17]  482 	call	_cpct_getScreenPtr
   0272 11 11 0A      [10]  483 	ld	de, #0x0a11
   0275 D5            [11]  484 	push	de
   0276 3E FF         [ 7]  485 	ld	a, #0xff
   0278 F5            [11]  486 	push	af
   0279 33            [ 6]  487 	inc	sp
   027A E5            [11]  488 	push	hl
   027B CDr00r00      [17]  489 	call	_cpct_drawSolidBox
   027E F1            [10]  490 	pop	af
   027F F1            [10]  491 	pop	af
   0280 33            [ 6]  492 	inc	sp
   0281 C1            [10]  493 	pop	bc
                            494 ;src/gui/gui.c:79: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(menu[iSelect]))/2, (202-nbEntry*10)/2+iSelect*10);
   0282 3E CA         [ 7]  495 	ld	a, #0xca
   0284 91            [ 4]  496 	sub	a, c
   0285 5F            [ 4]  497 	ld	e, a
   0286 3E 00         [ 7]  498 	ld	a, #0x00
   0288 98            [ 4]  499 	sbc	a, b
   0289 57            [ 4]  500 	ld	d, a
   028A 4B            [ 4]  501 	ld	c, e
   028B 42            [ 4]  502 	ld	b, d
   028C CB 7A         [ 8]  503 	bit	7, d
   028E 28 03         [12]  504 	jr	Z,00104$
   0290 4B            [ 4]  505 	ld	c, e
   0291 42            [ 4]  506 	ld	b, d
   0292 03            [ 6]  507 	inc	bc
   0293                     508 00104$:
   0293 CB 28         [ 8]  509 	sra	b
   0295 CB 19         [ 8]  510 	rr	c
   0297 79            [ 4]  511 	ld	a, c
   0298 DD 86 FF      [19]  512 	add	a, -1 (ix)
   029B 5F            [ 4]  513 	ld	e, a
   029C DD 6E 07      [19]  514 	ld	l, 7 (ix)
   029F 26 00         [ 7]  515 	ld	h, #0x00
   02A1 29            [11]  516 	add	hl, hl
   02A2 4D            [ 4]  517 	ld	c, l
   02A3 44            [ 4]  518 	ld	b, h
   02A4 DD 6E 04      [19]  519 	ld	l,4 (ix)
   02A7 DD 66 05      [19]  520 	ld	h,5 (ix)
   02AA 09            [11]  521 	add	hl, bc
   02AB E5            [11]  522 	push	hl
   02AC 4E            [ 7]  523 	ld	c, (hl)
   02AD 23            [ 6]  524 	inc	hl
   02AE 46            [ 7]  525 	ld	b, (hl)
   02AF C5            [11]  526 	push	bc
   02B0 CDr00r00      [17]  527 	call	_strlen
   02B3 F1            [10]  528 	pop	af
   02B4 4D            [ 4]  529 	ld	c, l
   02B5 44            [ 4]  530 	ld	b, h
   02B6 E1            [10]  531 	pop	hl
   02B7 3E 52         [ 7]  532 	ld	a, #0x52
   02B9 91            [ 4]  533 	sub	a, c
   02BA 4F            [ 4]  534 	ld	c, a
   02BB 3E 00         [ 7]  535 	ld	a, #0x00
   02BD 98            [ 4]  536 	sbc	a, b
   02BE 47            [ 4]  537 	ld	b, a
   02BF CB 38         [ 8]  538 	srl	b
   02C1 CB 19         [ 8]  539 	rr	c
   02C3 E5            [11]  540 	push	hl
   02C4 43            [ 4]  541 	ld	b, e
   02C5 C5            [11]  542 	push	bc
   02C6 01 00 C0      [10]  543 	ld	bc, #0xc000
   02C9 C5            [11]  544 	push	bc
   02CA CDr00r00      [17]  545 	call	_cpct_getScreenPtr
   02CD EB            [ 4]  546 	ex	de,hl
   02CE E1            [10]  547 	pop	hl
                            548 ;src/gui/gui.c:80: cpct_drawStringM2 (menu[iSelect], p_video, 0);
   02CF 4E            [ 7]  549 	ld	c, (hl)
   02D0 23            [ 6]  550 	inc	hl
   02D1 46            [ 7]  551 	ld	b, (hl)
   02D2 AF            [ 4]  552 	xor	a, a
   02D3 F5            [11]  553 	push	af
   02D4 33            [ 6]  554 	inc	sp
   02D5 D5            [11]  555 	push	de
   02D6 C5            [11]  556 	push	bc
   02D7 CDr00r00      [17]  557 	call	_cpct_drawStringM2
   02DA F1            [10]  558 	pop	af
   02DB F1            [10]  559 	pop	af
   02DC 33            [ 6]  560 	inc	sp
   02DD 33            [ 6]  561 	inc	sp
   02DE DD E1         [14]  562 	pop	ix
   02E0 C9            [10]  563 	ret
                            564 ;src/gui/gui.c:83: void drawMenuEntry(char **menu, u8 nbEntry, u8 iSelect)
                            565 ;	---------------------------------
                            566 ; Function drawMenuEntry
                            567 ; ---------------------------------
   02E1                     568 _drawMenuEntry::
   02E1 DD E5         [15]  569 	push	ix
   02E3 DD 21 00 00   [14]  570 	ld	ix,#0
   02E7 DD 39         [15]  571 	add	ix,sp
   02E9 21 FA FF      [10]  572 	ld	hl, #-6
   02EC 39            [11]  573 	add	hl, sp
   02ED F9            [ 6]  574 	ld	sp, hl
                            575 ;src/gui/gui.c:90: p_video = cpct_getScreenPtr(SCR_VMEM, 32, (201-nbEntry*10)/2+iSelect*10);
   02EE DD 4E 06      [19]  576 	ld	c,6 (ix)
   02F1 06 00         [ 7]  577 	ld	b,#0x00
   02F3 69            [ 4]  578 	ld	l, c
   02F4 60            [ 4]  579 	ld	h, b
   02F5 29            [11]  580 	add	hl, hl
   02F6 29            [11]  581 	add	hl, hl
   02F7 09            [11]  582 	add	hl, bc
   02F8 29            [11]  583 	add	hl, hl
   02F9 4D            [ 4]  584 	ld	c, l
   02FA 44            [ 4]  585 	ld	b, h
   02FB 3E C9         [ 7]  586 	ld	a, #0xc9
   02FD 91            [ 4]  587 	sub	a, c
   02FE 6F            [ 4]  588 	ld	l, a
   02FF 3E 00         [ 7]  589 	ld	a, #0x00
   0301 98            [ 4]  590 	sbc	a, b
   0302 67            [ 4]  591 	ld	h, a
   0303 5D            [ 4]  592 	ld	e, l
   0304 54            [ 4]  593 	ld	d, h
   0305 CB 7C         [ 8]  594 	bit	7, h
   0307 28 03         [12]  595 	jr	Z,00114$
   0309 5D            [ 4]  596 	ld	e, l
   030A 54            [ 4]  597 	ld	d, h
   030B 13            [ 6]  598 	inc	de
   030C                     599 00114$:
   030C CB 2A         [ 8]  600 	sra	d
   030E CB 1B         [ 8]  601 	rr	e
   0310 53            [ 4]  602 	ld	d, e
   0311 DD 6E 07      [19]  603 	ld	l, 7 (ix)
   0314 5D            [ 4]  604 	ld	e, l
   0315 29            [11]  605 	add	hl, hl
   0316 29            [11]  606 	add	hl, hl
   0317 19            [11]  607 	add	hl, de
   0318 29            [11]  608 	add	hl, hl
   0319 7A            [ 4]  609 	ld	a, d
   031A 85            [ 4]  610 	add	a, l
   031B 57            [ 4]  611 	ld	d, a
   031C C5            [11]  612 	push	bc
   031D 1E 20         [ 7]  613 	ld	e, #0x20
   031F D5            [11]  614 	push	de
   0320 21 00 C0      [10]  615 	ld	hl, #0xc000
   0323 E5            [11]  616 	push	hl
   0324 CDr00r00      [17]  617 	call	_cpct_getScreenPtr
   0327 11 11 0A      [10]  618 	ld	de, #0x0a11
   032A D5            [11]  619 	push	de
   032B AF            [ 4]  620 	xor	a, a
   032C F5            [11]  621 	push	af
   032D 33            [ 6]  622 	inc	sp
   032E E5            [11]  623 	push	hl
   032F CDr00r00      [17]  624 	call	_cpct_drawSolidBox
   0332 F1            [10]  625 	pop	af
   0333 F1            [10]  626 	pop	af
   0334 33            [ 6]  627 	inc	sp
   0335 C1            [10]  628 	pop	bc
                            629 ;src/gui/gui.c:94: for(i=0; i<14000; i++) {}
   0336 11 B0 36      [10]  630 	ld	de, #0x36b0
   0339                     631 00108$:
   0339 1B            [ 6]  632 	dec	de
   033A 7A            [ 4]  633 	ld	a, d
   033B B3            [ 4]  634 	or	a,e
   033C 20 FB         [12]  635 	jr	NZ,00108$
                            636 ;src/gui/gui.c:97: for(i=0; i<nbEntry; i++)
   033E 3E CA         [ 7]  637 	ld	a, #0xca
   0340 91            [ 4]  638 	sub	a, c
   0341 DD 77 FD      [19]  639 	ld	-3 (ix), a
   0344 3E 00         [ 7]  640 	ld	a, #0x00
   0346 98            [ 4]  641 	sbc	a, b
   0347 DD 77 FE      [19]  642 	ld	-2 (ix), a
   034A 07            [ 4]  643 	rlca
   034B E6 01         [ 7]  644 	and	a,#0x01
   034D 5F            [ 4]  645 	ld	e, a
   034E 21 00 00      [10]  646 	ld	hl, #0x0000
   0351 E3            [19]  647 	ex	(sp), hl
   0352                     648 00110$:
   0352 DD 4E 06      [19]  649 	ld	c, 6 (ix)
   0355 06 00         [ 7]  650 	ld	b, #0x00
   0357 DD 7E FA      [19]  651 	ld	a, -6 (ix)
   035A 91            [ 4]  652 	sub	a, c
   035B DD 7E FB      [19]  653 	ld	a, -5 (ix)
   035E 98            [ 4]  654 	sbc	a, b
   035F E2r64r03      [10]  655 	jp	PO, 00146$
   0362 EE 80         [ 7]  656 	xor	a, #0x80
   0364                     657 00146$:
   0364 F2r08r04      [10]  658 	jp	P, 00112$
                            659 ;src/gui/gui.c:99: if(i==iSelect)
   0367 DD 4E 07      [19]  660 	ld	c, 7 (ix)
   036A 06 00         [ 7]  661 	ld	b, #0x00
   036C DD 7E FA      [19]  662 	ld	a, -6 (ix)
   036F 91            [ 4]  663 	sub	a, c
   0370 20 0A         [12]  664 	jr	NZ,00103$
   0372 DD 7E FB      [19]  665 	ld	a, -5 (ix)
   0375 90            [ 4]  666 	sub	a, b
   0376 20 04         [12]  667 	jr	NZ,00103$
                            668 ;src/gui/gui.c:100: penSelected = 1;
   0378 0E 01         [ 7]  669 	ld	c, #0x01
   037A 18 02         [12]  670 	jr	00104$
   037C                     671 00103$:
                            672 ;src/gui/gui.c:102: penSelected = 0;
   037C 0E 00         [ 7]  673 	ld	c, #0x00
   037E                     674 00104$:
                            675 ;src/gui/gui.c:104: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(menu[i]))/2, (202-nbEntry*10)/2+i*10);
   037E DD 6E FD      [19]  676 	ld	l,-3 (ix)
   0381 DD 66 FE      [19]  677 	ld	h,-2 (ix)
   0384 7B            [ 4]  678 	ld	a, e
   0385 B7            [ 4]  679 	or	a, a
   0386 28 07         [12]  680 	jr	Z,00115$
   0388 DD 6E FD      [19]  681 	ld	l,-3 (ix)
   038B DD 66 FE      [19]  682 	ld	h,-2 (ix)
   038E 23            [ 6]  683 	inc	hl
   038F                     684 00115$:
   038F 45            [ 4]  685 	ld	b, l
   0390 CB 2C         [ 8]  686 	sra	h
   0392 CB 18         [ 8]  687 	rr	b
   0394 DD 6E FA      [19]  688 	ld	l, -6 (ix)
   0397 D5            [11]  689 	push	de
   0398 5D            [ 4]  690 	ld	e, l
   0399 29            [11]  691 	add	hl, hl
   039A 29            [11]  692 	add	hl, hl
   039B 19            [11]  693 	add	hl, de
   039C 29            [11]  694 	add	hl, hl
   039D D1            [10]  695 	pop	de
   039E 78            [ 4]  696 	ld	a, b
   039F 85            [ 4]  697 	add	a, l
   03A0 DD 77 FC      [19]  698 	ld	-4 (ix), a
   03A3 DD 46 FA      [19]  699 	ld	b, -6 (ix)
   03A6 DD 56 FB      [19]  700 	ld	d, -5 (ix)
   03A9 CB 20         [ 8]  701 	sla	b
   03AB CB 12         [ 8]  702 	rl	d
   03AD DD 7E 04      [19]  703 	ld	a, 4 (ix)
   03B0 80            [ 4]  704 	add	a, b
   03B1 47            [ 4]  705 	ld	b, a
   03B2 DD 7E 05      [19]  706 	ld	a, 5 (ix)
   03B5 8A            [ 4]  707 	adc	a, d
   03B6 57            [ 4]  708 	ld	d, a
   03B7 68            [ 4]  709 	ld	l, b
   03B8 62            [ 4]  710 	ld	h, d
   03B9 7E            [ 7]  711 	ld	a, (hl)
   03BA 23            [ 6]  712 	inc	hl
   03BB 66            [ 7]  713 	ld	h, (hl)
   03BC 6F            [ 4]  714 	ld	l, a
   03BD C5            [11]  715 	push	bc
   03BE E5            [11]  716 	push	hl
   03BF CDr00r00      [17]  717 	call	_strlen
   03C2 F1            [10]  718 	pop	af
   03C3 C1            [10]  719 	pop	bc
   03C4 3E 52         [ 7]  720 	ld	a, #0x52
   03C6 95            [ 4]  721 	sub	a, l
   03C7 6F            [ 4]  722 	ld	l, a
   03C8 3E 00         [ 7]  723 	ld	a, #0x00
   03CA 9C            [ 4]  724 	sbc	a, h
   03CB 67            [ 4]  725 	ld	h, a
   03CC CB 3C         [ 8]  726 	srl	h
   03CE CB 1D         [ 8]  727 	rr	l
   03D0 DD 75 FF      [19]  728 	ld	-1 (ix), l
   03D3 C5            [11]  729 	push	bc
   03D4 D5            [11]  730 	push	de
   03D5 DD 66 FC      [19]  731 	ld	h, -4 (ix)
   03D8 DD 6E FF      [19]  732 	ld	l, -1 (ix)
   03DB E5            [11]  733 	push	hl
   03DC 21 00 C0      [10]  734 	ld	hl, #0xc000
   03DF E5            [11]  735 	push	hl
   03E0 CDr00r00      [17]  736 	call	_cpct_getScreenPtr
   03E3 D1            [10]  737 	pop	de
   03E4 C1            [10]  738 	pop	bc
                            739 ;src/gui/gui.c:105: cpct_drawStringM2 (menu[i], p_video, penSelected);
   03E5 E5            [11]  740 	push	hl
   03E6 FD E1         [14]  741 	pop	iy
   03E8 68            [ 4]  742 	ld	l, b
   03E9 62            [ 4]  743 	ld	h, d
   03EA 7E            [ 7]  744 	ld	a, (hl)
   03EB 23            [ 6]  745 	inc	hl
   03EC 66            [ 7]  746 	ld	h, (hl)
   03ED 6F            [ 4]  747 	ld	l, a
   03EE D5            [11]  748 	push	de
   03EF 79            [ 4]  749 	ld	a, c
   03F0 F5            [11]  750 	push	af
   03F1 33            [ 6]  751 	inc	sp
   03F2 FD E5         [15]  752 	push	iy
   03F4 E5            [11]  753 	push	hl
   03F5 CDr00r00      [17]  754 	call	_cpct_drawStringM2
   03F8 F1            [10]  755 	pop	af
   03F9 F1            [10]  756 	pop	af
   03FA 33            [ 6]  757 	inc	sp
   03FB D1            [10]  758 	pop	de
                            759 ;src/gui/gui.c:97: for(i=0; i<nbEntry; i++)
   03FC DD 34 FA      [23]  760 	inc	-6 (ix)
   03FF C2r52r03      [10]  761 	jp	NZ,00110$
   0402 DD 34 FB      [23]  762 	inc	-5 (ix)
   0405 C3r52r03      [10]  763 	jp	00110$
   0408                     764 00112$:
   0408 DD F9         [10]  765 	ld	sp, ix
   040A DD E1         [14]  766 	pop	ix
   040C C9            [10]  767 	ret
                            768 ;src/gui/gui.c:109: u8 drawMenu(char **menu, u8 nbEntry)
                            769 ;	---------------------------------
                            770 ; Function drawMenu
                            771 ; ---------------------------------
   040D                     772 _drawMenu::
   040D DD E5         [15]  773 	push	ix
   040F DD 21 00 00   [14]  774 	ld	ix,#0
   0413 DD 39         [15]  775 	add	ix,sp
   0415 F5            [11]  776 	push	af
                            777 ;src/gui/gui.c:112: u8 iSelect=0;
   0416 06 00         [ 7]  778 	ld	b, #0x00
                            779 ;src/gui/gui.c:114: cpct_clearScreen(0b11111111);
   0418 C5            [11]  780 	push	bc
   0419 21 00 40      [10]  781 	ld	hl, #0x4000
   041C E5            [11]  782 	push	hl
   041D 3E FF         [ 7]  783 	ld	a, #0xff
   041F F5            [11]  784 	push	af
   0420 33            [ 6]  785 	inc	sp
   0421 26 C0         [ 7]  786 	ld	h, #0xc0
   0423 E5            [11]  787 	push	hl
   0424 CDr00r00      [17]  788 	call	_cpct_memset
   0427 C1            [10]  789 	pop	bc
                            790 ;src/gui/gui.c:116: drawBoxM2(30,nbEntry*12);
   0428 DD 5E 06      [19]  791 	ld	e,6 (ix)
   042B 16 00         [ 7]  792 	ld	d,#0x00
   042D 6B            [ 4]  793 	ld	l, e
   042E 62            [ 4]  794 	ld	h, d
   042F 29            [11]  795 	add	hl, hl
   0430 19            [11]  796 	add	hl, de
   0431 29            [11]  797 	add	hl, hl
   0432 29            [11]  798 	add	hl, hl
   0433 C5            [11]  799 	push	bc
   0434 E5            [11]  800 	push	hl
   0435 21 1E 00      [10]  801 	ld	hl, #0x001e
   0438 E5            [11]  802 	push	hl
   0439 CDr50r01      [17]  803 	call	_drawBoxM2
   043C F1            [10]  804 	pop	af
   043D F1            [10]  805 	pop	af
   043E AF            [ 4]  806 	xor	a, a
   043F F5            [11]  807 	push	af
   0440 33            [ 6]  808 	inc	sp
   0441 DD 7E 06      [19]  809 	ld	a, 6 (ix)
   0444 F5            [11]  810 	push	af
   0445 33            [ 6]  811 	inc	sp
   0446 DD 6E 04      [19]  812 	ld	l,4 (ix)
   0449 DD 66 05      [19]  813 	ld	h,5 (ix)
   044C E5            [11]  814 	push	hl
   044D CDrE1r02      [17]  815 	call	_drawMenuEntry
   0450 F1            [10]  816 	pop	af
   0451 F1            [10]  817 	pop	af
   0452 C1            [10]  818 	pop	bc
                            819 ;src/gui/gui.c:120: do{
   0453 DD 4E 06      [19]  820 	ld	c, 6 (ix)
   0456 0D            [ 4]  821 	dec	c
   0457                     822 00111$:
                            823 ;src/gui/gui.c:121: cpct_scanKeyboard(); 
   0457 C5            [11]  824 	push	bc
   0458 CDr00r00      [17]  825 	call	_cpct_scanKeyboard
   045B 21 00 01      [10]  826 	ld	hl, #0x0100
   045E CDr00r00      [17]  827 	call	_cpct_isKeyPressed
   0461 C1            [10]  828 	pop	bc
   0462 7D            [ 4]  829 	ld	a, l
   0463 B7            [ 4]  830 	or	a, a
   0464 28 32         [12]  831 	jr	Z,00105$
                            832 ;src/gui/gui.c:125: EraseMenuEntry(menu, nbEntry, iSelect);
   0466 C5            [11]  833 	push	bc
   0467 C5            [11]  834 	push	bc
   0468 33            [ 6]  835 	inc	sp
   0469 DD 7E 06      [19]  836 	ld	a, 6 (ix)
   046C F5            [11]  837 	push	af
   046D 33            [ 6]  838 	inc	sp
   046E DD 6E 04      [19]  839 	ld	l,4 (ix)
   0471 DD 66 05      [19]  840 	ld	h,5 (ix)
   0474 E5            [11]  841 	push	hl
   0475 CDr2Br02      [17]  842 	call	_EraseMenuEntry
   0478 F1            [10]  843 	pop	af
   0479 F1            [10]  844 	pop	af
   047A C1            [10]  845 	pop	bc
                            846 ;src/gui/gui.c:127: if(iSelect ==0)
   047B 78            [ 4]  847 	ld	a, b
   047C B7            [ 4]  848 	or	a, a
   047D 20 03         [12]  849 	jr	NZ,00102$
                            850 ;src/gui/gui.c:128: iSelect = nbEntry-1;
   047F 41            [ 4]  851 	ld	b, c
   0480 18 01         [12]  852 	jr	00103$
   0482                     853 00102$:
                            854 ;src/gui/gui.c:130: iSelect--;
   0482 05            [ 4]  855 	dec	b
   0483                     856 00103$:
                            857 ;src/gui/gui.c:132: drawMenuEntry(menu, nbEntry, iSelect);
   0483 C5            [11]  858 	push	bc
   0484 C5            [11]  859 	push	bc
   0485 33            [ 6]  860 	inc	sp
   0486 DD 7E 06      [19]  861 	ld	a, 6 (ix)
   0489 F5            [11]  862 	push	af
   048A 33            [ 6]  863 	inc	sp
   048B DD 6E 04      [19]  864 	ld	l,4 (ix)
   048E DD 66 05      [19]  865 	ld	h,5 (ix)
   0491 E5            [11]  866 	push	hl
   0492 CDrE1r02      [17]  867 	call	_drawMenuEntry
   0495 F1            [10]  868 	pop	af
   0496 F1            [10]  869 	pop	af
   0497 C1            [10]  870 	pop	bc
   0498                     871 00105$:
                            872 ;src/gui/gui.c:135: if ( cpct_isKeyPressed(Key_CursorDown) )
   0498 C5            [11]  873 	push	bc
   0499 21 00 04      [10]  874 	ld	hl, #0x0400
   049C CDr00r00      [17]  875 	call	_cpct_isKeyPressed
   049F 5D            [ 4]  876 	ld	e, l
   04A0 C1            [10]  877 	pop	bc
   04A1 7B            [ 4]  878 	ld	a, e
   04A2 B7            [ 4]  879 	or	a, a
   04A3 28 48         [12]  880 	jr	Z,00112$
                            881 ;src/gui/gui.c:137: EraseMenuEntry(menu, nbEntry, iSelect);
   04A5 C5            [11]  882 	push	bc
   04A6 C5            [11]  883 	push	bc
   04A7 33            [ 6]  884 	inc	sp
   04A8 DD 7E 06      [19]  885 	ld	a, 6 (ix)
   04AB F5            [11]  886 	push	af
   04AC 33            [ 6]  887 	inc	sp
   04AD DD 6E 04      [19]  888 	ld	l,4 (ix)
   04B0 DD 66 05      [19]  889 	ld	h,5 (ix)
   04B3 E5            [11]  890 	push	hl
   04B4 CDr2Br02      [17]  891 	call	_EraseMenuEntry
   04B7 F1            [10]  892 	pop	af
   04B8 F1            [10]  893 	pop	af
   04B9 C1            [10]  894 	pop	bc
                            895 ;src/gui/gui.c:139: if(iSelect == nbEntry-1)
   04BA DD 5E 06      [19]  896 	ld	e, 6 (ix)
   04BD 16 00         [ 7]  897 	ld	d, #0x00
   04BF 1B            [ 6]  898 	dec	de
   04C0 DD 70 FE      [19]  899 	ld	-2 (ix), b
   04C3 DD 36 FF 00   [19]  900 	ld	-1 (ix), #0x00
   04C7 7B            [ 4]  901 	ld	a, e
   04C8 DD 96 FE      [19]  902 	sub	a, -2 (ix)
   04CB 20 0A         [12]  903 	jr	NZ,00107$
   04CD 7A            [ 4]  904 	ld	a, d
   04CE DD 96 FF      [19]  905 	sub	a, -1 (ix)
   04D1 20 04         [12]  906 	jr	NZ,00107$
                            907 ;src/gui/gui.c:140: iSelect = 0;
   04D3 06 00         [ 7]  908 	ld	b, #0x00
   04D5 18 01         [12]  909 	jr	00108$
   04D7                     910 00107$:
                            911 ;src/gui/gui.c:142: iSelect++;
   04D7 04            [ 4]  912 	inc	b
   04D8                     913 00108$:
                            914 ;src/gui/gui.c:144: drawMenuEntry(menu, nbEntry, iSelect);
   04D8 C5            [11]  915 	push	bc
   04D9 C5            [11]  916 	push	bc
   04DA 33            [ 6]  917 	inc	sp
   04DB DD 7E 06      [19]  918 	ld	a, 6 (ix)
   04DE F5            [11]  919 	push	af
   04DF 33            [ 6]  920 	inc	sp
   04E0 DD 6E 04      [19]  921 	ld	l,4 (ix)
   04E3 DD 66 05      [19]  922 	ld	h,5 (ix)
   04E6 E5            [11]  923 	push	hl
   04E7 CDrE1r02      [17]  924 	call	_drawMenuEntry
   04EA F1            [10]  925 	pop	af
   04EB F1            [10]  926 	pop	af
   04EC C1            [10]  927 	pop	bc
   04ED                     928 00112$:
                            929 ;src/gui/gui.c:147: while(!cpct_isKeyPressed(Key_Return));
   04ED C5            [11]  930 	push	bc
   04EE 21 02 04      [10]  931 	ld	hl, #0x0402
   04F1 CDr00r00      [17]  932 	call	_cpct_isKeyPressed
   04F4 C1            [10]  933 	pop	bc
   04F5 7D            [ 4]  934 	ld	a, l
   04F6 B7            [ 4]  935 	or	a, a
   04F7 CAr57r04      [10]  936 	jp	Z, 00111$
                            937 ;src/gui/gui.c:150: for(i=0; i<14000; i++) {}
   04FA 11 B0 36      [10]  938 	ld	de, #0x36b0
   04FD                     939 00117$:
   04FD EB            [ 4]  940 	ex	de,hl
   04FE 2B            [ 6]  941 	dec	hl
   04FF 5D            [ 4]  942 	ld	e, l
   0500 7C            [ 4]  943 	ld	a,h
   0501 57            [ 4]  944 	ld	d,a
   0502 B5            [ 4]  945 	or	a,l
   0503 20 F8         [12]  946 	jr	NZ,00117$
                            947 ;src/gui/gui.c:152: return iSelect;
   0505 68            [ 4]  948 	ld	l, b
   0506 DD F9         [10]  949 	ld	sp, ix
   0508 DD E1         [14]  950 	pop	ix
   050A C9            [10]  951 	ret
                            952 ;src/gui/gui.c:162: u8 drawWindow(char **text, u8 nbLine, u8 button)
                            953 ;	---------------------------------
                            954 ; Function drawWindow
                            955 ; ---------------------------------
   050B                     956 _drawWindow::
   050B DD E5         [15]  957 	push	ix
   050D DD 21 00 00   [14]  958 	ld	ix,#0
   0511 DD 39         [15]  959 	add	ix,sp
   0513 21 F8 FF      [10]  960 	ld	hl, #-8
   0516 39            [11]  961 	add	hl, sp
   0517 F9            [ 6]  962 	ld	sp, hl
                            963 ;src/gui/gui.c:166: u8 valueReturn=0;
   0518 DD 36 F8 00   [19]  964 	ld	-8 (ix), #0x00
                            965 ;src/gui/gui.c:169: if(button == 0)
   051C DD 7E 07      [19]  966 	ld	a, 7 (ix)
   051F B7            [ 4]  967 	or	a, a
   0520 20 05         [12]  968 	jr	NZ,00102$
                            969 ;src/gui/gui.c:170: buttonTxt = "<OK>";
   0522 11r88r06      [10]  970 	ld	de, #___str_0+0
   0525 18 03         [12]  971 	jr	00103$
   0527                     972 00102$:
                            973 ;src/gui/gui.c:172: buttonTxt = "<OK>  <Cancel>";
   0527 11r8Dr06      [10]  974 	ld	de, #___str_1
   052A                     975 00103$:
                            976 ;src/gui/gui.c:174: drawBoxM2(50,(nbLine+2)*12);
   052A DD 4E 06      [19]  977 	ld	c, 6 (ix)
   052D 06 00         [ 7]  978 	ld	b, #0x00
   052F 03            [ 6]  979 	inc	bc
   0530 03            [ 6]  980 	inc	bc
   0531 69            [ 4]  981 	ld	l, c
   0532 60            [ 4]  982 	ld	h, b
   0533 29            [11]  983 	add	hl, hl
   0534 09            [11]  984 	add	hl, bc
   0535 29            [11]  985 	add	hl, hl
   0536 29            [11]  986 	add	hl, hl
   0537 C5            [11]  987 	push	bc
   0538 D5            [11]  988 	push	de
   0539 E5            [11]  989 	push	hl
   053A 21 32 00      [10]  990 	ld	hl, #0x0032
   053D E5            [11]  991 	push	hl
   053E CDr50r01      [17]  992 	call	_drawBoxM2
   0541 F1            [10]  993 	pop	af
   0542 F1            [10]  994 	pop	af
   0543 D1            [10]  995 	pop	de
   0544 C1            [10]  996 	pop	bc
                            997 ;src/gui/gui.c:176: for(i=0; i<nbLine; i++)
   0545 69            [ 4]  998 	ld	l, c
   0546 60            [ 4]  999 	ld	h, b
   0547 29            [11] 1000 	add	hl, hl
   0548 29            [11] 1001 	add	hl, hl
   0549 09            [11] 1002 	add	hl, bc
   054A 29            [11] 1003 	add	hl, hl
   054B 3E CA         [ 7] 1004 	ld	a, #0xca
   054D 95            [ 4] 1005 	sub	a, l
   054E DD 77 F9      [19] 1006 	ld	-7 (ix), a
   0551 3E 00         [ 7] 1007 	ld	a, #0x00
   0553 9C            [ 4] 1008 	sbc	a, h
   0554 DD 77 FA      [19] 1009 	ld	-6 (ix), a
   0557 07            [ 4] 1010 	rlca
   0558 E6 01         [ 7] 1011 	and	a,#0x01
   055A DD 77 FD      [19] 1012 	ld	-3 (ix), a
   055D 0E 00         [ 7] 1013 	ld	c, #0x00
   055F                    1014 00114$:
                           1015 ;src/gui/gui.c:178: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(text[i]))/2, (202-(nbLine+2)*10)/2+i*10);
   055F DD 7E F9      [19] 1016 	ld	a, -7 (ix)
   0562 C6 01         [ 7] 1017 	add	a, #0x01
   0564 DD 77 FB      [19] 1018 	ld	-5 (ix), a
   0567 DD 7E FA      [19] 1019 	ld	a, -6 (ix)
   056A CE 00         [ 7] 1020 	adc	a, #0x00
   056C DD 77 FC      [19] 1021 	ld	-4 (ix), a
                           1022 ;src/gui/gui.c:176: for(i=0; i<nbLine; i++)
   056F 79            [ 4] 1023 	ld	a, c
   0570 DD 96 06      [19] 1024 	sub	a, 6 (ix)
   0573 D2rFFr05      [10] 1025 	jp	NC, 00104$
                           1026 ;src/gui/gui.c:178: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(text[i]))/2, (202-(nbLine+2)*10)/2+i*10);
   0576 DD 6E F9      [19] 1027 	ld	l, -7 (ix)
   0579 DD 46 FA      [19] 1028 	ld	b, -6 (ix)
   057C DD 7E FD      [19] 1029 	ld	a, -3 (ix)
   057F B7            [ 4] 1030 	or	a, a
   0580 28 06         [12] 1031 	jr	Z,00118$
   0582 DD 6E FB      [19] 1032 	ld	l, -5 (ix)
   0585 DD 46 FC      [19] 1033 	ld	b, -4 (ix)
   0588                    1034 00118$:
   0588 CB 28         [ 8] 1035 	sra	b
   058A CB 1D         [ 8] 1036 	rr	l
   058C 45            [ 4] 1037 	ld	b, l
   058D 69            [ 4] 1038 	ld	l, c
   058E 29            [11] 1039 	add	hl, hl
   058F 29            [11] 1040 	add	hl, hl
   0590 09            [11] 1041 	add	hl, bc
   0591 29            [11] 1042 	add	hl, hl
   0592 78            [ 4] 1043 	ld	a, b
   0593 85            [ 4] 1044 	add	a, l
   0594 47            [ 4] 1045 	ld	b, a
   0595 69            [ 4] 1046 	ld	l, c
   0596 26 00         [ 7] 1047 	ld	h, #0x00
   0598 29            [11] 1048 	add	hl, hl
   0599 DD 75 FE      [19] 1049 	ld	-2 (ix), l
   059C DD 74 FF      [19] 1050 	ld	-1 (ix), h
   059F DD 7E 04      [19] 1051 	ld	a, 4 (ix)
   05A2 DD 86 FE      [19] 1052 	add	a, -2 (ix)
   05A5 DD 77 FE      [19] 1053 	ld	-2 (ix), a
   05A8 DD 7E 05      [19] 1054 	ld	a, 5 (ix)
   05AB DD 8E FF      [19] 1055 	adc	a, -1 (ix)
   05AE DD 77 FF      [19] 1056 	ld	-1 (ix), a
   05B1 DD 6E FE      [19] 1057 	ld	l,-2 (ix)
   05B4 DD 66 FF      [19] 1058 	ld	h,-1 (ix)
   05B7 7E            [ 7] 1059 	ld	a, (hl)
   05B8 23            [ 6] 1060 	inc	hl
   05B9 66            [ 7] 1061 	ld	h, (hl)
   05BA 6F            [ 4] 1062 	ld	l, a
   05BB C5            [11] 1063 	push	bc
   05BC E5            [11] 1064 	push	hl
   05BD CDr00r00      [17] 1065 	call	_strlen
   05C0 F1            [10] 1066 	pop	af
   05C1 C1            [10] 1067 	pop	bc
   05C2 3E 52         [ 7] 1068 	ld	a, #0x52
   05C4 95            [ 4] 1069 	sub	a, l
   05C5 6F            [ 4] 1070 	ld	l, a
   05C6 3E 00         [ 7] 1071 	ld	a, #0x00
   05C8 9C            [ 4] 1072 	sbc	a, h
   05C9 67            [ 4] 1073 	ld	h, a
   05CA CB 3C         [ 8] 1074 	srl	h
   05CC CB 1D         [ 8] 1075 	rr	l
   05CE 7D            [ 4] 1076 	ld	a, l
   05CF C5            [11] 1077 	push	bc
   05D0 D5            [11] 1078 	push	de
   05D1 C5            [11] 1079 	push	bc
   05D2 33            [ 6] 1080 	inc	sp
   05D3 F5            [11] 1081 	push	af
   05D4 33            [ 6] 1082 	inc	sp
   05D5 21 00 C0      [10] 1083 	ld	hl, #0xc000
   05D8 E5            [11] 1084 	push	hl
   05D9 CDr00r00      [17] 1085 	call	_cpct_getScreenPtr
   05DC D1            [10] 1086 	pop	de
   05DD C1            [10] 1087 	pop	bc
                           1088 ;src/gui/gui.c:179: cpct_drawStringM2 (text[i], p_video, 0);
   05DE E5            [11] 1089 	push	hl
   05DF FD E1         [14] 1090 	pop	iy
   05E1 DD 6E FE      [19] 1091 	ld	l,-2 (ix)
   05E4 DD 66 FF      [19] 1092 	ld	h,-1 (ix)
   05E7 7E            [ 7] 1093 	ld	a, (hl)
   05E8 23            [ 6] 1094 	inc	hl
   05E9 66            [ 7] 1095 	ld	h, (hl)
   05EA 6F            [ 4] 1096 	ld	l, a
   05EB C5            [11] 1097 	push	bc
   05EC D5            [11] 1098 	push	de
   05ED AF            [ 4] 1099 	xor	a, a
   05EE F5            [11] 1100 	push	af
   05EF 33            [ 6] 1101 	inc	sp
   05F0 FD E5         [15] 1102 	push	iy
   05F2 E5            [11] 1103 	push	hl
   05F3 CDr00r00      [17] 1104 	call	_cpct_drawStringM2
   05F6 F1            [10] 1105 	pop	af
   05F7 F1            [10] 1106 	pop	af
   05F8 33            [ 6] 1107 	inc	sp
   05F9 D1            [10] 1108 	pop	de
   05FA C1            [10] 1109 	pop	bc
                           1110 ;src/gui/gui.c:176: for(i=0; i<nbLine; i++)
   05FB 0C            [ 4] 1111 	inc	c
   05FC C3r5Fr05      [10] 1112 	jp	00114$
   05FF                    1113 00104$:
                           1114 ;src/gui/gui.c:182: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(buttonTxt))/2, (202-(nbLine+2)*10)/2+(nbLine+1)*10);
   05FF DD 46 F9      [19] 1115 	ld	b, -7 (ix)
   0602 DD 4E FA      [19] 1116 	ld	c, -6 (ix)
   0605 DD 7E FD      [19] 1117 	ld	a, -3 (ix)
   0608 B7            [ 4] 1118 	or	a, a
   0609 28 06         [12] 1119 	jr	Z,00119$
   060B DD 46 FB      [19] 1120 	ld	b, -5 (ix)
   060E DD 4E FC      [19] 1121 	ld	c, -4 (ix)
   0611                    1122 00119$:
   0611 CB 29         [ 8] 1123 	sra	c
   0613 CB 18         [ 8] 1124 	rr	b
   0615 DD 4E 06      [19] 1125 	ld	c, 6 (ix)
   0618 0C            [ 4] 1126 	inc	c
   0619 69            [ 4] 1127 	ld	l, c
   061A 29            [11] 1128 	add	hl, hl
   061B 29            [11] 1129 	add	hl, hl
   061C 09            [11] 1130 	add	hl, bc
   061D 29            [11] 1131 	add	hl, hl
   061E 78            [ 4] 1132 	ld	a, b
   061F 85            [ 4] 1133 	add	a, l
   0620 47            [ 4] 1134 	ld	b, a
   0621 C5            [11] 1135 	push	bc
   0622 D5            [11] 1136 	push	de
   0623 CDr00r00      [17] 1137 	call	_strlen
   0626 F1            [10] 1138 	pop	af
   0627 C1            [10] 1139 	pop	bc
   0628 3E 52         [ 7] 1140 	ld	a, #0x52
   062A 95            [ 4] 1141 	sub	a, l
   062B 6F            [ 4] 1142 	ld	l, a
   062C 3E 00         [ 7] 1143 	ld	a, #0x00
   062E 9C            [ 4] 1144 	sbc	a, h
   062F 67            [ 4] 1145 	ld	h, a
   0630 CB 3C         [ 8] 1146 	srl	h
   0632 CB 1D         [ 8] 1147 	rr	l
   0634 7D            [ 4] 1148 	ld	a, l
   0635 D5            [11] 1149 	push	de
   0636 C5            [11] 1150 	push	bc
   0637 33            [ 6] 1151 	inc	sp
   0638 F5            [11] 1152 	push	af
   0639 33            [ 6] 1153 	inc	sp
   063A 21 00 C0      [10] 1154 	ld	hl, #0xc000
   063D E5            [11] 1155 	push	hl
   063E CDr00r00      [17] 1156 	call	_cpct_getScreenPtr
   0641 D1            [10] 1157 	pop	de
                           1158 ;src/gui/gui.c:183: cpct_drawStringM2 (buttonTxt, p_video, 0);
   0642 AF            [ 4] 1159 	xor	a, a
   0643 F5            [11] 1160 	push	af
   0644 33            [ 6] 1161 	inc	sp
   0645 E5            [11] 1162 	push	hl
   0646 D5            [11] 1163 	push	de
   0647 CDr00r00      [17] 1164 	call	_cpct_drawStringM2
   064A F1            [10] 1165 	pop	af
   064B F1            [10] 1166 	pop	af
   064C 33            [ 6] 1167 	inc	sp
                           1168 ;src/gui/gui.c:186: do{
   064D                    1169 00110$:
                           1170 ;src/gui/gui.c:187: cpct_scanKeyboard(); 
   064D CDr00r00      [17] 1171 	call	_cpct_scanKeyboard
                           1172 ;src/gui/gui.c:189: if ( cpct_isKeyPressed(Key_Return) )
   0650 21 02 04      [10] 1173 	ld	hl, #0x0402
   0653 CDr00r00      [17] 1174 	call	_cpct_isKeyPressed
   0656 7D            [ 4] 1175 	ld	a, l
   0657 B7            [ 4] 1176 	or	a, a
   0658 28 04         [12] 1177 	jr	Z,00106$
                           1178 ;src/gui/gui.c:190: valueReturn=1;
   065A DD 36 F8 01   [19] 1179 	ld	-8 (ix), #0x01
   065E                    1180 00106$:
                           1181 ;src/gui/gui.c:192: if ( cpct_isKeyPressed(Key_Esc) )
   065E 21 08 04      [10] 1182 	ld	hl, #0x0408
   0661 CDr00r00      [17] 1183 	call	_cpct_isKeyPressed
   0664 7D            [ 4] 1184 	ld	a, l
   0665 B7            [ 4] 1185 	or	a, a
   0666 28 04         [12] 1186 	jr	Z,00111$
                           1187 ;src/gui/gui.c:193: valueReturn=0;
   0668 DD 36 F8 00   [19] 1188 	ld	-8 (ix), #0x00
   066C                    1189 00111$:
                           1190 ;src/gui/gui.c:195: while(!cpct_isKeyPressed(Key_Return) && !cpct_isKeyPressed(Key_Esc));
   066C 21 02 04      [10] 1191 	ld	hl, #0x0402
   066F CDr00r00      [17] 1192 	call	_cpct_isKeyPressed
   0672 7D            [ 4] 1193 	ld	a, l
   0673 B7            [ 4] 1194 	or	a, a
   0674 20 0A         [12] 1195 	jr	NZ,00112$
   0676 21 08 04      [10] 1196 	ld	hl, #0x0408
   0679 CDr00r00      [17] 1197 	call	_cpct_isKeyPressed
   067C 7D            [ 4] 1198 	ld	a, l
   067D B7            [ 4] 1199 	or	a, a
   067E 28 CD         [12] 1200 	jr	Z,00110$
   0680                    1201 00112$:
                           1202 ;src/gui/gui.c:197: return valueReturn;
   0680 DD 6E F8      [19] 1203 	ld	l, -8 (ix)
   0683 DD F9         [10] 1204 	ld	sp, ix
   0685 DD E1         [14] 1205 	pop	ix
   0687 C9            [10] 1206 	ret
   0688                    1207 ___str_0:
   0688 3C 4F 4B 3E        1208 	.ascii "<OK>"
   068C 00                 1209 	.db 0x00
   068D                    1210 ___str_1:
   068D 3C 4F 4B 3E 20 20  1211 	.ascii "<OK>  <Cancel>"
        3C 43 61 6E 63 65
        6C 3E
   069B 00                 1212 	.db 0x00
                           1213 	.area _CODE
                           1214 	.area _INITIALIZER
                           1215 	.area _CABS (ABS)
