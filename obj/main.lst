                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _game
                             13 	.globl _drawWindow
                             14 	.globl _drawMenu
                             15 	.globl _putM2
                             16 	.globl _cpct_setPALColour
                             17 	.globl _cpct_fw2hw
                             18 	.globl _cpct_setVideoMode
                             19 	.globl _cpct_disableFirmware
                             20 	.globl _cpct_reenableFirmware
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _INITIALIZED
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _HOME
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 ;src/main.c:11: void main(void)
                             53 ;	---------------------------------
                             54 ; Function main
                             55 ; ---------------------------------
   0000                      56 _main::
   0000 DD E5         [15]   57 	push	ix
   0002 DD 21 00 00   [14]   58 	ld	ix,#0
   0006 DD 39         [15]   59 	add	ix,sp
   0008 21 EE FF      [10]   60 	ld	hl, #-18
   000B 39            [11]   61 	add	hl, sp
   000C F9            [ 6]   62 	ld	sp, hl
                             63 ;src/main.c:16: const char *menuMain[] = { 
   000D 21 06 00      [10]   64 	ld	hl, #0x0006
   0010 39            [11]   65 	add	hl, sp
   0011 DD 75 FC      [19]   66 	ld	-4 (ix), l
   0014 DD 74 FD      [19]   67 	ld	-3 (ix), h
   0017 36rE7         [10]   68 	ld	(hl), #<(___str_0)
   0019 23            [ 6]   69 	inc	hl
   001A 36s00         [10]   70 	ld	(hl), #>(___str_0)
   001C DD 6E FC      [19]   71 	ld	l,-4 (ix)
   001F DD 66 FD      [19]   72 	ld	h,-3 (ix)
   0022 23            [ 6]   73 	inc	hl
   0023 23            [ 6]   74 	inc	hl
   0024 01rF0r00      [10]   75 	ld	bc, #___str_1+0
   0027 71            [ 7]   76 	ld	(hl), c
   0028 23            [ 6]   77 	inc	hl
   0029 70            [ 7]   78 	ld	(hl), b
   002A DD 7E FC      [19]   79 	ld	a, -4 (ix)
   002D C6 04         [ 7]   80 	add	a, #0x04
   002F 6F            [ 4]   81 	ld	l, a
   0030 DD 7E FD      [19]   82 	ld	a, -3 (ix)
   0033 CE 00         [ 7]   83 	adc	a, #0x00
   0035 67            [ 4]   84 	ld	h, a
   0036 01rF8r00      [10]   85 	ld	bc, #___str_2+0
   0039 71            [ 7]   86 	ld	(hl), c
   003A 23            [ 6]   87 	inc	hl
   003B 70            [ 7]   88 	ld	(hl), b
                             89 ;src/main.c:22: const char *windowCredit[] = { 
   003C 21 00 00      [10]   90 	ld	hl, #0x0000
   003F 39            [11]   91 	add	hl, sp
   0040 4D            [ 4]   92 	ld	c,l
   0041 44            [ 4]   93 	ld	b,h
   0042 36rFD         [10]   94 	ld	(hl), #<(___str_3)
   0044 23            [ 6]   95 	inc	hl
   0045 36s00         [10]   96 	ld	(hl), #>(___str_3)
   0047 69            [ 4]   97 	ld	l, c
   0048 60            [ 4]   98 	ld	h, b
   0049 23            [ 6]   99 	inc	hl
   004A 23            [ 6]  100 	inc	hl
   004B 11r06r01      [10]  101 	ld	de, #___str_4+0
   004E 73            [ 7]  102 	ld	(hl), e
   004F 23            [ 6]  103 	inc	hl
   0050 72            [ 7]  104 	ld	(hl), d
   0051 21 04 00      [10]  105 	ld	hl, #0x0004
   0054 09            [11]  106 	add	hl, bc
   0055 11r07r01      [10]  107 	ld	de, #___str_5+0
   0058 73            [ 7]  108 	ld	(hl), e
   0059 23            [ 6]  109 	inc	hl
   005A 72            [ 7]  110 	ld	(hl), d
                            111 ;src/main.c:28: firmware = cpct_disableFirmware();
   005B C5            [11]  112 	push	bc
   005C CDr00r00      [17]  113 	call	_cpct_disableFirmware
   005F C1            [10]  114 	pop	bc
   0060 DD 75 FA      [19]  115 	ld	-6 (ix), l
   0063 DD 74 FB      [19]  116 	ld	-5 (ix), h
                            117 ;src/main.c:30: cpct_fw2hw(paletteTrains, 16);
   0066 C5            [11]  118 	push	bc
   0067 21 10 00      [10]  119 	ld	hl, #0x0010
   006A E5            [11]  120 	push	hl
   006B 21r00r00      [10]  121 	ld	hl, #_paletteTrains
   006E E5            [11]  122 	push	hl
   006F CDr00r00      [17]  123 	call	_cpct_fw2hw
   0072 21 02 00      [10]  124 	ld	hl, #0x0002
   0075 E5            [11]  125 	push	hl
   0076 21r00r00      [10]  126 	ld	hl, #_paletteMenusM2
   0079 E5            [11]  127 	push	hl
   007A CDr00r00      [17]  128 	call	_cpct_fw2hw
   007D 21 04 00      [10]  129 	ld	hl, #0x0004
   0080 E5            [11]  130 	push	hl
   0081 21r00r00      [10]  131 	ld	hl, #_paletteMenusM1
   0084 E5            [11]  132 	push	hl
   0085 CDr00r00      [17]  133 	call	_cpct_fw2hw
   0088 C1            [10]  134 	pop	bc
                            135 ;src/main.c:34: cpct_setBorder(paletteTrains[12]);
   0089 21r0Cr00      [10]  136 	ld	hl, #_paletteTrains + 12
   008C 56            [ 7]  137 	ld	d, (hl)
   008D C5            [11]  138 	push	bc
   008E 1E 10         [ 7]  139 	ld	e, #0x10
   0090 D5            [11]  140 	push	de
   0091 CDr00r00      [17]  141 	call	_cpct_setPALColour
   0094 CDr00r00      [17]  142 	call	_putM2
   0097 C1            [10]  143 	pop	bc
                            144 ;src/main.c:38: do{
   0098 DD 71 FE      [19]  145 	ld	-2 (ix), c
   009B DD 70 FF      [19]  146 	ld	-1 (ix), b
   009E                     147 00105$:
                            148 ;src/main.c:39: menuChoice = drawMenu(menuMain,3);
   009E DD 4E FC      [19]  149 	ld	c,-4 (ix)
   00A1 DD 46 FD      [19]  150 	ld	b,-3 (ix)
   00A4 3E 03         [ 7]  151 	ld	a, #0x03
   00A6 F5            [11]  152 	push	af
   00A7 33            [ 6]  153 	inc	sp
   00A8 C5            [11]  154 	push	bc
   00A9 CDr00r00      [17]  155 	call	_drawMenu
   00AC F1            [10]  156 	pop	af
   00AD 33            [ 6]  157 	inc	sp
                            158 ;src/main.c:41: if(menuChoice==0)
   00AE 7D            [ 4]  159 	ld	a, l
   00AF B7            [ 4]  160 	or	a, a
   00B0 20 08         [12]  161 	jr	NZ,00102$
                            162 ;src/main.c:43: game();
   00B2 E5            [11]  163 	push	hl
   00B3 CDr00r00      [17]  164 	call	_game
   00B6 CDr00r00      [17]  165 	call	_putM2
   00B9 E1            [10]  166 	pop	hl
   00BA                     167 00102$:
                            168 ;src/main.c:48: if(menuChoice==1)
   00BA 7D            [ 4]  169 	ld	a, l
   00BB 3D            [ 4]  170 	dec	a
   00BC 20 12         [12]  171 	jr	NZ,00106$
                            172 ;src/main.c:49: drawWindow(windowCredit,3,0);
   00BE DD 4E FE      [19]  173 	ld	c,-2 (ix)
   00C1 DD 46 FF      [19]  174 	ld	b,-1 (ix)
   00C4 E5            [11]  175 	push	hl
   00C5 11 03 00      [10]  176 	ld	de, #0x0003
   00C8 D5            [11]  177 	push	de
   00C9 C5            [11]  178 	push	bc
   00CA CDr00r00      [17]  179 	call	_drawWindow
   00CD F1            [10]  180 	pop	af
   00CE F1            [10]  181 	pop	af
   00CF E1            [10]  182 	pop	hl
   00D0                     183 00106$:
                            184 ;src/main.c:51: while(menuChoice!=2);
   00D0 7D            [ 4]  185 	ld	a, l
                            186 ;src/main.c:53: cpct_setVideoMode(0);
   00D1 D6 02         [ 7]  187 	sub	a,#0x02
   00D3 20 C9         [12]  188 	jr	NZ,00105$
   00D5 6F            [ 4]  189 	ld	l,a
   00D6 CDr00r00      [17]  190 	call	_cpct_setVideoMode
                            191 ;src/main.c:54: cpct_reenableFirmware(firmware);
   00D9 DD 6E FA      [19]  192 	ld	l,-6 (ix)
   00DC DD 66 FB      [19]  193 	ld	h,-5 (ix)
   00DF CDr00r00      [17]  194 	call	_cpct_reenableFirmware
   00E2 DD F9         [10]  195 	ld	sp, ix
   00E4 DD E1         [14]  196 	pop	ix
   00E6 C9            [10]  197 	ret
   00E7                     198 ___str_0:
   00E7 4E 65 77 20 67 61   199 	.ascii "New game"
        6D 65
   00EF 00                  200 	.db 0x00
   00F0                     201 ___str_1:
   00F0 43 72 65 64 69 74   202 	.ascii "Credits"
        73
   00F7 00                  203 	.db 0x00
   00F8                     204 ___str_2:
   00F8 51 75 69 74         205 	.ascii "Quit"
   00FC 00                  206 	.db 0x00
   00FD                     207 ___str_3:
   00FD 52 61 69 6C 77 61   208 	.ascii "Railways"
        79 73
   0105 00                  209 	.db 0x00
   0106                     210 ___str_4:
   0106 00                  211 	.db 0x00
   0107                     212 ___str_5:
   0107 54 72 65 77 64 62   213 	.ascii "Trewdbal  Productions 2016"
        61 6C 20 20 50 72
        6F 64 75 63 74 69
        6F 6E 73 20 32 30
        31 36
   0121 00                  214 	.db 0x00
                            215 	.area _CODE
                            216 	.area _INITIALIZER
                            217 	.area _CABS (ABS)
