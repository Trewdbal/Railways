                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.4 #9329 (Linux)
                              4 ; This file was generated Sun Jan 31 17:17:31 2016
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _drawTrain
                             14 	.globl _game
                             15 	.globl _menuTile
                             16 	.globl _drawWorld
                             17 	.globl _drawTile
                             18 	.globl _generateWorld
                             19 	.globl _drawCursor
                             20 	.globl _drawWindow
                             21 	.globl _drawMenu
                             22 	.globl _drawMenuEntry
                             23 	.globl _EraseMenuEntry
                             24 	.globl _drawBoxM2
                             25 	.globl _drawBoxM0
                             26 	.globl _putM2
                             27 	.globl _putM1
                             28 	.globl _putM0
                             29 	.globl _strlen
                             30 	.globl _cpct_setRandomSeedUniform_u8
                             31 	.globl _cpct_getRandomUniform_u8_f
                             32 	.globl _cpct_getScreenPtr
                             33 	.globl _cpct_setPALColour
                             34 	.globl _cpct_setPalette
                             35 	.globl _cpct_fw2hw
                             36 	.globl _cpct_setVideoMode
                             37 	.globl _cpct_drawStringM2
                             38 	.globl _cpct_drawSolidBox
                             39 	.globl _cpct_drawSprite
                             40 	.globl _cpct_px2byteM1
                             41 	.globl _cpct_px2byteM0
                             42 	.globl _cpct_isKeyPressed
                             43 	.globl _cpct_scanKeyboard
                             44 	.globl _cpct_memset
                             45 	.globl _cpct_disableFirmware
                             46 	.globl _cpct_reenableFirmware
                             47 	.globl _livestock
                             48 	.globl _farm2
                             49 	.globl _farm1
                             50 	.globl _water
                             51 	.globl _dwellings3
                             52 	.globl _dwellings2
                             53 	.globl _dwellings1
                             54 	.globl _forest
                             55 	.globl _grass2
                             56 	.globl _grass1
                             57 	.globl _paletteMenusM2
                             58 	.globl _paletteMenusM1
                             59 	.globl _paletteTrains
                             60 ;--------------------------------------------------------
                             61 ; special function registers
                             62 ;--------------------------------------------------------
                             63 ;--------------------------------------------------------
                             64 ; ram data
                             65 ;--------------------------------------------------------
                             66 	.area _DATA
                             67 ;--------------------------------------------------------
                             68 ; ram data
                             69 ;--------------------------------------------------------
                             70 	.area _INITIALIZED
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area _DABS (ABS)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area _HOME
                             79 	.area _GSINIT
                             80 	.area _GSFINAL
                             81 	.area _GSINIT
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area _HOME
                             86 	.area _HOME
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area _CODE
                             91 ;src/includes/gui.h:1: void putM0(void)
                             92 ;	---------------------------------
                             93 ; Function putM0
                             94 ; ---------------------------------
   0000                      95 _putM0::
                             96 ;src/includes/gui.h:3: cpct_setVideoMode(0);
   0000 AF            [ 4]   97 	xor	a, a
   0001 F5            [11]   98 	push	af
   0002 33            [ 6]   99 	inc	sp
   0003 CDr00r00      [17]  100 	call	_cpct_setVideoMode
   0006 33            [ 6]  101 	inc	sp
                            102 ;src/includes/gui.h:5: cpct_setPalette(paletteTrains, 16);
   0007 21r13r00      [10]  103 	ld	hl,#_paletteTrains
   000A 01 10 00      [10]  104 	ld	bc,#0x0010
   000D C5            [11]  105 	push	bc
   000E E5            [11]  106 	push	hl
   000F CDr00r00      [17]  107 	call	_cpct_setPalette
   0012 C9            [10]  108 	ret
   0013                     109 _paletteTrains:
   0013 00                  110 	.db #0x00	; 0
   0014 1A                  111 	.db #0x1A	; 26
   0015 0D                  112 	.db #0x0D	; 13
   0016 03                  113 	.db #0x03	; 3
   0017 0F                  114 	.db #0x0F	; 15
   0018 06                  115 	.db #0x06	; 6
   0019 10                  116 	.db #0x10	; 16
   001A 09                  117 	.db #0x09	; 9
   001B 0A                  118 	.db #0x0A	; 10
   001C 14                  119 	.db #0x14	; 20
   001D 02                  120 	.db #0x02	; 2
   001E 01                  121 	.db #0x01	; 1
   001F 13                  122 	.db #0x13	; 19
   0020 18                  123 	.db #0x18	; 24
   0021 0B                  124 	.db #0x0B	; 11
   0022 19                  125 	.db #0x19	; 25
   0023                     126 _paletteMenusM1:
   0023 00                  127 	.db #0x00	; 0
   0024 0F                  128 	.db #0x0F	; 15
   0025 09                  129 	.db #0x09	; 9
   0026 16                  130 	.db #0x16	; 22
   0027                     131 _paletteMenusM2:
   0027 00                  132 	.db #0x00	; 0
   0028 14                  133 	.db #0x14	; 20
   0029                     134 _grass1:
   0029 0F                  135 	.db #0x0F	; 15
   002A 0F                  136 	.db #0x0F	; 15
   002B 0F                  137 	.db #0x0F	; 15
   002C 8F                  138 	.db #0x8F	; 143
   002D 0F                  139 	.db #0x0F	; 15
   002E 0F                  140 	.db #0x0F	; 15
   002F 0F                  141 	.db #0x0F	; 15
   0030 0F                  142 	.db #0x0F	; 15
   0031 1F                  143 	.db #0x1F	; 31
   0032 0F                  144 	.db #0x0F	; 15
   0033 2F                  145 	.db #0x2F	; 47
   0034 0F                  146 	.db #0x0F	; 15
   0035 0F                  147 	.db #0x0F	; 15
   0036 0F                  148 	.db #0x0F	; 15
   0037 0F                  149 	.db #0x0F	; 15
   0038 0F                  150 	.db #0x0F	; 15
   0039 0F                  151 	.db #0x0F	; 15
   003A 0F                  152 	.db #0x0F	; 15
   003B 0F                  153 	.db #0x0F	; 15
   003C 0F                  154 	.db #0x0F	; 15
   003D 0F                  155 	.db #0x0F	; 15
   003E 0F                  156 	.db #0x0F	; 15
   003F 0F                  157 	.db #0x0F	; 15
   0040 0F                  158 	.db #0x0F	; 15
   0041 0F                  159 	.db #0x0F	; 15
   0042 0F                  160 	.db #0x0F	; 15
   0043 0F                  161 	.db #0x0F	; 15
   0044 0F                  162 	.db #0x0F	; 15
   0045 4F                  163 	.db #0x4F	; 79	'O'
   0046 0F                  164 	.db #0x0F	; 15
   0047 0F                  165 	.db #0x0F	; 15
   0048 8F                  166 	.db #0x8F	; 143
   0049 0F                  167 	.db #0x0F	; 15
   004A 4F                  168 	.db #0x4F	; 79	'O'
   004B 0F                  169 	.db #0x0F	; 15
   004C 0F                  170 	.db #0x0F	; 15
   004D 0F                  171 	.db #0x0F	; 15
   004E 0F                  172 	.db #0x0F	; 15
   004F 0F                  173 	.db #0x0F	; 15
   0050 0F                  174 	.db #0x0F	; 15
   0051 0F                  175 	.db #0x0F	; 15
   0052 0F                  176 	.db #0x0F	; 15
   0053 0F                  177 	.db #0x0F	; 15
   0054 0F                  178 	.db #0x0F	; 15
   0055 0F                  179 	.db #0x0F	; 15
   0056 1F                  180 	.db #0x1F	; 31
   0057 0F                  181 	.db #0x0F	; 15
   0058 0F                  182 	.db #0x0F	; 15
   0059 0F                  183 	.db #0x0F	; 15
   005A 0F                  184 	.db #0x0F	; 15
   005B 0F                  185 	.db #0x0F	; 15
   005C 8F                  186 	.db #0x8F	; 143
   005D 0F                  187 	.db #0x0F	; 15
   005E 0F                  188 	.db #0x0F	; 15
   005F 0F                  189 	.db #0x0F	; 15
   0060 0F                  190 	.db #0x0F	; 15
   0061 0F                  191 	.db #0x0F	; 15
   0062 0F                  192 	.db #0x0F	; 15
   0063 0F                  193 	.db #0x0F	; 15
   0064 0F                  194 	.db #0x0F	; 15
   0065 4F                  195 	.db #0x4F	; 79	'O'
   0066 0F                  196 	.db #0x0F	; 15
   0067 8F                  197 	.db #0x8F	; 143
   0068 0F                  198 	.db #0x0F	; 15
   0069                     199 _grass2:
   0069 0F                  200 	.db #0x0F	; 15
   006A 0F                  201 	.db #0x0F	; 15
   006B 0F                  202 	.db #0x0F	; 15
   006C 0F                  203 	.db #0x0F	; 15
   006D 0F                  204 	.db #0x0F	; 15
   006E 0F                  205 	.db #0x0F	; 15
   006F 0F                  206 	.db #0x0F	; 15
   0070 2F                  207 	.db #0x2F	; 47
   0071 0F                  208 	.db #0x0F	; 15
   0072 8F                  209 	.db #0x8F	; 143
   0073 0F                  210 	.db #0x0F	; 15
   0074 0F                  211 	.db #0x0F	; 15
   0075 0F                  212 	.db #0x0F	; 15
   0076 0F                  213 	.db #0x0F	; 15
   0077 0F                  214 	.db #0x0F	; 15
   0078 0F                  215 	.db #0x0F	; 15
   0079 0F                  216 	.db #0x0F	; 15
   007A 0F                  217 	.db #0x0F	; 15
   007B 0F                  218 	.db #0x0F	; 15
   007C 0F                  219 	.db #0x0F	; 15
   007D 4F                  220 	.db #0x4F	; 79	'O'
   007E 0F                  221 	.db #0x0F	; 15
   007F 0F                  222 	.db #0x0F	; 15
   0080 0F                  223 	.db #0x0F	; 15
   0081 0F                  224 	.db #0x0F	; 15
   0082 0F                  225 	.db #0x0F	; 15
   0083 2F                  226 	.db #0x2F	; 47
   0084 0F                  227 	.db #0x0F	; 15
   0085 0F                  228 	.db #0x0F	; 15
   0086 0F                  229 	.db #0x0F	; 15
   0087 0F                  230 	.db #0x0F	; 15
   0088 0F                  231 	.db #0x0F	; 15
   0089 0F                  232 	.db #0x0F	; 15
   008A 4F                  233 	.db #0x4F	; 79	'O'
   008B 0F                  234 	.db #0x0F	; 15
   008C 0F                  235 	.db #0x0F	; 15
   008D 0F                  236 	.db #0x0F	; 15
   008E 0F                  237 	.db #0x0F	; 15
   008F 0F                  238 	.db #0x0F	; 15
   0090 0F                  239 	.db #0x0F	; 15
   0091 0F                  240 	.db #0x0F	; 15
   0092 0F                  241 	.db #0x0F	; 15
   0093 0F                  242 	.db #0x0F	; 15
   0094 0F                  243 	.db #0x0F	; 15
   0095 0F                  244 	.db #0x0F	; 15
   0096 0F                  245 	.db #0x0F	; 15
   0097 0F                  246 	.db #0x0F	; 15
   0098 8F                  247 	.db #0x8F	; 143
   0099 0F                  248 	.db #0x0F	; 15
   009A 0F                  249 	.db #0x0F	; 15
   009B 0F                  250 	.db #0x0F	; 15
   009C 0F                  251 	.db #0x0F	; 15
   009D 2F                  252 	.db #0x2F	; 47
   009E 1F                  253 	.db #0x1F	; 31
   009F 0F                  254 	.db #0x0F	; 15
   00A0 0F                  255 	.db #0x0F	; 15
   00A1 0F                  256 	.db #0x0F	; 15
   00A2 0F                  257 	.db #0x0F	; 15
   00A3 0F                  258 	.db #0x0F	; 15
   00A4 2F                  259 	.db #0x2F	; 47
   00A5 0F                  260 	.db #0x0F	; 15
   00A6 0F                  261 	.db #0x0F	; 15
   00A7 0F                  262 	.db #0x0F	; 15
   00A8 0F                  263 	.db #0x0F	; 15
   00A9                     264 _forest:
   00A9 0F                  265 	.db #0x0F	; 15
   00AA 0F                  266 	.db #0x0F	; 15
   00AB 0E                  267 	.db #0x0E	; 14
   00AC 03                  268 	.db #0x03	; 3
   00AD 0E                  269 	.db #0x0E	; 14
   00AE 03                  270 	.db #0x03	; 3
   00AF 0E                  271 	.db #0x0E	; 14
   00B0 EF                  272 	.db #0xEF	; 239
   00B1 0E                  273 	.db #0x0E	; 14
   00B2 EF                  274 	.db #0xEF	; 239
   00B3 0F                  275 	.db #0x0F	; 15
   00B4 EF                  276 	.db #0xEF	; 239
   00B5 0E                  277 	.db #0x0E	; 14
   00B6 FF                  278 	.db #0xFF	; 255
   00B7 0F                  279 	.db #0x0F	; 15
   00B8 0F                  280 	.db #0x0F	; 15
   00B9 07                  281 	.db #0x07	; 7
   00BA 6F                  282 	.db #0x6F	; 111	'o'
   00BB 0C                  283 	.db #0x0C	; 12
   00BC 0F                  284 	.db #0x0F	; 15
   00BD CF                  285 	.db #0xCF	; 207
   00BE 0F                  286 	.db #0x0F	; 15
   00BF 19                  287 	.db #0x19	; 25
   00C0 8F                  288 	.db #0x8F	; 143
   00C1 CE                  289 	.db #0xCE	; 206
   00C2 03                  290 	.db #0x03	; 3
   00C3 3B                  291 	.db #0x3B	; 59
   00C4 8F                  292 	.db #0x8F	; 143
   00C5 CE                  293 	.db #0xCE	; 206
   00C6 CF                  294 	.db #0xCF	; 207
   00C7 3B                  295 	.db #0x3B	; 59
   00C8 0F                  296 	.db #0x0F	; 15
   00C9 0E                  297 	.db #0x0E	; 14
   00CA EF                  298 	.db #0xEF	; 239
   00CB 3F                  299 	.db #0x3F	; 63
   00CC 0F                  300 	.db #0x0F	; 15
   00CD 0F                  301 	.db #0x0F	; 15
   00CE EF                  302 	.db #0xEF	; 239
   00CF 0F                  303 	.db #0x0F	; 15
   00D0 0F                  304 	.db #0x0F	; 15
   00D1 0E                  305 	.db #0x0E	; 14
   00D2 07                  306 	.db #0x07	; 7
   00D3 03                  307 	.db #0x03	; 3
   00D4 0F                  308 	.db #0x0F	; 15
   00D5 1D                  309 	.db #0x1D	; 29
   00D6 CE                  310 	.db #0xCE	; 206
   00D7 EF                  311 	.db #0xEF	; 239
   00D8 09                  312 	.db #0x09	; 9
   00D9 3B                  313 	.db #0x3B	; 59
   00DA 8F                  314 	.db #0x8F	; 143
   00DB CE                  315 	.db #0xCE	; 206
   00DC 67                  316 	.db #0x67	; 103	'g'
   00DD 3B                  317 	.db #0x3B	; 59
   00DE 8F                  318 	.db #0x8F	; 143
   00DF 1D                  319 	.db #0x1D	; 29
   00E0 EF                  320 	.db #0xEF	; 239
   00E1 2F                  321 	.db #0x2F	; 47
   00E2 0F                  322 	.db #0x0F	; 15
   00E3 1D                  323 	.db #0x1D	; 29
   00E4 EF                  324 	.db #0xEF	; 239
   00E5 0F                  325 	.db #0x0F	; 15
   00E6 0F                  326 	.db #0x0F	; 15
   00E7 0F                  327 	.db #0x0F	; 15
   00E8 CF                  328 	.db #0xCF	; 207
   00E9                     329 _dwellings1:
   00E9 0F                  330 	.db #0x0F	; 15
   00EA 0F                  331 	.db #0x0F	; 15
   00EB 0F                  332 	.db #0x0F	; 15
   00EC 0F                  333 	.db #0x0F	; 15
   00ED 08                  334 	.db #0x08	; 8
   00EE 03                  335 	.db #0x03	; 3
   00EF 0C                  336 	.db #0x0C	; 12
   00F0 07                  337 	.db #0x07	; 7
   00F1 38                  338 	.db #0x38	; 56	'8'
   00F2 E1                  339 	.db #0xE1	; 225
   00F3 1C                  340 	.db #0x1C	; 28
   00F4 C3                  341 	.db #0xC3	; 195
   00F5 3C                  342 	.db #0x3C	; 60
   00F6 E1                  343 	.db #0xE1	; 225
   00F7 1C                  344 	.db #0x1C	; 28
   00F8 C3                  345 	.db #0xC3	; 195
   00F9 0F                  346 	.db #0x0F	; 15
   00FA 0F                  347 	.db #0x0F	; 15
   00FB 1E                  348 	.db #0x1E	; 30
   00FC C3                  349 	.db #0xC3	; 195
   00FD 0F                  350 	.db #0x0F	; 15
   00FE 0F                  351 	.db #0x0F	; 15
   00FF 0F                  352 	.db #0x0F	; 15
   0100 0F                  353 	.db #0x0F	; 15
   0101 0F                  354 	.db #0x0F	; 15
   0102 0F                  355 	.db #0x0F	; 15
   0103 0E                  356 	.db #0x0E	; 14
   0104 03                  357 	.db #0x03	; 3
   0105 0F                  358 	.db #0x0F	; 15
   0106 0E                  359 	.db #0x0E	; 14
   0107 06                  360 	.db #0x06	; 6
   0108 E1                  361 	.db #0xE1	; 225
   0109 0F                  362 	.db #0x0F	; 15
   010A 0E                  363 	.db #0x0E	; 14
   010B C2                  364 	.db #0xC2	; 194
   010C E1                  365 	.db #0xE1	; 225
   010D 0F                  366 	.db #0x0F	; 15
   010E 0E                  367 	.db #0x0E	; 14
   010F C2                  368 	.db #0xC2	; 194
   0110 E1                  369 	.db #0xE1	; 225
   0111 0F                  370 	.db #0x0F	; 15
   0112 0E                  371 	.db #0x0E	; 14
   0113 C3                  372 	.db #0xC3	; 195
   0114 E1                  373 	.db #0xE1	; 225
   0115 0F                  374 	.db #0x0F	; 15
   0116 0E                  375 	.db #0x0E	; 14
   0117 C3                  376 	.db #0xC3	; 195
   0118 0F                  377 	.db #0x0F	; 15
   0119 0F                  378 	.db #0x0F	; 15
   011A 0F                  379 	.db #0x0F	; 15
   011B C3                  380 	.db #0xC3	; 195
   011C 0F                  381 	.db #0x0F	; 15
   011D 08                  382 	.db #0x08	; 8
   011E 07                  383 	.db #0x07	; 7
   011F 0F                  384 	.db #0x0F	; 15
   0120 0F                  385 	.db #0x0F	; 15
   0121 38                  386 	.db #0x38	; 56	'8'
   0122 C3                  387 	.db #0xC3	; 195
   0123 0F                  388 	.db #0x0F	; 15
   0124 0F                  389 	.db #0x0F	; 15
   0125 3C                  390 	.db #0x3C	; 60
   0126 C3                  391 	.db #0xC3	; 195
   0127 0F                  392 	.db #0x0F	; 15
   0128 0F                  393 	.db #0x0F	; 15
   0129                     394 _dwellings2:
   0129 0F                  395 	.db #0x0F	; 15
   012A 0F                  396 	.db #0x0F	; 15
   012B 0F                  397 	.db #0x0F	; 15
   012C 0F                  398 	.db #0x0F	; 15
   012D 0F                  399 	.db #0x0F	; 15
   012E 01                  400 	.db #0x01	; 1
   012F 0F                  401 	.db #0x0F	; 15
   0130 0F                  402 	.db #0x0F	; 15
   0131 0F                  403 	.db #0x0F	; 15
   0132 70                  404 	.db #0x70	; 112	'p'
   0133 0C                  405 	.db #0x0C	; 12
   0134 0F                  406 	.db #0x0F	; 15
   0135 09                  407 	.db #0x09	; 9
   0136 78                  408 	.db #0x78	; 120	'x'
   0137 1C                  409 	.db #0x1C	; 28
   0138 87                  410 	.db #0x87	; 135
   0139 38                  411 	.db #0x38	; 56	'8'
   013A 0F                  412 	.db #0x0F	; 15
   013B 1C                  413 	.db #0x1C	; 28
   013C 87                  414 	.db #0x87	; 135
   013D 38                  415 	.db #0x38	; 56	'8'
   013E 0F                  416 	.db #0x0F	; 15
   013F 1E                  417 	.db #0x1E	; 30
   0140 87                  418 	.db #0x87	; 135
   0141 3C                  419 	.db #0x3C	; 60
   0142 0F                  420 	.db #0x0F	; 15
   0143 0F                  421 	.db #0x0F	; 15
   0144 0F                  422 	.db #0x0F	; 15
   0145 0F                  423 	.db #0x0F	; 15
   0146 0F                  424 	.db #0x0F	; 15
   0147 0F                  425 	.db #0x0F	; 15
   0148 0F                  426 	.db #0x0F	; 15
   0149 0E                  427 	.db #0x0E	; 14
   014A 07                  428 	.db #0x07	; 7
   014B 0F                  429 	.db #0x0F	; 15
   014C 0F                  430 	.db #0x0F	; 15
   014D 0E                  431 	.db #0x0E	; 14
   014E C3                  432 	.db #0xC3	; 195
   014F 00                  433 	.db #0x00	; 0
   0150 07                  434 	.db #0x07	; 7
   0151 0E                  435 	.db #0x0E	; 14
   0152 C3                  436 	.db #0xC3	; 195
   0153 70                  437 	.db #0x70	; 112	'p'
   0154 C3                  438 	.db #0xC3	; 195
   0155 0F                  439 	.db #0x0F	; 15
   0156 C3                  440 	.db #0xC3	; 195
   0157 70                  441 	.db #0x70	; 112	'p'
   0158 C3                  442 	.db #0xC3	; 195
   0159 03                  443 	.db #0x03	; 3
   015A 0F                  444 	.db #0x0F	; 15
   015B 78                  445 	.db #0x78	; 120	'x'
   015C C3                  446 	.db #0xC3	; 195
   015D 61                  447 	.db #0x61	; 97	'a'
   015E 0F                  448 	.db #0x0F	; 15
   015F 0F                  449 	.db #0x0F	; 15
   0160 0F                  450 	.db #0x0F	; 15
   0161 69                  451 	.db #0x69	; 105	'i'
   0162 0F                  452 	.db #0x0F	; 15
   0163 0F                  453 	.db #0x0F	; 15
   0164 0F                  454 	.db #0x0F	; 15
   0165 0F                  455 	.db #0x0F	; 15
   0166 0F                  456 	.db #0x0F	; 15
   0167 0F                  457 	.db #0x0F	; 15
   0168 0F                  458 	.db #0x0F	; 15
   0169                     459 _dwellings3:
   0169 0F                  460 	.db #0x0F	; 15
   016A 0F                  461 	.db #0x0F	; 15
   016B 09                  462 	.db #0x09	; 9
   016C 09                  463 	.db #0x09	; 9
   016D 0F                  464 	.db #0x0F	; 15
   016E 0F                  465 	.db #0x0F	; 15
   016F 38                  466 	.db #0x38	; 56	'8'
   0170 38                  467 	.db #0x38	; 56	'8'
   0171 0E                  468 	.db #0x0E	; 14
   0172 03                  469 	.db #0x03	; 3
   0173 38                  470 	.db #0x38	; 56	'8'
   0174 38                  471 	.db #0x38	; 56	'8'
   0175 0E                  472 	.db #0x0E	; 14
   0176 E1                  473 	.db #0xE1	; 225
   0177 3C                  474 	.db #0x3C	; 60
   0178 3C                  475 	.db #0x3C	; 60
   0179 0E                  476 	.db #0x0E	; 14
   017A E1                  477 	.db #0xE1	; 225
   017B 0F                  478 	.db #0x0F	; 15
   017C 0F                  479 	.db #0x0F	; 15
   017D 0E                  480 	.db #0x0E	; 14
   017E E1                  481 	.db #0xE1	; 225
   017F 08                  482 	.db #0x08	; 8
   0180 07                  483 	.db #0x07	; 7
   0181 0F                  484 	.db #0x0F	; 15
   0182 E1                  485 	.db #0xE1	; 225
   0183 38                  486 	.db #0x38	; 56	'8'
   0184 C3                  487 	.db #0xC3	; 195
   0185 0F                  488 	.db #0x0F	; 15
   0186 0F                  489 	.db #0x0F	; 15
   0187 3C                  490 	.db #0x3C	; 60
   0188 C3                  491 	.db #0xC3	; 195
   0189 0C                  492 	.db #0x0C	; 12
   018A 0F                  493 	.db #0x0F	; 15
   018B 0F                  494 	.db #0x0F	; 15
   018C 0F                  495 	.db #0x0F	; 15
   018D 1C                  496 	.db #0x1C	; 28
   018E 87                  497 	.db #0x87	; 135
   018F 0F                  498 	.db #0x0F	; 15
   0190 0F                  499 	.db #0x0F	; 15
   0191 1E                  500 	.db #0x1E	; 30
   0192 87                  501 	.db #0x87	; 135
   0193 0C                  502 	.db #0x0C	; 12
   0194 07                  503 	.db #0x07	; 7
   0195 0F                  504 	.db #0x0F	; 15
   0196 0F                  505 	.db #0x0F	; 15
   0197 1C                  506 	.db #0x1C	; 28
   0198 C3                  507 	.db #0xC3	; 195
   0199 0F                  508 	.db #0x0F	; 15
   019A 09                  509 	.db #0x09	; 9
   019B 1C                  510 	.db #0x1C	; 28
   019C C3                  511 	.db #0xC3	; 195
   019D 0F                  512 	.db #0x0F	; 15
   019E 38                  513 	.db #0x38	; 56	'8'
   019F 1C                  514 	.db #0x1C	; 28
   01A0 C3                  515 	.db #0xC3	; 195
   01A1 0F                  516 	.db #0x0F	; 15
   01A2 3C                  517 	.db #0x3C	; 60
   01A3 1E                  518 	.db #0x1E	; 30
   01A4 C3                  519 	.db #0xC3	; 195
   01A5 0F                  520 	.db #0x0F	; 15
   01A6 0F                  521 	.db #0x0F	; 15
   01A7 0F                  522 	.db #0x0F	; 15
   01A8 0F                  523 	.db #0x0F	; 15
   01A9                     524 _water:
   01A9 5F                  525 	.db #0x5F	; 95
   01AA 5F                  526 	.db #0x5F	; 95
   01AB 5F                  527 	.db #0x5F	; 95
   01AC 5F                  528 	.db #0x5F	; 95
   01AD AF                  529 	.db #0xAF	; 175
   01AE AF                  530 	.db #0xAF	; 175
   01AF AF                  531 	.db #0xAF	; 175
   01B0 AF                  532 	.db #0xAF	; 175
   01B1 5F                  533 	.db #0x5F	; 95
   01B2 5F                  534 	.db #0x5F	; 95
   01B3 5F                  535 	.db #0x5F	; 95
   01B4 5F                  536 	.db #0x5F	; 95
   01B5 AF                  537 	.db #0xAF	; 175
   01B6 AF                  538 	.db #0xAF	; 175
   01B7 AF                  539 	.db #0xAF	; 175
   01B8 AF                  540 	.db #0xAF	; 175
   01B9 5F                  541 	.db #0x5F	; 95
   01BA 5F                  542 	.db #0x5F	; 95
   01BB 5F                  543 	.db #0x5F	; 95
   01BC 5F                  544 	.db #0x5F	; 95
   01BD AF                  545 	.db #0xAF	; 175
   01BE AF                  546 	.db #0xAF	; 175
   01BF AF                  547 	.db #0xAF	; 175
   01C0 AF                  548 	.db #0xAF	; 175
   01C1 5F                  549 	.db #0x5F	; 95
   01C2 5F                  550 	.db #0x5F	; 95
   01C3 5F                  551 	.db #0x5F	; 95
   01C4 5F                  552 	.db #0x5F	; 95
   01C5 AF                  553 	.db #0xAF	; 175
   01C6 AF                  554 	.db #0xAF	; 175
   01C7 AF                  555 	.db #0xAF	; 175
   01C8 AF                  556 	.db #0xAF	; 175
   01C9 5F                  557 	.db #0x5F	; 95
   01CA 5F                  558 	.db #0x5F	; 95
   01CB 5F                  559 	.db #0x5F	; 95
   01CC 5F                  560 	.db #0x5F	; 95
   01CD AF                  561 	.db #0xAF	; 175
   01CE AF                  562 	.db #0xAF	; 175
   01CF AF                  563 	.db #0xAF	; 175
   01D0 AF                  564 	.db #0xAF	; 175
   01D1 5F                  565 	.db #0x5F	; 95
   01D2 5F                  566 	.db #0x5F	; 95
   01D3 5F                  567 	.db #0x5F	; 95
   01D4 5F                  568 	.db #0x5F	; 95
   01D5 AF                  569 	.db #0xAF	; 175
   01D6 AF                  570 	.db #0xAF	; 175
   01D7 AF                  571 	.db #0xAF	; 175
   01D8 AF                  572 	.db #0xAF	; 175
   01D9 5F                  573 	.db #0x5F	; 95
   01DA 5F                  574 	.db #0x5F	; 95
   01DB 5F                  575 	.db #0x5F	; 95
   01DC 5F                  576 	.db #0x5F	; 95
   01DD AF                  577 	.db #0xAF	; 175
   01DE AF                  578 	.db #0xAF	; 175
   01DF AF                  579 	.db #0xAF	; 175
   01E0 AF                  580 	.db #0xAF	; 175
   01E1 5F                  581 	.db #0x5F	; 95
   01E2 5F                  582 	.db #0x5F	; 95
   01E3 5F                  583 	.db #0x5F	; 95
   01E4 5F                  584 	.db #0x5F	; 95
   01E5 AF                  585 	.db #0xAF	; 175
   01E6 AF                  586 	.db #0xAF	; 175
   01E7 AF                  587 	.db #0xAF	; 175
   01E8 AF                  588 	.db #0xAF	; 175
   01E9                     589 _farm1:
   01E9 03                  590 	.db #0x03	; 3
   01EA 0F                  591 	.db #0x0F	; 15
   01EB 78                  592 	.db #0x78	; 120	'x'
   01EC F0                  593 	.db #0xF0	; 240
   01ED 61                  594 	.db #0x61	; 97	'a'
   01EE 01                  595 	.db #0x01	; 1
   01EF 5F                  596 	.db #0x5F	; 95
   01F0 5F                  597 	.db #0x5F	; 95
   01F1 61                  598 	.db #0x61	; 97	'a'
   01F2 70                  599 	.db #0x70	; 112	'p'
   01F3 78                  600 	.db #0x78	; 120	'x'
   01F4 F0                  601 	.db #0xF0	; 240
   01F5 69                  602 	.db #0x69	; 105	'i'
   01F6 78                  603 	.db #0x78	; 120	'x'
   01F7 2F                  604 	.db #0x2F	; 47
   01F8 AF                  605 	.db #0xAF	; 175
   01F9 0F                  606 	.db #0x0F	; 15
   01FA 0F                  607 	.db #0x0F	; 15
   01FB 78                  608 	.db #0x78	; 120	'x'
   01FC F0                  609 	.db #0xF0	; 240
   01FD 7A                  610 	.db #0x7A	; 122	'z'
   01FE 7A                  611 	.db #0x7A	; 122	'z'
   01FF 5F                  612 	.db #0x5F	; 95
   0200 5F                  613 	.db #0x5F	; 95
   0201 5A                  614 	.db #0x5A	; 90	'Z'
   0202 DA                  615 	.db #0xDA	; 218
   0203 78                  616 	.db #0x78	; 120	'x'
   0204 F0                  617 	.db #0xF0	; 240
   0205 7A                  618 	.db #0x7A	; 122	'z'
   0206 7A                  619 	.db #0x7A	; 122	'z'
   0207 0F                  620 	.db #0x0F	; 15
   0208 0F                  621 	.db #0x0F	; 15
   0209 5A                  622 	.db #0x5A	; 90	'Z'
   020A DA                  623 	.db #0xDA	; 218
   020B 0F                  624 	.db #0x0F	; 15
   020C 0F                  625 	.db #0x0F	; 15
   020D 7A                  626 	.db #0x7A	; 122	'z'
   020E 7A                  627 	.db #0x7A	; 122	'z'
   020F 78                  628 	.db #0x78	; 120	'x'
   0210 F0                  629 	.db #0xF0	; 240
   0211 5A                  630 	.db #0x5A	; 90	'Z'
   0212 DA                  631 	.db #0xDA	; 218
   0213 5F                  632 	.db #0x5F	; 95
   0214 5F                  633 	.db #0x5F	; 95
   0215 7A                  634 	.db #0x7A	; 122	'z'
   0216 7A                  635 	.db #0x7A	; 122	'z'
   0217 78                  636 	.db #0x78	; 120	'x'
   0218 F0                  637 	.db #0xF0	; 240
   0219 5A                  638 	.db #0x5A	; 90	'Z'
   021A DA                  639 	.db #0xDA	; 218
   021B 2F                  640 	.db #0x2F	; 47
   021C AF                  641 	.db #0xAF	; 175
   021D 7A                  642 	.db #0x7A	; 122	'z'
   021E 7A                  643 	.db #0x7A	; 122	'z'
   021F 78                  644 	.db #0x78	; 120	'x'
   0220 F0                  645 	.db #0xF0	; 240
   0221 5A                  646 	.db #0x5A	; 90	'Z'
   0222 DA                  647 	.db #0xDA	; 218
   0223 5F                  648 	.db #0x5F	; 95
   0224 5F                  649 	.db #0x5F	; 95
   0225 7A                  650 	.db #0x7A	; 122	'z'
   0226 7A                  651 	.db #0x7A	; 122	'z'
   0227 78                  652 	.db #0x78	; 120	'x'
   0228 F0                  653 	.db #0xF0	; 240
   0229                     654 _farm2:
   0229 0F                  655 	.db #0x0F	; 15
   022A 0F                  656 	.db #0x0F	; 15
   022B 0F                  657 	.db #0x0F	; 15
   022C 0F                  658 	.db #0x0F	; 15
   022D 7F                  659 	.db #0x7F	; 127
   022E FF                  660 	.db #0xFF	; 255
   022F FF                  661 	.db #0xFF	; 255
   0230 EF                  662 	.db #0xEF	; 239
   0231 2D                  663 	.db #0x2D	; 45
   0232 A5                  664 	.db #0xA5	; 165
   0233 A5                  665 	.db #0xA5	; 165
   0234 A5                  666 	.db #0xA5	; 165
   0235 7F                  667 	.db #0x7F	; 127
   0236 FF                  668 	.db #0xFF	; 255
   0237 FF                  669 	.db #0xFF	; 255
   0238 EF                  670 	.db #0xEF	; 239
   0239 5A                  671 	.db #0x5A	; 90	'Z'
   023A 5A                  672 	.db #0x5A	; 90	'Z'
   023B 5A                  673 	.db #0x5A	; 90	'Z'
   023C 4B                  674 	.db #0x4B	; 75	'K'
   023D 7F                  675 	.db #0x7F	; 127
   023E FF                  676 	.db #0xFF	; 255
   023F FF                  677 	.db #0xFF	; 255
   0240 EF                  678 	.db #0xEF	; 239
   0241 2D                  679 	.db #0x2D	; 45
   0242 A5                  680 	.db #0xA5	; 165
   0243 A5                  681 	.db #0xA5	; 165
   0244 A5                  682 	.db #0xA5	; 165
   0245 7F                  683 	.db #0x7F	; 127
   0246 FF                  684 	.db #0xFF	; 255
   0247 FF                  685 	.db #0xFF	; 255
   0248 EF                  686 	.db #0xEF	; 239
   0249 5A                  687 	.db #0x5A	; 90	'Z'
   024A 5A                  688 	.db #0x5A	; 90	'Z'
   024B 5A                  689 	.db #0x5A	; 90	'Z'
   024C 4B                  690 	.db #0x4B	; 75	'K'
   024D 7F                  691 	.db #0x7F	; 127
   024E FF                  692 	.db #0xFF	; 255
   024F FF                  693 	.db #0xFF	; 255
   0250 EF                  694 	.db #0xEF	; 239
   0251 0F                  695 	.db #0x0F	; 15
   0252 0F                  696 	.db #0x0F	; 15
   0253 0F                  697 	.db #0x0F	; 15
   0254 0F                  698 	.db #0x0F	; 15
   0255 0E                  699 	.db #0x0E	; 14
   0256 07                  700 	.db #0x07	; 7
   0257 AF                  701 	.db #0xAF	; 175
   0258 AF                  702 	.db #0xAF	; 175
   0259 02                  703 	.db #0x02	; 2
   025A C3                  704 	.db #0xC3	; 195
   025B AF                  705 	.db #0xAF	; 175
   025C AF                  706 	.db #0xAF	; 175
   025D 60                  707 	.db #0x60	; 96
   025E C3                  708 	.db #0xC3	; 195
   025F AF                  709 	.db #0xAF	; 175
   0260 AF                  710 	.db #0xAF	; 175
   0261 69                  711 	.db #0x69	; 105	'i'
   0262 C3                  712 	.db #0xC3	; 195
   0263 AF                  713 	.db #0xAF	; 175
   0264 AF                  714 	.db #0xAF	; 175
   0265 0F                  715 	.db #0x0F	; 15
   0266 0F                  716 	.db #0x0F	; 15
   0267 0F                  717 	.db #0x0F	; 15
   0268 0F                  718 	.db #0x0F	; 15
   0269                     719 _livestock:
   0269 03                  720 	.db #0x03	; 3
   026A 0F                  721 	.db #0x0F	; 15
   026B 0F                  722 	.db #0x0F	; 15
   026C 0F                  723 	.db #0x0F	; 15
   026D 61                  724 	.db #0x61	; 97	'a'
   026E F5                  725 	.db #0xF5	; 245
   026F F5                  726 	.db #0xF5	; 245
   0270 E5                  727 	.db #0xE5	; 229
   0271 61                  728 	.db #0x61	; 97	'a'
   0272 8F                  729 	.db #0x8F	; 143
   0273 0F                  730 	.db #0x0F	; 15
   0274 2F                  731 	.db #0x2F	; 47
   0275 69                  732 	.db #0x69	; 105	'i'
   0276 87                  733 	.db #0x87	; 135
   0277 0F                  734 	.db #0x0F	; 15
   0278 AD                  735 	.db #0xAD	; 173
   0279 0F                  736 	.db #0x0F	; 15
   027A 9F                  737 	.db #0x9F	; 159
   027B 0F                  738 	.db #0x0F	; 15
   027C 2F                  739 	.db #0x2F	; 47
   027D 7D                  740 	.db #0x7D	; 125
   027E 87                  741 	.db #0x87	; 135
   027F 0F                  742 	.db #0x0F	; 15
   0280 2D                  743 	.db #0x2D	; 45
   0281 4B                  744 	.db #0x4B	; 75	'K'
   0282 0F                  745 	.db #0x0F	; 15
   0283 2F                  746 	.db #0x2F	; 47
   0284 2F                  747 	.db #0x2F	; 47
   0285 4F                  748 	.db #0x4F	; 79	'O'
   0286 0F                  749 	.db #0x0F	; 15
   0287 0F                  750 	.db #0x0F	; 15
   0288 2D                  751 	.db #0x2D	; 45
   0289 5B                  752 	.db #0x5B	; 91
   028A 1F                  753 	.db #0x1F	; 31
   028B 0F                  754 	.db #0x0F	; 15
   028C 2F                  755 	.db #0x2F	; 47
   028D 4F                  756 	.db #0x4F	; 79	'O'
   028E 0F                  757 	.db #0x0F	; 15
   028F 1F                  758 	.db #0x1F	; 31
   0290 2D                  759 	.db #0x2D	; 45
   0291 4B                  760 	.db #0x4B	; 75	'K'
   0292 0F                  761 	.db #0x0F	; 15
   0293 0F                  762 	.db #0x0F	; 15
   0294 2F                  763 	.db #0x2F	; 47
   0295 4F                  764 	.db #0x4F	; 79	'O'
   0296 4F                  765 	.db #0x4F	; 79	'O'
   0297 0F                  766 	.db #0x0F	; 15
   0298 2D                  767 	.db #0x2D	; 45
   0299 4B                  768 	.db #0x4B	; 75	'K'
   029A 0F                  769 	.db #0x0F	; 15
   029B 2F                  770 	.db #0x2F	; 47
   029C 2F                  771 	.db #0x2F	; 47
   029D 4F                  772 	.db #0x4F	; 79	'O'
   029E 0F                  773 	.db #0x0F	; 15
   029F 0F                  774 	.db #0x0F	; 15
   02A0 2D                  775 	.db #0x2D	; 45
   02A1 7A                  776 	.db #0x7A	; 122	'z'
   02A2 FA                  777 	.db #0xFA	; 250
   02A3 FA                  778 	.db #0xFA	; 250
   02A4 EB                  779 	.db #0xEB	; 235
   02A5 0F                  780 	.db #0x0F	; 15
   02A6 0F                  781 	.db #0x0F	; 15
   02A7 0F                  782 	.db #0x0F	; 15
   02A8 0F                  783 	.db #0x0F	; 15
                            784 ;src/includes/gui.h:8: void putM1(void)
                            785 ;	---------------------------------
                            786 ; Function putM1
                            787 ; ---------------------------------
   02A9                     788 _putM1::
                            789 ;src/includes/gui.h:10: cpct_setVideoMode(1);
   02A9 3E 01         [ 7]  790 	ld	a,#0x01
   02AB F5            [11]  791 	push	af
   02AC 33            [ 6]  792 	inc	sp
   02AD CDr00r00      [17]  793 	call	_cpct_setVideoMode
   02B0 33            [ 6]  794 	inc	sp
                            795 ;src/includes/gui.h:12: cpct_setPalette(paletteMenusM1, 4);
   02B1 21r23r00      [10]  796 	ld	hl,#_paletteMenusM1
   02B4 01 04 00      [10]  797 	ld	bc,#0x0004
   02B7 C5            [11]  798 	push	bc
   02B8 E5            [11]  799 	push	hl
   02B9 CDr00r00      [17]  800 	call	_cpct_setPalette
   02BC C9            [10]  801 	ret
                            802 ;src/includes/gui.h:15: void putM2(void)
                            803 ;	---------------------------------
                            804 ; Function putM2
                            805 ; ---------------------------------
   02BD                     806 _putM2::
                            807 ;src/includes/gui.h:17: cpct_setVideoMode(2);
   02BD 3E 02         [ 7]  808 	ld	a,#0x02
   02BF F5            [11]  809 	push	af
   02C0 33            [ 6]  810 	inc	sp
   02C1 CDr00r00      [17]  811 	call	_cpct_setVideoMode
   02C4 33            [ 6]  812 	inc	sp
                            813 ;src/includes/gui.h:19: cpct_setPalette(paletteMenusM2, 2);
   02C5 21r27r00      [10]  814 	ld	hl,#_paletteMenusM2
   02C8 01 02 00      [10]  815 	ld	bc,#0x0002
   02CB C5            [11]  816 	push	bc
   02CC E5            [11]  817 	push	hl
   02CD CDr00r00      [17]  818 	call	_cpct_setPalette
                            819 ;src/includes/gui.h:20: cpct_clearScreen(0b11111111);
   02D0 21 00 40      [10]  820 	ld	hl,#0x4000
   02D3 E5            [11]  821 	push	hl
   02D4 3E FF         [ 7]  822 	ld	a,#0xFF
   02D6 F5            [11]  823 	push	af
   02D7 33            [ 6]  824 	inc	sp
   02D8 26 C0         [ 7]  825 	ld	h, #0xC0
   02DA E5            [11]  826 	push	hl
   02DB CDr00r00      [17]  827 	call	_cpct_memset
   02DE C9            [10]  828 	ret
                            829 ;src/includes/gui.h:23: void drawBoxM0(int width_, int height_)
                            830 ;	---------------------------------
                            831 ; Function drawBoxM0
                            832 ; ---------------------------------
   02DF                     833 _drawBoxM0::
   02DF DD E5         [15]  834 	push	ix
   02E1 DD 21 00 00   [14]  835 	ld	ix,#0
   02E5 DD 39         [15]  836 	add	ix,sp
   02E7 21 F9 FF      [10]  837 	ld	hl,#-7
   02EA 39            [11]  838 	add	hl,sp
   02EB F9            [ 6]  839 	ld	sp,hl
                            840 ;src/includes/gui.h:28: int left = (80-width_)/2;
   02EC 3E 50         [ 7]  841 	ld	a,#0x50
   02EE DD 96 04      [19]  842 	sub	a, 4 (ix)
   02F1 57            [ 4]  843 	ld	d,a
   02F2 3E 00         [ 7]  844 	ld	a,#0x00
   02F4 DD 9E 05      [19]  845 	sbc	a, 5 (ix)
   02F7 5F            [ 4]  846 	ld	e,a
   02F8 6A            [ 4]  847 	ld	l, d
   02F9 63            [ 4]  848 	ld	h, e
   02FA CB 7B         [ 8]  849 	bit	7, e
   02FC 28 03         [12]  850 	jr	Z,00103$
   02FE 6A            [ 4]  851 	ld	l, d
   02FF 63            [ 4]  852 	ld	h, e
   0300 23            [ 6]  853 	inc	hl
   0301                     854 00103$:
   0301 DD 75 F9      [19]  855 	ld	-7 (ix),l
   0304 DD 74 FA      [19]  856 	ld	-6 (ix),h
   0307 DD CB FA 2E   [23]  857 	sra	-6 (ix)
   030B DD CB F9 1E   [23]  858 	rr	-7 (ix)
                            859 ;src/includes/gui.h:29: int top = (200-height_)/2;
   030F 3E C8         [ 7]  860 	ld	a,#0xC8
   0311 DD 96 06      [19]  861 	sub	a, 6 (ix)
   0314 4F            [ 4]  862 	ld	c,a
   0315 3E 00         [ 7]  863 	ld	a,#0x00
   0317 DD 9E 07      [19]  864 	sbc	a, 7 (ix)
   031A 47            [ 4]  865 	ld	b,a
   031B 61            [ 4]  866 	ld	h,c
   031C 50            [ 4]  867 	ld	d,b
   031D CB 78         [ 8]  868 	bit	7, b
   031F 28 03         [12]  869 	jr	Z,00104$
   0321 03            [ 6]  870 	inc	bc
   0322 61            [ 4]  871 	ld	h,c
   0323 50            [ 4]  872 	ld	d,b
   0324                     873 00104$:
   0324 5C            [ 4]  874 	ld	e, h
   0325 CB 2A         [ 8]  875 	sra	d
   0327 CB 1B         [ 8]  876 	rr	e
                            877 ;src/includes/gui.h:31: cpct_clearScreen(cpct_px2byteM0(9,9));
   0329 D5            [11]  878 	push	de
   032A 21 09 09      [10]  879 	ld	hl,#0x0909
   032D E5            [11]  880 	push	hl
   032E CDr00r00      [17]  881 	call	_cpct_px2byteM0
   0331 65            [ 4]  882 	ld	h,l
   0332 01 00 40      [10]  883 	ld	bc,#0x4000
   0335 C5            [11]  884 	push	bc
   0336 E5            [11]  885 	push	hl
   0337 33            [ 6]  886 	inc	sp
   0338 21 00 C0      [10]  887 	ld	hl,#0xC000
   033B E5            [11]  888 	push	hl
   033C CDr00r00      [17]  889 	call	_cpct_memset
   033F D1            [10]  890 	pop	de
                            891 ;src/includes/gui.h:34: pvid = cpct_getScreenPtr(SCR_VMEM, left+1, top+4);
   0340 DD 73 FB      [19]  892 	ld	-5 (ix), e
   0343 63            [ 4]  893 	ld	h, e
   0344 24            [ 4]  894 	inc	h
   0345 24            [ 4]  895 	inc	h
   0346 24            [ 4]  896 	inc	h
   0347 24            [ 4]  897 	inc	h
   0348 DD 7E F9      [19]  898 	ld	a,-7 (ix)
   034B 3C            [ 4]  899 	inc	a
   034C DD 77 FE      [19]  900 	ld	-2 (ix),a
   034F D5            [11]  901 	push	de
   0350 E5            [11]  902 	push	hl
   0351 33            [ 6]  903 	inc	sp
   0352 DD 7E FE      [19]  904 	ld	a,-2 (ix)
   0355 F5            [11]  905 	push	af
   0356 33            [ 6]  906 	inc	sp
   0357 21 00 C0      [10]  907 	ld	hl,#0xC000
   035A E5            [11]  908 	push	hl
   035B CDr00r00      [17]  909 	call	_cpct_getScreenPtr
   035E D1            [10]  910 	pop	de
   035F 4D            [ 4]  911 	ld	c, l
   0360 44            [ 4]  912 	ld	b, h
                            913 ;src/includes/gui.h:35: cpct_drawSolidBox(pvid, cpct_px2byteM0(2,2), width_, height_);
   0361 DD 7E 06      [19]  914 	ld	a,6 (ix)
   0364 DD 77 FC      [19]  915 	ld	-4 (ix),a
   0367 DD 7E 04      [19]  916 	ld	a,4 (ix)
   036A DD 77 FD      [19]  917 	ld	-3 (ix),a
   036D C5            [11]  918 	push	bc
   036E D5            [11]  919 	push	de
   036F 21 02 02      [10]  920 	ld	hl,#0x0202
   0372 E5            [11]  921 	push	hl
   0373 CDr00r00      [17]  922 	call	_cpct_px2byteM0
   0376 DD 75 FF      [19]  923 	ld	-1 (ix),l
   0379 D1            [10]  924 	pop	de
   037A C1            [10]  925 	pop	bc
   037B D5            [11]  926 	push	de
   037C DD 66 FC      [19]  927 	ld	h,-4 (ix)
   037F DD 6E FD      [19]  928 	ld	l,-3 (ix)
   0382 E5            [11]  929 	push	hl
   0383 DD 7E FF      [19]  930 	ld	a,-1 (ix)
   0386 F5            [11]  931 	push	af
   0387 33            [ 6]  932 	inc	sp
   0388 C5            [11]  933 	push	bc
   0389 CDr00r00      [17]  934 	call	_cpct_drawSolidBox
   038C F1            [10]  935 	pop	af
   038D F1            [10]  936 	pop	af
   038E 33            [ 6]  937 	inc	sp
   038F D1            [10]  938 	pop	de
                            939 ;src/includes/gui.h:38: pvid = cpct_getScreenPtr(SCR_VMEM, left, top);
   0390 63            [ 4]  940 	ld	h,e
   0391 DD 56 F9      [19]  941 	ld	d,-7 (ix)
   0394 E5            [11]  942 	push	hl
   0395 33            [ 6]  943 	inc	sp
   0396 D5            [11]  944 	push	de
   0397 33            [ 6]  945 	inc	sp
   0398 21 00 C0      [10]  946 	ld	hl,#0xC000
   039B E5            [11]  947 	push	hl
   039C CDr00r00      [17]  948 	call	_cpct_getScreenPtr
                            949 ;src/includes/gui.h:39: cpct_drawSolidBox(pvid, cpct_px2byteM0(6,6), width_, height_);
   039F E5            [11]  950 	push	hl
   03A0 21 06 06      [10]  951 	ld	hl,#0x0606
   03A3 E5            [11]  952 	push	hl
   03A4 CDr00r00      [17]  953 	call	_cpct_px2byteM0
   03A7 45            [ 4]  954 	ld	b,l
   03A8 D1            [10]  955 	pop	de
   03A9 DD 66 FC      [19]  956 	ld	h,-4 (ix)
   03AC DD 6E FD      [19]  957 	ld	l,-3 (ix)
   03AF E5            [11]  958 	push	hl
   03B0 C5            [11]  959 	push	bc
   03B1 33            [ 6]  960 	inc	sp
   03B2 D5            [11]  961 	push	de
   03B3 CDr00r00      [17]  962 	call	_cpct_drawSolidBox
   03B6 F1            [10]  963 	pop	af
   03B7 F1            [10]  964 	pop	af
   03B8 33            [ 6]  965 	inc	sp
                            966 ;src/includes/gui.h:42: pvid = cpct_getScreenPtr(SCR_VMEM, left+1, top+2);
   03B9 DD 66 FB      [19]  967 	ld	h,-5 (ix)
   03BC 24            [ 4]  968 	inc	h
   03BD 24            [ 4]  969 	inc	h
   03BE E5            [11]  970 	push	hl
   03BF 33            [ 6]  971 	inc	sp
   03C0 DD 7E FE      [19]  972 	ld	a,-2 (ix)
   03C3 F5            [11]  973 	push	af
   03C4 33            [ 6]  974 	inc	sp
   03C5 21 00 C0      [10]  975 	ld	hl,#0xC000
   03C8 E5            [11]  976 	push	hl
   03C9 CDr00r00      [17]  977 	call	_cpct_getScreenPtr
   03CC EB            [ 4]  978 	ex	de,hl
                            979 ;src/includes/gui.h:43: cpct_drawSolidBox(pvid, cpct_px2byteM0(0,0), width_-2, height_-4);
   03CD DD 7E 06      [19]  980 	ld	a,6 (ix)
   03D0 C6 FC         [ 7]  981 	add	a,#0xFC
   03D2 4F            [ 4]  982 	ld	c,a
   03D3 DD 46 04      [19]  983 	ld	b,4 (ix)
   03D6 05            [ 4]  984 	dec	b
   03D7 05            [ 4]  985 	dec	b
   03D8 C5            [11]  986 	push	bc
   03D9 D5            [11]  987 	push	de
   03DA 21 00 00      [10]  988 	ld	hl,#0x0000
   03DD E5            [11]  989 	push	hl
   03DE CDr00r00      [17]  990 	call	_cpct_px2byteM0
   03E1 DD 75 FF      [19]  991 	ld	-1 (ix),l
   03E4 D1            [10]  992 	pop	de
   03E5 C1            [10]  993 	pop	bc
   03E6 79            [ 4]  994 	ld	a,c
   03E7 F5            [11]  995 	push	af
   03E8 33            [ 6]  996 	inc	sp
   03E9 C5            [11]  997 	push	bc
   03EA 33            [ 6]  998 	inc	sp
   03EB DD 7E FF      [19]  999 	ld	a,-1 (ix)
   03EE F5            [11] 1000 	push	af
   03EF 33            [ 6] 1001 	inc	sp
   03F0 D5            [11] 1002 	push	de
   03F1 CDr00r00      [17] 1003 	call	_cpct_drawSolidBox
   03F4 DD F9         [10] 1004 	ld	sp,ix
   03F6 DD E1         [14] 1005 	pop	ix
   03F8 C9            [10] 1006 	ret
                           1007 ;src/includes/gui.h:47: void drawBoxM2(int width_, int height_)
                           1008 ;	---------------------------------
                           1009 ; Function drawBoxM2
                           1010 ; ---------------------------------
   03F9                    1011 _drawBoxM2::
   03F9 DD E5         [15] 1012 	push	ix
   03FB DD 21 00 00   [14] 1013 	ld	ix,#0
   03FF DD 39         [15] 1014 	add	ix,sp
   0401 21 FA FF      [10] 1015 	ld	hl,#-6
   0404 39            [11] 1016 	add	hl,sp
   0405 F9            [ 6] 1017 	ld	sp,hl
                           1018 ;src/includes/gui.h:52: int left = (80-width_)/2;
   0406 3E 50         [ 7] 1019 	ld	a,#0x50
   0408 DD 96 04      [19] 1020 	sub	a, 4 (ix)
   040B 4F            [ 4] 1021 	ld	c,a
   040C 3E 00         [ 7] 1022 	ld	a,#0x00
   040E DD 9E 05      [19] 1023 	sbc	a, 5 (ix)
   0411 47            [ 4] 1024 	ld	b,a
   0412 61            [ 4] 1025 	ld	h,c
   0413 50            [ 4] 1026 	ld	d,b
   0414 CB 78         [ 8] 1027 	bit	7, b
   0416 28 03         [12] 1028 	jr	Z,00103$
   0418 03            [ 6] 1029 	inc	bc
   0419 61            [ 4] 1030 	ld	h,c
   041A 50            [ 4] 1031 	ld	d,b
   041B                    1032 00103$:
   041B 5C            [ 4] 1033 	ld	e, h
   041C CB 2A         [ 8] 1034 	sra	d
   041E CB 1B         [ 8] 1035 	rr	e
                           1036 ;src/includes/gui.h:53: int top = (200-height_)/2;
   0420 3E C8         [ 7] 1037 	ld	a,#0xC8
   0422 DD 96 06      [19] 1038 	sub	a, 6 (ix)
   0425 4F            [ 4] 1039 	ld	c,a
   0426 3E 00         [ 7] 1040 	ld	a,#0x00
   0428 DD 9E 07      [19] 1041 	sbc	a, 7 (ix)
   042B 47            [ 4] 1042 	ld	b,a
   042C 61            [ 4] 1043 	ld	h,c
   042D 68            [ 4] 1044 	ld	l,b
   042E CB 78         [ 8] 1045 	bit	7, b
   0430 28 03         [12] 1046 	jr	Z,00104$
   0432 03            [ 6] 1047 	inc	bc
   0433 61            [ 4] 1048 	ld	h,c
   0434 68            [ 4] 1049 	ld	l,b
   0435                    1050 00104$:
   0435 DD 74 FA      [19] 1051 	ld	-6 (ix),h
   0438 DD 75 FB      [19] 1052 	ld	-5 (ix),l
   043B DD CB FB 2E   [23] 1053 	sra	-5 (ix)
   043F DD CB FA 1E   [23] 1054 	rr	-6 (ix)
                           1055 ;src/includes/gui.h:56: pvid = cpct_getScreenPtr(SCR_VMEM, left+2, top+5);
   0443 DD 7E FA      [19] 1056 	ld	a,-6 (ix)
   0446 DD 77 FE      [19] 1057 	ld	-2 (ix), a
   0449 C6 05         [ 7] 1058 	add	a, #0x05
   044B 4F            [ 4] 1059 	ld	c,a
   044C DD 73 FF      [19] 1060 	ld	-1 (ix), e
   044F 63            [ 4] 1061 	ld	h, e
   0450 24            [ 4] 1062 	inc	h
   0451 24            [ 4] 1063 	inc	h
   0452 D5            [11] 1064 	push	de
   0453 79            [ 4] 1065 	ld	a,c
   0454 F5            [11] 1066 	push	af
   0455 33            [ 6] 1067 	inc	sp
   0456 E5            [11] 1068 	push	hl
   0457 33            [ 6] 1069 	inc	sp
   0458 21 00 C0      [10] 1070 	ld	hl,#0xC000
   045B E5            [11] 1071 	push	hl
   045C CDr00r00      [17] 1072 	call	_cpct_getScreenPtr
   045F D1            [10] 1073 	pop	de
                           1074 ;src/includes/gui.h:57: cpct_drawSolidBox(pvid, 0b00000000, width_-1, height_);
   0460 DD 46 06      [19] 1075 	ld	b,6 (ix)
   0463 DD 4E 04      [19] 1076 	ld	c,4 (ix)
   0466 79            [ 4] 1077 	ld	a,c
   0467 C6 FF         [ 7] 1078 	add	a,#0xFF
   0469 DD 75 FC      [19] 1079 	ld	-4 (ix),l
   046C DD 74 FD      [19] 1080 	ld	-3 (ix),h
   046F C5            [11] 1081 	push	bc
   0470 D5            [11] 1082 	push	de
   0471 C5            [11] 1083 	push	bc
   0472 33            [ 6] 1084 	inc	sp
   0473 F5            [11] 1085 	push	af
   0474 33            [ 6] 1086 	inc	sp
   0475 AF            [ 4] 1087 	xor	a, a
   0476 F5            [11] 1088 	push	af
   0477 33            [ 6] 1089 	inc	sp
   0478 DD 6E FC      [19] 1090 	ld	l,-4 (ix)
   047B DD 66 FD      [19] 1091 	ld	h,-3 (ix)
   047E E5            [11] 1092 	push	hl
   047F CDr00r00      [17] 1093 	call	_cpct_drawSolidBox
   0482 F1            [10] 1094 	pop	af
   0483 F1            [10] 1095 	pop	af
   0484 33            [ 6] 1096 	inc	sp
   0485 D1            [10] 1097 	pop	de
   0486 C1            [10] 1098 	pop	bc
                           1099 ;src/includes/gui.h:60: pvid = cpct_getScreenPtr(SCR_VMEM, left, top);
   0487 DD 66 FA      [19] 1100 	ld	h,-6 (ix)
   048A 53            [ 4] 1101 	ld	d,e
   048B C5            [11] 1102 	push	bc
   048C E5            [11] 1103 	push	hl
   048D 33            [ 6] 1104 	inc	sp
   048E D5            [11] 1105 	push	de
   048F 33            [ 6] 1106 	inc	sp
   0490 21 00 C0      [10] 1107 	ld	hl,#0xC000
   0493 E5            [11] 1108 	push	hl
   0494 CDr00r00      [17] 1109 	call	_cpct_getScreenPtr
   0497 C1            [10] 1110 	pop	bc
                           1111 ;src/includes/gui.h:61: cpct_drawSolidBox(pvid, 0b11111000, width_, height_);
   0498 DD 7E 04      [19] 1112 	ld	a,4 (ix)
   049B EB            [ 4] 1113 	ex	de,hl
   049C C5            [11] 1114 	push	bc
   049D C5            [11] 1115 	push	bc
   049E 33            [ 6] 1116 	inc	sp
   049F 47            [ 4] 1117 	ld	b,a
   04A0 0E F8         [ 7] 1118 	ld	c,#0xF8
   04A2 C5            [11] 1119 	push	bc
   04A3 D5            [11] 1120 	push	de
   04A4 CDr00r00      [17] 1121 	call	_cpct_drawSolidBox
   04A7 F1            [10] 1122 	pop	af
   04A8 F1            [10] 1123 	pop	af
   04A9 33            [ 6] 1124 	inc	sp
   04AA C1            [10] 1125 	pop	bc
                           1126 ;src/includes/gui.h:64: pvid = cpct_getScreenPtr(SCR_VMEM, left+1, top+1);
   04AB DD 66 FE      [19] 1127 	ld	h,-2 (ix)
   04AE 24            [ 4] 1128 	inc	h
   04AF DD 56 FF      [19] 1129 	ld	d,-1 (ix)
   04B2 14            [ 4] 1130 	inc	d
   04B3 C5            [11] 1131 	push	bc
   04B4 E5            [11] 1132 	push	hl
   04B5 33            [ 6] 1133 	inc	sp
   04B6 D5            [11] 1134 	push	de
   04B7 33            [ 6] 1135 	inc	sp
   04B8 21 00 C0      [10] 1136 	ld	hl,#0xC000
   04BB E5            [11] 1137 	push	hl
   04BC CDr00r00      [17] 1138 	call	_cpct_getScreenPtr
   04BF C1            [10] 1139 	pop	bc
   04C0 5D            [ 4] 1140 	ld	e, l
   04C1 54            [ 4] 1141 	ld	d, h
                           1142 ;src/includes/gui.h:65: cpct_drawSolidBox(pvid, 0b11111111, width_-2, height_-2);
   04C2 DD 66 06      [19] 1143 	ld	h,6 (ix)
   04C5 25            [ 4] 1144 	dec	h
   04C6 25            [ 4] 1145 	dec	h
   04C7 79            [ 4] 1146 	ld	a,c
   04C8 C6 FE         [ 7] 1147 	add	a,#0xFE
   04CA E5            [11] 1148 	push	hl
   04CB 33            [ 6] 1149 	inc	sp
   04CC 47            [ 4] 1150 	ld	b,a
   04CD 0E FF         [ 7] 1151 	ld	c,#0xFF
   04CF C5            [11] 1152 	push	bc
   04D0 D5            [11] 1153 	push	de
   04D1 CDr00r00      [17] 1154 	call	_cpct_drawSolidBox
   04D4 DD F9         [10] 1155 	ld	sp,ix
   04D6 DD E1         [14] 1156 	pop	ix
   04D8 C9            [10] 1157 	ret
                           1158 ;src/includes/gui.h:68: void EraseMenuEntry(char **menu, u8 nbEntry, u8 iSelect)
                           1159 ;	---------------------------------
                           1160 ; Function EraseMenuEntry
                           1161 ; ---------------------------------
   04D9                    1162 _EraseMenuEntry::
   04D9 DD E5         [15] 1163 	push	ix
   04DB DD 21 00 00   [14] 1164 	ld	ix,#0
   04DF DD 39         [15] 1165 	add	ix,sp
   04E1 3B            [ 6] 1166 	dec	sp
                           1167 ;src/includes/gui.h:73: p_video = cpct_getScreenPtr(SCR_VMEM, 32, (201-nbEntry*10)/2+iSelect*10);
   04E2 DD 4E 06      [19] 1168 	ld	c,6 (ix)
   04E5 06 00         [ 7] 1169 	ld	b,#0x00
   04E7 69            [ 4] 1170 	ld	l, c
   04E8 60            [ 4] 1171 	ld	h, b
   04E9 29            [11] 1172 	add	hl, hl
   04EA 29            [11] 1173 	add	hl, hl
   04EB 09            [11] 1174 	add	hl, bc
   04EC 29            [11] 1175 	add	hl, hl
   04ED 4D            [ 4] 1176 	ld	c,l
   04EE 44            [ 4] 1177 	ld	b,h
   04EF 3E C9         [ 7] 1178 	ld	a,#0xC9
   04F1 91            [ 4] 1179 	sub	a, c
   04F2 57            [ 4] 1180 	ld	d,a
   04F3 3E 00         [ 7] 1181 	ld	a,#0x00
   04F5 98            [ 4] 1182 	sbc	a, b
   04F6 5F            [ 4] 1183 	ld	e,a
   04F7 6A            [ 4] 1184 	ld	l, d
   04F8 63            [ 4] 1185 	ld	h, e
   04F9 CB 7B         [ 8] 1186 	bit	7, e
   04FB 28 03         [12] 1187 	jr	Z,00103$
   04FD 6A            [ 4] 1188 	ld	l, d
   04FE 63            [ 4] 1189 	ld	h, e
   04FF 23            [ 6] 1190 	inc	hl
   0500                    1191 00103$:
   0500 CB 2C         [ 8] 1192 	sra	h
   0502 CB 1D         [ 8] 1193 	rr	l
   0504 55            [ 4] 1194 	ld	d,l
   0505 DD 7E 07      [19] 1195 	ld	a,7 (ix)
   0508 5F            [ 4] 1196 	ld	e,a
   0509 87            [ 4] 1197 	add	a, a
   050A 87            [ 4] 1198 	add	a, a
   050B 83            [ 4] 1199 	add	a, e
   050C 87            [ 4] 1200 	add	a, a
   050D DD 77 FF      [19] 1201 	ld	-1 (ix),a
   0510 7A            [ 4] 1202 	ld	a,d
   0511 DD 86 FF      [19] 1203 	add	a, -1 (ix)
   0514 C5            [11] 1204 	push	bc
   0515 57            [ 4] 1205 	ld	d,a
   0516 1E 20         [ 7] 1206 	ld	e,#0x20
   0518 D5            [11] 1207 	push	de
   0519 21 00 C0      [10] 1208 	ld	hl,#0xC000
   051C E5            [11] 1209 	push	hl
   051D CDr00r00      [17] 1210 	call	_cpct_getScreenPtr
   0520 C1            [10] 1211 	pop	bc
                           1212 ;src/includes/gui.h:74: cpct_drawSolidBox(p_video, 0b11111111, 17, 10);
   0521 EB            [ 4] 1213 	ex	de,hl
   0522 C5            [11] 1214 	push	bc
   0523 21 11 0A      [10] 1215 	ld	hl,#0x0A11
   0526 E5            [11] 1216 	push	hl
   0527 3E FF         [ 7] 1217 	ld	a,#0xFF
   0529 F5            [11] 1218 	push	af
   052A 33            [ 6] 1219 	inc	sp
   052B D5            [11] 1220 	push	de
   052C CDr00r00      [17] 1221 	call	_cpct_drawSolidBox
   052F F1            [10] 1222 	pop	af
   0530 F1            [10] 1223 	pop	af
   0531 33            [ 6] 1224 	inc	sp
   0532 C1            [10] 1225 	pop	bc
                           1226 ;src/includes/gui.h:77: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(menu[iSelect]))/2, (202-nbEntry*10)/2+iSelect*10);
   0533 3E CA         [ 7] 1227 	ld	a,#0xCA
   0535 91            [ 4] 1228 	sub	a, c
   0536 57            [ 4] 1229 	ld	d,a
   0537 3E 00         [ 7] 1230 	ld	a,#0x00
   0539 98            [ 4] 1231 	sbc	a, b
   053A 5F            [ 4] 1232 	ld	e,a
   053B 6A            [ 4] 1233 	ld	l, d
   053C 63            [ 4] 1234 	ld	h, e
   053D CB 7B         [ 8] 1235 	bit	7, e
   053F 28 03         [12] 1236 	jr	Z,00104$
   0541 6A            [ 4] 1237 	ld	l, d
   0542 63            [ 4] 1238 	ld	h, e
   0543 23            [ 6] 1239 	inc	hl
   0544                    1240 00104$:
   0544 CB 2C         [ 8] 1241 	sra	h
   0546 CB 1D         [ 8] 1242 	rr	l
   0548 7D            [ 4] 1243 	ld	a,l
   0549 DD 86 FF      [19] 1244 	add	a, -1 (ix)
   054C 4F            [ 4] 1245 	ld	c,a
   054D DD 6E 07      [19] 1246 	ld	l,7 (ix)
   0550 26 00         [ 7] 1247 	ld	h,#0x00
   0552 29            [11] 1248 	add	hl, hl
   0553 EB            [ 4] 1249 	ex	de,hl
   0554 DD 6E 04      [19] 1250 	ld	l,4 (ix)
   0557 DD 66 05      [19] 1251 	ld	h,5 (ix)
   055A 19            [11] 1252 	add	hl,de
   055B E5            [11] 1253 	push	hl
   055C 5E            [ 7] 1254 	ld	e,(hl)
   055D 23            [ 6] 1255 	inc	hl
   055E 56            [ 7] 1256 	ld	d,(hl)
   055F C5            [11] 1257 	push	bc
   0560 D5            [11] 1258 	push	de
   0561 CDr00r00      [17] 1259 	call	_strlen
   0564 F1            [10] 1260 	pop	af
   0565 EB            [ 4] 1261 	ex	de,hl
   0566 C1            [10] 1262 	pop	bc
   0567 E1            [10] 1263 	pop	hl
   0568 3E 52         [ 7] 1264 	ld	a,#0x52
   056A 93            [ 4] 1265 	sub	a, e
   056B 5F            [ 4] 1266 	ld	e,a
   056C 3E 00         [ 7] 1267 	ld	a,#0x00
   056E 9A            [ 4] 1268 	sbc	a, d
   056F 57            [ 4] 1269 	ld	d,a
   0570 CB 3A         [ 8] 1270 	srl	d
   0572 CB 1B         [ 8] 1271 	rr	e
   0574 E5            [11] 1272 	push	hl
   0575 51            [ 4] 1273 	ld	d, c
   0576 D5            [11] 1274 	push	de
   0577 01 00 C0      [10] 1275 	ld	bc,#0xC000
   057A C5            [11] 1276 	push	bc
   057B CDr00r00      [17] 1277 	call	_cpct_getScreenPtr
   057E 4D            [ 4] 1278 	ld	c,l
   057F 44            [ 4] 1279 	ld	b,h
   0580 E1            [10] 1280 	pop	hl
                           1281 ;src/includes/gui.h:78: cpct_drawStringM2 (menu[iSelect], p_video, 0);
   0581 5E            [ 7] 1282 	ld	e,(hl)
   0582 23            [ 6] 1283 	inc	hl
   0583 56            [ 7] 1284 	ld	d,(hl)
   0584 AF            [ 4] 1285 	xor	a, a
   0585 F5            [11] 1286 	push	af
   0586 33            [ 6] 1287 	inc	sp
   0587 C5            [11] 1288 	push	bc
   0588 D5            [11] 1289 	push	de
   0589 CDr00r00      [17] 1290 	call	_cpct_drawStringM2
   058C F1            [10] 1291 	pop	af
   058D F1            [10] 1292 	pop	af
   058E 33            [ 6] 1293 	inc	sp
   058F 33            [ 6] 1294 	inc	sp
   0590 DD E1         [14] 1295 	pop	ix
   0592 C9            [10] 1296 	ret
                           1297 ;src/includes/gui.h:81: void drawMenuEntry(char **menu, u8 nbEntry, u8 iSelect)
                           1298 ;	---------------------------------
                           1299 ; Function drawMenuEntry
                           1300 ; ---------------------------------
   0593                    1301 _drawMenuEntry::
   0593 DD E5         [15] 1302 	push	ix
   0595 DD 21 00 00   [14] 1303 	ld	ix,#0
   0599 DD 39         [15] 1304 	add	ix,sp
   059B 21 FA FF      [10] 1305 	ld	hl,#-6
   059E 39            [11] 1306 	add	hl,sp
   059F F9            [ 6] 1307 	ld	sp,hl
                           1308 ;src/includes/gui.h:89: p_video = cpct_getScreenPtr(SCR_VMEM, 32, (201-nbEntry*10)/2+iSelect*10);
   05A0 DD 4E 06      [19] 1309 	ld	c,6 (ix)
   05A3 06 00         [ 7] 1310 	ld	b,#0x00
   05A5 69            [ 4] 1311 	ld	l, c
   05A6 60            [ 4] 1312 	ld	h, b
   05A7 29            [11] 1313 	add	hl, hl
   05A8 29            [11] 1314 	add	hl, hl
   05A9 09            [11] 1315 	add	hl, bc
   05AA 29            [11] 1316 	add	hl, hl
   05AB 4D            [ 4] 1317 	ld	c,l
   05AC 44            [ 4] 1318 	ld	b,h
   05AD 3E C9         [ 7] 1319 	ld	a,#0xC9
   05AF 91            [ 4] 1320 	sub	a, c
   05B0 57            [ 4] 1321 	ld	d,a
   05B1 3E 00         [ 7] 1322 	ld	a,#0x00
   05B3 98            [ 4] 1323 	sbc	a, b
   05B4 5F            [ 4] 1324 	ld	e,a
   05B5 6A            [ 4] 1325 	ld	l, d
   05B6 63            [ 4] 1326 	ld	h, e
   05B7 CB 7B         [ 8] 1327 	bit	7, e
   05B9 28 03         [12] 1328 	jr	Z,00114$
   05BB 6A            [ 4] 1329 	ld	l, d
   05BC 63            [ 4] 1330 	ld	h, e
   05BD 23            [ 6] 1331 	inc	hl
   05BE                    1332 00114$:
   05BE CB 2C         [ 8] 1333 	sra	h
   05C0 CB 1D         [ 8] 1334 	rr	l
   05C2 55            [ 4] 1335 	ld	d,l
   05C3 DD 7E 07      [19] 1336 	ld	a,7 (ix)
   05C6 5F            [ 4] 1337 	ld	e,a
   05C7 87            [ 4] 1338 	add	a, a
   05C8 87            [ 4] 1339 	add	a, a
   05C9 83            [ 4] 1340 	add	a, e
   05CA 87            [ 4] 1341 	add	a, a
   05CB 82            [ 4] 1342 	add	a,d
   05CC C5            [11] 1343 	push	bc
   05CD 57            [ 4] 1344 	ld	d,a
   05CE 1E 20         [ 7] 1345 	ld	e,#0x20
   05D0 D5            [11] 1346 	push	de
   05D1 21 00 C0      [10] 1347 	ld	hl,#0xC000
   05D4 E5            [11] 1348 	push	hl
   05D5 CDr00r00      [17] 1349 	call	_cpct_getScreenPtr
   05D8 C1            [10] 1350 	pop	bc
                           1351 ;src/includes/gui.h:90: cpct_drawSolidBox(p_video, 0b00000000, 17, 10);
   05D9 EB            [ 4] 1352 	ex	de,hl
   05DA C5            [11] 1353 	push	bc
   05DB 21 11 0A      [10] 1354 	ld	hl,#0x0A11
   05DE E5            [11] 1355 	push	hl
   05DF AF            [ 4] 1356 	xor	a, a
   05E0 F5            [11] 1357 	push	af
   05E1 33            [ 6] 1358 	inc	sp
   05E2 D5            [11] 1359 	push	de
   05E3 CDr00r00      [17] 1360 	call	_cpct_drawSolidBox
   05E6 F1            [10] 1361 	pop	af
   05E7 F1            [10] 1362 	pop	af
   05E8 33            [ 6] 1363 	inc	sp
   05E9 C1            [10] 1364 	pop	bc
                           1365 ;src/includes/gui.h:93: for(i=0; i<14000; i++) {}
   05EA 21 B0 36      [10] 1366 	ld	hl,#0x36B0
   05ED                    1367 00108$:
   05ED 2B            [ 6] 1368 	dec	hl
   05EE 7C            [ 4] 1369 	ld	a,h
   05EF B5            [ 4] 1370 	or	a,l
   05F0 20 FB         [12] 1371 	jr	NZ,00108$
                           1372 ;src/includes/gui.h:96: for(i=0; i<nbEntry; i++)
   05F2 3E CA         [ 7] 1373 	ld	a,#0xCA
   05F4 91            [ 4] 1374 	sub	a, c
   05F5 DD 77 FC      [19] 1375 	ld	-4 (ix),a
   05F8 3E 00         [ 7] 1376 	ld	a,#0x00
   05FA 98            [ 4] 1377 	sbc	a, b
   05FB DD 77 FD      [19] 1378 	ld	-3 (ix), a
   05FE 07            [ 4] 1379 	rlca
   05FF E6 01         [ 7] 1380 	and	a,#0x01
   0601 5F            [ 4] 1381 	ld	e,a
   0602 21 00 00      [10] 1382 	ld	hl,#0x0000
   0605 E3            [19] 1383 	ex	(sp), hl
   0606                    1384 00110$:
   0606 DD 66 06      [19] 1385 	ld	h,6 (ix)
   0609 2E 00         [ 7] 1386 	ld	l,#0x00
   060B DD 7E FA      [19] 1387 	ld	a,-6 (ix)
   060E 94            [ 4] 1388 	sub	a, h
   060F DD 7E FB      [19] 1389 	ld	a,-5 (ix)
   0612 9D            [ 4] 1390 	sbc	a, l
   0613 E2r18r06      [10] 1391 	jp	PO, 00146$
   0616 EE 80         [ 7] 1392 	xor	a, #0x80
   0618                    1393 00146$:
   0618 F2rBEr06      [10] 1394 	jp	P,00112$
                           1395 ;src/includes/gui.h:98: if(i==iSelect)
   061B DD 56 07      [19] 1396 	ld	d,7 (ix)
   061E 06 00         [ 7] 1397 	ld	b,#0x00
   0620 DD 7E FA      [19] 1398 	ld	a,-6 (ix)
   0623 92            [ 4] 1399 	sub	a, d
   0624 20 0A         [12] 1400 	jr	NZ,00103$
   0626 DD 7E FB      [19] 1401 	ld	a,-5 (ix)
   0629 90            [ 4] 1402 	sub	a, b
   062A 20 04         [12] 1403 	jr	NZ,00103$
                           1404 ;src/includes/gui.h:99: penSelected = 1;
   062C 0E 01         [ 7] 1405 	ld	c,#0x01
   062E 18 02         [12] 1406 	jr	00104$
   0630                    1407 00103$:
                           1408 ;src/includes/gui.h:101: penSelected = 0;
   0630 0E 00         [ 7] 1409 	ld	c,#0x00
   0632                    1410 00104$:
                           1411 ;src/includes/gui.h:103: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(menu[i]))/2, (202-nbEntry*10)/2+i*10);
   0632 DD 6E FC      [19] 1412 	ld	l,-4 (ix)
   0635 DD 66 FD      [19] 1413 	ld	h,-3 (ix)
   0638 7B            [ 4] 1414 	ld	a,e
   0639 B7            [ 4] 1415 	or	a, a
   063A 28 07         [12] 1416 	jr	Z,00115$
   063C DD 6E FC      [19] 1417 	ld	l,-4 (ix)
   063F DD 66 FD      [19] 1418 	ld	h,-3 (ix)
   0642 23            [ 6] 1419 	inc	hl
   0643                    1420 00115$:
   0643 CB 2C         [ 8] 1421 	sra	h
   0645 CB 1D         [ 8] 1422 	rr	l
   0647 45            [ 4] 1423 	ld	b,l
   0648 DD 6E FA      [19] 1424 	ld	l,-6 (ix)
   064B D5            [11] 1425 	push	de
   064C 5D            [ 4] 1426 	ld	e,l
   064D 29            [11] 1427 	add	hl, hl
   064E 29            [11] 1428 	add	hl, hl
   064F 19            [11] 1429 	add	hl, de
   0650 29            [11] 1430 	add	hl, hl
   0651 D1            [10] 1431 	pop	de
   0652 78            [ 4] 1432 	ld	a,b
   0653 85            [ 4] 1433 	add	a, l
   0654 DD 77 FF      [19] 1434 	ld	-1 (ix),a
   0657 DD 56 FA      [19] 1435 	ld	d,-6 (ix)
   065A DD 46 FB      [19] 1436 	ld	b,-5 (ix)
   065D CB 22         [ 8] 1437 	sla	d
   065F CB 10         [ 8] 1438 	rl	b
   0661 DD 7E 04      [19] 1439 	ld	a,4 (ix)
   0664 82            [ 4] 1440 	add	a, d
   0665 57            [ 4] 1441 	ld	d,a
   0666 DD 7E 05      [19] 1442 	ld	a,5 (ix)
   0669 88            [ 4] 1443 	adc	a, b
   066A 47            [ 4] 1444 	ld	b,a
   066B 6A            [ 4] 1445 	ld	l, d
   066C 60            [ 4] 1446 	ld	h, b
   066D 7E            [ 7] 1447 	ld	a, (hl)
   066E 23            [ 6] 1448 	inc	hl
   066F 66            [ 7] 1449 	ld	h,(hl)
   0670 6F            [ 4] 1450 	ld	l,a
   0671 C5            [11] 1451 	push	bc
   0672 D5            [11] 1452 	push	de
   0673 E5            [11] 1453 	push	hl
   0674 CDr00r00      [17] 1454 	call	_strlen
   0677 F1            [10] 1455 	pop	af
   0678 D1            [10] 1456 	pop	de
   0679 C1            [10] 1457 	pop	bc
   067A 3E 52         [ 7] 1458 	ld	a,#0x52
   067C 95            [ 4] 1459 	sub	a, l
   067D 6F            [ 4] 1460 	ld	l,a
   067E 3E 00         [ 7] 1461 	ld	a,#0x00
   0680 9C            [ 4] 1462 	sbc	a, h
   0681 67            [ 4] 1463 	ld	h,a
   0682 CB 3C         [ 8] 1464 	srl	h
   0684 CB 1D         [ 8] 1465 	rr	l
   0686 DD 75 FE      [19] 1466 	ld	-2 (ix),l
   0689 C5            [11] 1467 	push	bc
   068A D5            [11] 1468 	push	de
   068B DD 66 FF      [19] 1469 	ld	h,-1 (ix)
   068E DD 6E FE      [19] 1470 	ld	l,-2 (ix)
   0691 E5            [11] 1471 	push	hl
   0692 21 00 C0      [10] 1472 	ld	hl,#0xC000
   0695 E5            [11] 1473 	push	hl
   0696 CDr00r00      [17] 1474 	call	_cpct_getScreenPtr
   0699 D1            [10] 1475 	pop	de
   069A C1            [10] 1476 	pop	bc
   069B E5            [11] 1477 	push	hl
   069C FD E1         [14] 1478 	pop	iy
                           1479 ;src/includes/gui.h:104: cpct_drawStringM2 (menu[i], p_video, penSelected);
   069E 6A            [ 4] 1480 	ld	l, d
   069F 60            [ 4] 1481 	ld	h, b
   06A0 7E            [ 7] 1482 	ld	a, (hl)
   06A1 23            [ 6] 1483 	inc	hl
   06A2 66            [ 7] 1484 	ld	h,(hl)
   06A3 6F            [ 4] 1485 	ld	l,a
   06A4 D5            [11] 1486 	push	de
   06A5 79            [ 4] 1487 	ld	a,c
   06A6 F5            [11] 1488 	push	af
   06A7 33            [ 6] 1489 	inc	sp
   06A8 FD E5         [15] 1490 	push	iy
   06AA E5            [11] 1491 	push	hl
   06AB CDr00r00      [17] 1492 	call	_cpct_drawStringM2
   06AE F1            [10] 1493 	pop	af
   06AF F1            [10] 1494 	pop	af
   06B0 33            [ 6] 1495 	inc	sp
   06B1 D1            [10] 1496 	pop	de
                           1497 ;src/includes/gui.h:96: for(i=0; i<nbEntry; i++)
   06B2 DD 34 FA      [23] 1498 	inc	-6 (ix)
   06B5 C2r06r06      [10] 1499 	jp	NZ,00110$
   06B8 DD 34 FB      [23] 1500 	inc	-5 (ix)
   06BB C3r06r06      [10] 1501 	jp	00110$
   06BE                    1502 00112$:
   06BE DD F9         [10] 1503 	ld	sp, ix
   06C0 DD E1         [14] 1504 	pop	ix
   06C2 C9            [10] 1505 	ret
                           1506 ;src/includes/gui.h:108: u8 drawMenu(char **menu, u8 nbEntry)
                           1507 ;	---------------------------------
                           1508 ; Function drawMenu
                           1509 ; ---------------------------------
   06C3                    1510 _drawMenu::
   06C3 DD E5         [15] 1511 	push	ix
   06C5 DD 21 00 00   [14] 1512 	ld	ix,#0
   06C9 DD 39         [15] 1513 	add	ix,sp
   06CB F5            [11] 1514 	push	af
                           1515 ;src/includes/gui.h:111: u8 iSelect=0;
   06CC 06 00         [ 7] 1516 	ld	b,#0x00
                           1517 ;src/includes/gui.h:113: drawBoxM2(30,nbEntry*12);
   06CE DD 5E 06      [19] 1518 	ld	e,6 (ix)
   06D1 16 00         [ 7] 1519 	ld	d,#0x00
   06D3 6B            [ 4] 1520 	ld	l, e
   06D4 62            [ 4] 1521 	ld	h, d
   06D5 29            [11] 1522 	add	hl, hl
   06D6 19            [11] 1523 	add	hl, de
   06D7 29            [11] 1524 	add	hl, hl
   06D8 29            [11] 1525 	add	hl, hl
   06D9 C5            [11] 1526 	push	bc
   06DA E5            [11] 1527 	push	hl
   06DB 21 1E 00      [10] 1528 	ld	hl,#0x001E
   06DE E5            [11] 1529 	push	hl
   06DF CDrF9r03      [17] 1530 	call	_drawBoxM2
   06E2 F1            [10] 1531 	pop	af
   06E3 F1            [10] 1532 	pop	af
   06E4 AF            [ 4] 1533 	xor	a, a
   06E5 F5            [11] 1534 	push	af
   06E6 33            [ 6] 1535 	inc	sp
   06E7 DD 7E 06      [19] 1536 	ld	a,6 (ix)
   06EA F5            [11] 1537 	push	af
   06EB 33            [ 6] 1538 	inc	sp
   06EC DD 6E 04      [19] 1539 	ld	l,4 (ix)
   06EF DD 66 05      [19] 1540 	ld	h,5 (ix)
   06F2 E5            [11] 1541 	push	hl
   06F3 CDr93r05      [17] 1542 	call	_drawMenuEntry
   06F6 F1            [10] 1543 	pop	af
   06F7 F1            [10] 1544 	pop	af
   06F8 C1            [10] 1545 	pop	bc
                           1546 ;src/includes/gui.h:117: do{
   06F9 DD 4E 06      [19] 1547 	ld	c,6 (ix)
   06FC 0D            [ 4] 1548 	dec	c
   06FD                    1549 00111$:
                           1550 ;src/includes/gui.h:118: cpct_scanKeyboard(); 
   06FD C5            [11] 1551 	push	bc
   06FE CDr00r00      [17] 1552 	call	_cpct_scanKeyboard
   0701 21 00 01      [10] 1553 	ld	hl,#0x0100
   0704 CDr00r00      [17] 1554 	call	_cpct_isKeyPressed
   0707 7D            [ 4] 1555 	ld	a,l
   0708 C1            [10] 1556 	pop	bc
   0709 B7            [ 4] 1557 	or	a, a
   070A 28 32         [12] 1558 	jr	Z,00105$
                           1559 ;src/includes/gui.h:122: EraseMenuEntry(menu, nbEntry, iSelect);
   070C C5            [11] 1560 	push	bc
   070D C5            [11] 1561 	push	bc
   070E 33            [ 6] 1562 	inc	sp
   070F DD 7E 06      [19] 1563 	ld	a,6 (ix)
   0712 F5            [11] 1564 	push	af
   0713 33            [ 6] 1565 	inc	sp
   0714 DD 6E 04      [19] 1566 	ld	l,4 (ix)
   0717 DD 66 05      [19] 1567 	ld	h,5 (ix)
   071A E5            [11] 1568 	push	hl
   071B CDrD9r04      [17] 1569 	call	_EraseMenuEntry
   071E F1            [10] 1570 	pop	af
   071F F1            [10] 1571 	pop	af
   0720 C1            [10] 1572 	pop	bc
                           1573 ;src/includes/gui.h:124: if(iSelect ==0)
   0721 78            [ 4] 1574 	ld	a,b
   0722 B7            [ 4] 1575 	or	a, a
   0723 20 03         [12] 1576 	jr	NZ,00102$
                           1577 ;src/includes/gui.h:125: iSelect = nbEntry-1;
   0725 41            [ 4] 1578 	ld	b,c
   0726 18 01         [12] 1579 	jr	00103$
   0728                    1580 00102$:
                           1581 ;src/includes/gui.h:127: iSelect--;
   0728 05            [ 4] 1582 	dec	b
   0729                    1583 00103$:
                           1584 ;src/includes/gui.h:129: drawMenuEntry(menu, nbEntry, iSelect);
   0729 C5            [11] 1585 	push	bc
   072A C5            [11] 1586 	push	bc
   072B 33            [ 6] 1587 	inc	sp
   072C DD 7E 06      [19] 1588 	ld	a,6 (ix)
   072F F5            [11] 1589 	push	af
   0730 33            [ 6] 1590 	inc	sp
   0731 DD 6E 04      [19] 1591 	ld	l,4 (ix)
   0734 DD 66 05      [19] 1592 	ld	h,5 (ix)
   0737 E5            [11] 1593 	push	hl
   0738 CDr93r05      [17] 1594 	call	_drawMenuEntry
   073B F1            [10] 1595 	pop	af
   073C F1            [10] 1596 	pop	af
   073D C1            [10] 1597 	pop	bc
   073E                    1598 00105$:
                           1599 ;src/includes/gui.h:132: if ( cpct_isKeyPressed(Key_CursorDown) )
   073E C5            [11] 1600 	push	bc
   073F 21 00 04      [10] 1601 	ld	hl,#0x0400
   0742 CDr00r00      [17] 1602 	call	_cpct_isKeyPressed
   0745 5D            [ 4] 1603 	ld	e,l
   0746 C1            [10] 1604 	pop	bc
   0747 7B            [ 4] 1605 	ld	a,e
   0748 B7            [ 4] 1606 	or	a, a
   0749 28 48         [12] 1607 	jr	Z,00112$
                           1608 ;src/includes/gui.h:134: EraseMenuEntry(menu, nbEntry, iSelect);
   074B C5            [11] 1609 	push	bc
   074C C5            [11] 1610 	push	bc
   074D 33            [ 6] 1611 	inc	sp
   074E DD 7E 06      [19] 1612 	ld	a,6 (ix)
   0751 F5            [11] 1613 	push	af
   0752 33            [ 6] 1614 	inc	sp
   0753 DD 6E 04      [19] 1615 	ld	l,4 (ix)
   0756 DD 66 05      [19] 1616 	ld	h,5 (ix)
   0759 E5            [11] 1617 	push	hl
   075A CDrD9r04      [17] 1618 	call	_EraseMenuEntry
   075D F1            [10] 1619 	pop	af
   075E F1            [10] 1620 	pop	af
   075F C1            [10] 1621 	pop	bc
                           1622 ;src/includes/gui.h:136: if(iSelect == nbEntry-1)
   0760 DD 5E 06      [19] 1623 	ld	e,6 (ix)
   0763 16 00         [ 7] 1624 	ld	d,#0x00
   0765 1B            [ 6] 1625 	dec	de
   0766 DD 70 FE      [19] 1626 	ld	-2 (ix),b
   0769 DD 36 FF 00   [19] 1627 	ld	-1 (ix),#0x00
   076D 7B            [ 4] 1628 	ld	a,e
   076E DD 96 FE      [19] 1629 	sub	a, -2 (ix)
   0771 20 0A         [12] 1630 	jr	NZ,00107$
   0773 7A            [ 4] 1631 	ld	a,d
   0774 DD 96 FF      [19] 1632 	sub	a, -1 (ix)
   0777 20 04         [12] 1633 	jr	NZ,00107$
                           1634 ;src/includes/gui.h:137: iSelect = 0;
   0779 06 00         [ 7] 1635 	ld	b,#0x00
   077B 18 01         [12] 1636 	jr	00108$
   077D                    1637 00107$:
                           1638 ;src/includes/gui.h:139: iSelect++;
   077D 04            [ 4] 1639 	inc	b
   077E                    1640 00108$:
                           1641 ;src/includes/gui.h:141: drawMenuEntry(menu, nbEntry, iSelect);
   077E C5            [11] 1642 	push	bc
   077F C5            [11] 1643 	push	bc
   0780 33            [ 6] 1644 	inc	sp
   0781 DD 7E 06      [19] 1645 	ld	a,6 (ix)
   0784 F5            [11] 1646 	push	af
   0785 33            [ 6] 1647 	inc	sp
   0786 DD 6E 04      [19] 1648 	ld	l,4 (ix)
   0789 DD 66 05      [19] 1649 	ld	h,5 (ix)
   078C E5            [11] 1650 	push	hl
   078D CDr93r05      [17] 1651 	call	_drawMenuEntry
   0790 F1            [10] 1652 	pop	af
   0791 F1            [10] 1653 	pop	af
   0792 C1            [10] 1654 	pop	bc
   0793                    1655 00112$:
                           1656 ;src/includes/gui.h:144: while(!cpct_isKeyPressed(Key_Return));
   0793 C5            [11] 1657 	push	bc
   0794 21 02 04      [10] 1658 	ld	hl,#0x0402
   0797 CDr00r00      [17] 1659 	call	_cpct_isKeyPressed
   079A 7D            [ 4] 1660 	ld	a,l
   079B C1            [10] 1661 	pop	bc
   079C B7            [ 4] 1662 	or	a, a
   079D CArFDr06      [10] 1663 	jp	Z,00111$
                           1664 ;src/includes/gui.h:147: for(i=0; i<14000; i++) {}
   07A0 21 B0 36      [10] 1665 	ld	hl,#0x36B0
   07A3                    1666 00117$:
   07A3 EB            [ 4] 1667 	ex	de,hl
   07A4 1B            [ 6] 1668 	dec	de
   07A5 6B            [ 4] 1669 	ld	l, e
   07A6 7A            [ 4] 1670 	ld	a,d
   07A7 67            [ 4] 1671 	ld	h,a
   07A8 B3            [ 4] 1672 	or	a,e
   07A9 20 F8         [12] 1673 	jr	NZ,00117$
                           1674 ;src/includes/gui.h:149: return iSelect;
   07AB 68            [ 4] 1675 	ld	l,b
   07AC DD F9         [10] 1676 	ld	sp, ix
   07AE DD E1         [14] 1677 	pop	ix
   07B0 C9            [10] 1678 	ret
                           1679 ;src/includes/gui.h:159: u8 drawWindow(char **text, u8 nbLine, u8 button)
                           1680 ;	---------------------------------
                           1681 ; Function drawWindow
                           1682 ; ---------------------------------
   07B1                    1683 _drawWindow::
   07B1 DD E5         [15] 1684 	push	ix
   07B3 DD 21 00 00   [14] 1685 	ld	ix,#0
   07B7 DD 39         [15] 1686 	add	ix,sp
   07B9 21 F5 FF      [10] 1687 	ld	hl,#-11
   07BC 39            [11] 1688 	add	hl,sp
   07BD F9            [ 6] 1689 	ld	sp,hl
                           1690 ;src/includes/gui.h:163: u8 valueReturn=0;
   07BE DD 36 F5 00   [19] 1691 	ld	-11 (ix),#0x00
                           1692 ;src/includes/gui.h:166: if(button == 0)
   07C2 DD 7E 07      [19] 1693 	ld	a,7 (ix)
   07C5 B7            [ 4] 1694 	or	a, a
   07C6 20 05         [12] 1695 	jr	NZ,00102$
                           1696 ;src/includes/gui.h:167: buttonTxt = "<OK>";
   07C8 11r3Ar09      [10] 1697 	ld	de,#___str_0
   07CB 18 03         [12] 1698 	jr	00103$
   07CD                    1699 00102$:
                           1700 ;src/includes/gui.h:169: buttonTxt = "<OK>  <Cancel>";
   07CD 11r3Fr09      [10] 1701 	ld	de,#___str_1+0
   07D0                    1702 00103$:
                           1703 ;src/includes/gui.h:171: drawBoxM2(30,(nbLine+2)*12);
   07D0 DD 4E 06      [19] 1704 	ld	c,6 (ix)
   07D3 06 00         [ 7] 1705 	ld	b,#0x00
   07D5 03            [ 6] 1706 	inc	bc
   07D6 03            [ 6] 1707 	inc	bc
   07D7 69            [ 4] 1708 	ld	l, c
   07D8 60            [ 4] 1709 	ld	h, b
   07D9 29            [11] 1710 	add	hl, hl
   07DA 09            [11] 1711 	add	hl, bc
   07DB 29            [11] 1712 	add	hl, hl
   07DC 29            [11] 1713 	add	hl, hl
   07DD C5            [11] 1714 	push	bc
   07DE D5            [11] 1715 	push	de
   07DF E5            [11] 1716 	push	hl
   07E0 21 1E 00      [10] 1717 	ld	hl,#0x001E
   07E3 E5            [11] 1718 	push	hl
   07E4 CDrF9r03      [17] 1719 	call	_drawBoxM2
   07E7 F1            [10] 1720 	pop	af
   07E8 F1            [10] 1721 	pop	af
   07E9 D1            [10] 1722 	pop	de
   07EA C1            [10] 1723 	pop	bc
                           1724 ;src/includes/gui.h:173: for(i=0; i<nbLine; i++)
   07EB 69            [ 4] 1725 	ld	l, c
   07EC 60            [ 4] 1726 	ld	h, b
   07ED 29            [11] 1727 	add	hl, hl
   07EE 29            [11] 1728 	add	hl, hl
   07EF 09            [11] 1729 	add	hl, bc
   07F0 29            [11] 1730 	add	hl, hl
   07F1 3E CA         [ 7] 1731 	ld	a,#0xCA
   07F3 95            [ 4] 1732 	sub	a, l
   07F4 DD 77 F8      [19] 1733 	ld	-8 (ix),a
   07F7 3E 00         [ 7] 1734 	ld	a,#0x00
   07F9 9C            [ 4] 1735 	sbc	a, h
   07FA DD 77 F9      [19] 1736 	ld	-7 (ix), a
   07FD 07            [ 4] 1737 	rlca
   07FE E6 01         [ 7] 1738 	and	a,#0x01
   0800 DD 77 FF      [19] 1739 	ld	-1 (ix),a
   0803 DD 36 F6 00   [19] 1740 	ld	-10 (ix),#0x00
   0807 DD 36 FC 00   [19] 1741 	ld	-4 (ix),#0x00
   080B                    1742 00114$:
                           1743 ;src/includes/gui.h:175: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(text[i]))/2, (202-(nbLine+2)*10)/2+i*10);
   080B DD 7E F8      [19] 1744 	ld	a,-8 (ix)
   080E C6 01         [ 7] 1745 	add	a, #0x01
   0810 DD 77 FA      [19] 1746 	ld	-6 (ix),a
   0813 DD 7E F9      [19] 1747 	ld	a,-7 (ix)
   0816 CE 00         [ 7] 1748 	adc	a, #0x00
   0818 DD 77 FB      [19] 1749 	ld	-5 (ix),a
                           1750 ;src/includes/gui.h:173: for(i=0; i<nbLine; i++)
   081B DD 7E F6      [19] 1751 	ld	a,-10 (ix)
   081E DD 96 06      [19] 1752 	sub	a, 6 (ix)
   0821 D2rADr08      [10] 1753 	jp	NC,00104$
                           1754 ;src/includes/gui.h:175: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(text[i]))/2, (202-(nbLine+2)*10)/2+i*10);
   0824 DD 6E F8      [19] 1755 	ld	l,-8 (ix)
   0827 DD 66 F9      [19] 1756 	ld	h,-7 (ix)
   082A DD 7E FF      [19] 1757 	ld	a,-1 (ix)
   082D B7            [ 4] 1758 	or	a, a
   082E 28 06         [12] 1759 	jr	Z,00118$
   0830 DD 6E FA      [19] 1760 	ld	l,-6 (ix)
   0833 DD 66 FB      [19] 1761 	ld	h,-5 (ix)
   0836                    1762 00118$:
   0836 CB 2C         [ 8] 1763 	sra	h
   0838 CB 1D         [ 8] 1764 	rr	l
   083A DD 66 FC      [19] 1765 	ld	h,-4 (ix)
   083D 7D            [ 4] 1766 	ld	a,l
   083E 84            [ 4] 1767 	add	a, h
   083F DD 77 F7      [19] 1768 	ld	-9 (ix),a
   0842 DD 6E F6      [19] 1769 	ld	l,-10 (ix)
   0845 26 00         [ 7] 1770 	ld	h,#0x00
   0847 29            [11] 1771 	add	hl, hl
   0848 45            [ 4] 1772 	ld	b,l
   0849 4C            [ 4] 1773 	ld	c,h
   084A DD 7E 04      [19] 1774 	ld	a,4 (ix)
   084D 80            [ 4] 1775 	add	a, b
   084E DD 77 FD      [19] 1776 	ld	-3 (ix),a
   0851 DD 7E 05      [19] 1777 	ld	a,5 (ix)
   0854 89            [ 4] 1778 	adc	a, c
   0855 DD 77 FE      [19] 1779 	ld	-2 (ix),a
   0858 DD 6E FD      [19] 1780 	ld	l,-3 (ix)
   085B DD 66 FE      [19] 1781 	ld	h,-2 (ix)
   085E 4E            [ 7] 1782 	ld	c,(hl)
   085F 23            [ 6] 1783 	inc	hl
   0860 46            [ 7] 1784 	ld	b,(hl)
   0861 D5            [11] 1785 	push	de
   0862 C5            [11] 1786 	push	bc
   0863 CDr00r00      [17] 1787 	call	_strlen
   0866 F1            [10] 1788 	pop	af
   0867 D1            [10] 1789 	pop	de
   0868 3E 52         [ 7] 1790 	ld	a,#0x52
   086A 95            [ 4] 1791 	sub	a, l
   086B 6F            [ 4] 1792 	ld	l,a
   086C 3E 00         [ 7] 1793 	ld	a,#0x00
   086E 9C            [ 4] 1794 	sbc	a, h
   086F 67            [ 4] 1795 	ld	h,a
   0870 CB 3C         [ 8] 1796 	srl	h
   0872 CB 1D         [ 8] 1797 	rr	l
   0874 45            [ 4] 1798 	ld	b,l
   0875 D5            [11] 1799 	push	de
   0876 DD 7E F7      [19] 1800 	ld	a,-9 (ix)
   0879 F5            [11] 1801 	push	af
   087A 33            [ 6] 1802 	inc	sp
   087B C5            [11] 1803 	push	bc
   087C 33            [ 6] 1804 	inc	sp
   087D 21 00 C0      [10] 1805 	ld	hl,#0xC000
   0880 E5            [11] 1806 	push	hl
   0881 CDr00r00      [17] 1807 	call	_cpct_getScreenPtr
   0884 D1            [10] 1808 	pop	de
   0885 E5            [11] 1809 	push	hl
   0886 FD E1         [14] 1810 	pop	iy
                           1811 ;src/includes/gui.h:176: cpct_drawStringM2 (text[i], p_video, 0);
   0888 DD 6E FD      [19] 1812 	ld	l,-3 (ix)
   088B DD 66 FE      [19] 1813 	ld	h,-2 (ix)
   088E 4E            [ 7] 1814 	ld	c,(hl)
   088F 23            [ 6] 1815 	inc	hl
   0890 46            [ 7] 1816 	ld	b,(hl)
   0891 D5            [11] 1817 	push	de
   0892 AF            [ 4] 1818 	xor	a, a
   0893 F5            [11] 1819 	push	af
   0894 33            [ 6] 1820 	inc	sp
   0895 FD E5         [15] 1821 	push	iy
   0897 C5            [11] 1822 	push	bc
   0898 CDr00r00      [17] 1823 	call	_cpct_drawStringM2
   089B F1            [10] 1824 	pop	af
   089C F1            [10] 1825 	pop	af
   089D 33            [ 6] 1826 	inc	sp
   089E D1            [10] 1827 	pop	de
                           1828 ;src/includes/gui.h:173: for(i=0; i<nbLine; i++)
   089F DD 7E FC      [19] 1829 	ld	a,-4 (ix)
   08A2 C6 0A         [ 7] 1830 	add	a, #0x0A
   08A4 DD 77 FC      [19] 1831 	ld	-4 (ix),a
   08A7 DD 34 F6      [23] 1832 	inc	-10 (ix)
   08AA C3r0Br08      [10] 1833 	jp	00114$
   08AD                    1834 00104$:
                           1835 ;src/includes/gui.h:179: p_video = cpct_getScreenPtr(SCR_VMEM, (82-strlen(buttonTxt))/2, (202-(nbLine+2)*10)/2+(nbLine+1)*10);
   08AD DD 46 F8      [19] 1836 	ld	b,-8 (ix)
   08B0 DD 66 F9      [19] 1837 	ld	h,-7 (ix)
   08B3 DD 7E FF      [19] 1838 	ld	a,-1 (ix)
   08B6 B7            [ 4] 1839 	or	a, a
   08B7 28 06         [12] 1840 	jr	Z,00119$
   08B9 DD 46 FA      [19] 1841 	ld	b,-6 (ix)
   08BC DD 66 FB      [19] 1842 	ld	h,-5 (ix)
   08BF                    1843 00119$:
   08BF CB 2C         [ 8] 1844 	sra	h
   08C1 CB 18         [ 8] 1845 	rr	b
   08C3 DD 4E 06      [19] 1846 	ld	c,6 (ix)
   08C6 0C            [ 4] 1847 	inc	c
   08C7 79            [ 4] 1848 	ld	a,c
   08C8 87            [ 4] 1849 	add	a, a
   08C9 87            [ 4] 1850 	add	a, a
   08CA 81            [ 4] 1851 	add	a, c
   08CB 87            [ 4] 1852 	add	a, a
   08CC 67            [ 4] 1853 	ld	h, a
   08CD 80            [ 4] 1854 	add	a,b
   08CE 47            [ 4] 1855 	ld	b,a
   08CF C5            [11] 1856 	push	bc
   08D0 D5            [11] 1857 	push	de
   08D1 D5            [11] 1858 	push	de
   08D2 CDr00r00      [17] 1859 	call	_strlen
   08D5 F1            [10] 1860 	pop	af
   08D6 D1            [10] 1861 	pop	de
   08D7 C1            [10] 1862 	pop	bc
   08D8 3E 52         [ 7] 1863 	ld	a,#0x52
   08DA 95            [ 4] 1864 	sub	a, l
   08DB 6F            [ 4] 1865 	ld	l,a
   08DC 3E 00         [ 7] 1866 	ld	a,#0x00
   08DE 9C            [ 4] 1867 	sbc	a, h
   08DF 67            [ 4] 1868 	ld	h,a
   08E0 CB 3C         [ 8] 1869 	srl	h
   08E2 CB 1D         [ 8] 1870 	rr	l
   08E4 7D            [ 4] 1871 	ld	a,l
   08E5 D5            [11] 1872 	push	de
   08E6 C5            [11] 1873 	push	bc
   08E7 33            [ 6] 1874 	inc	sp
   08E8 F5            [11] 1875 	push	af
   08E9 33            [ 6] 1876 	inc	sp
   08EA 21 00 C0      [10] 1877 	ld	hl,#0xC000
   08ED E5            [11] 1878 	push	hl
   08EE CDr00r00      [17] 1879 	call	_cpct_getScreenPtr
   08F1 D1            [10] 1880 	pop	de
                           1881 ;src/includes/gui.h:180: cpct_drawStringM2 (buttonTxt, p_video, 0);
   08F2 4D            [ 4] 1882 	ld	c, l
   08F3 44            [ 4] 1883 	ld	b, h
   08F4 AF            [ 4] 1884 	xor	a, a
   08F5 F5            [11] 1885 	push	af
   08F6 33            [ 6] 1886 	inc	sp
   08F7 C5            [11] 1887 	push	bc
   08F8 D5            [11] 1888 	push	de
   08F9 CDr00r00      [17] 1889 	call	_cpct_drawStringM2
   08FC F1            [10] 1890 	pop	af
   08FD F1            [10] 1891 	pop	af
   08FE 33            [ 6] 1892 	inc	sp
                           1893 ;src/includes/gui.h:183: do{
   08FF                    1894 00110$:
                           1895 ;src/includes/gui.h:184: cpct_scanKeyboard(); 
   08FF CDr00r00      [17] 1896 	call	_cpct_scanKeyboard
                           1897 ;src/includes/gui.h:186: if ( cpct_isKeyPressed(Key_Return) )
   0902 21 02 04      [10] 1898 	ld	hl,#0x0402
   0905 CDr00r00      [17] 1899 	call	_cpct_isKeyPressed
   0908 7D            [ 4] 1900 	ld	a,l
   0909 B7            [ 4] 1901 	or	a, a
   090A 28 04         [12] 1902 	jr	Z,00106$
                           1903 ;src/includes/gui.h:187: valueReturn=1;
   090C DD 36 F5 01   [19] 1904 	ld	-11 (ix),#0x01
   0910                    1905 00106$:
                           1906 ;src/includes/gui.h:189: if ( cpct_isKeyPressed(Key_Esc) )
   0910 21 08 04      [10] 1907 	ld	hl,#0x0408
   0913 CDr00r00      [17] 1908 	call	_cpct_isKeyPressed
   0916 7D            [ 4] 1909 	ld	a,l
   0917 B7            [ 4] 1910 	or	a, a
   0918 28 04         [12] 1911 	jr	Z,00111$
                           1912 ;src/includes/gui.h:190: valueReturn=0;
   091A DD 36 F5 00   [19] 1913 	ld	-11 (ix),#0x00
   091E                    1914 00111$:
                           1915 ;src/includes/gui.h:192: while(!cpct_isKeyPressed(Key_Return) && !cpct_isKeyPressed(Key_Esc));
   091E 21 02 04      [10] 1916 	ld	hl,#0x0402
   0921 CDr00r00      [17] 1917 	call	_cpct_isKeyPressed
   0924 7D            [ 4] 1918 	ld	a,l
   0925 B7            [ 4] 1919 	or	a, a
   0926 20 0A         [12] 1920 	jr	NZ,00112$
   0928 21 08 04      [10] 1921 	ld	hl,#0x0408
   092B CDr00r00      [17] 1922 	call	_cpct_isKeyPressed
   092E 7D            [ 4] 1923 	ld	a,l
   092F B7            [ 4] 1924 	or	a, a
   0930 28 CD         [12] 1925 	jr	Z,00110$
   0932                    1926 00112$:
                           1927 ;src/includes/gui.h:194: return valueReturn;
   0932 DD 6E F5      [19] 1928 	ld	l,-11 (ix)
   0935 DD F9         [10] 1929 	ld	sp, ix
   0937 DD E1         [14] 1930 	pop	ix
   0939 C9            [10] 1931 	ret
   093A                    1932 ___str_0:
   093A 3C 4F 4B 3E        1933 	.ascii "<OK>"
   093E 00                 1934 	.db 0x00
   093F                    1935 ___str_1:
   093F 3C 4F 4B 3E 20 20  1936 	.ascii "<OK>  <Cancel>"
        3C 43 61 6E 63 65
        6C 3E
   094D 00                 1937 	.db 0x00
                           1938 ;src/includes/world.h:16: void drawCursor(u8 x, u8 y, u8 color)
                           1939 ;	---------------------------------
                           1940 ; Function drawCursor
                           1941 ; ---------------------------------
   094E                    1942 _drawCursor::
   094E DD E5         [15] 1943 	push	ix
   0950 DD 21 00 00   [14] 1944 	ld	ix,#0
   0954 DD 39         [15] 1945 	add	ix,sp
   0956 3B            [ 6] 1946 	dec	sp
                           1947 ;src/includes/world.h:20: p_video = cpct_getScreenPtr(SCR_VMEM, x*TILESIZE_W, y*TILESIZE_H);
   0957 DD 7E 05      [19] 1948 	ld	a,5 (ix)
   095A 07            [ 4] 1949 	rlca
   095B 07            [ 4] 1950 	rlca
   095C 07            [ 4] 1951 	rlca
   095D 07            [ 4] 1952 	rlca
   095E E6 F0         [ 7] 1953 	and	a,#0xF0
   0960 5F            [ 4] 1954 	ld	e,a
   0961 DD 7E 04      [19] 1955 	ld	a,4 (ix)
   0964 87            [ 4] 1956 	add	a, a
   0965 87            [ 4] 1957 	add	a, a
   0966 57            [ 4] 1958 	ld	d,a
   0967 D5            [11] 1959 	push	de
   0968 7B            [ 4] 1960 	ld	a,e
   0969 F5            [11] 1961 	push	af
   096A 33            [ 6] 1962 	inc	sp
   096B D5            [11] 1963 	push	de
   096C 33            [ 6] 1964 	inc	sp
   096D 21 00 C0      [10] 1965 	ld	hl,#0xC000
   0970 E5            [11] 1966 	push	hl
   0971 CDr00r00      [17] 1967 	call	_cpct_getScreenPtr
   0974 D1            [10] 1968 	pop	de
                           1969 ;src/includes/world.h:21: cpct_memset (p_video, cpct_px2byteM1(color,color,color,color), 4);
   0975 E5            [11] 1970 	push	hl
   0976 D5            [11] 1971 	push	de
   0977 DD 66 06      [19] 1972 	ld	h,6 (ix)
   097A DD 6E 06      [19] 1973 	ld	l,6 (ix)
   097D E5            [11] 1974 	push	hl
   097E DD 66 06      [19] 1975 	ld	h,6 (ix)
   0981 DD 6E 06      [19] 1976 	ld	l,6 (ix)
   0984 E5            [11] 1977 	push	hl
   0985 CDr00r00      [17] 1978 	call	_cpct_px2byteM1
   0988 F1            [10] 1979 	pop	af
   0989 F1            [10] 1980 	pop	af
   098A DD 75 FF      [19] 1981 	ld	-1 (ix),l
   098D D1            [10] 1982 	pop	de
   098E C1            [10] 1983 	pop	bc
   098F D5            [11] 1984 	push	de
   0990 21 04 00      [10] 1985 	ld	hl,#0x0004
   0993 E5            [11] 1986 	push	hl
   0994 DD 7E FF      [19] 1987 	ld	a,-1 (ix)
   0997 F5            [11] 1988 	push	af
   0998 33            [ 6] 1989 	inc	sp
   0999 C5            [11] 1990 	push	bc
   099A CDr00r00      [17] 1991 	call	_cpct_memset
   099D D1            [10] 1992 	pop	de
                           1993 ;src/includes/world.h:22: p_video = cpct_getScreenPtr(SCR_VMEM, x*TILESIZE_W, y*TILESIZE_H+1);
   099E 63            [ 4] 1994 	ld	h,e
   099F 24            [ 4] 1995 	inc	h
   09A0 D5            [11] 1996 	push	de
   09A1 E5            [11] 1997 	push	hl
   09A2 33            [ 6] 1998 	inc	sp
   09A3 D5            [11] 1999 	push	de
   09A4 33            [ 6] 2000 	inc	sp
   09A5 21 00 C0      [10] 2001 	ld	hl,#0xC000
   09A8 E5            [11] 2002 	push	hl
   09A9 CDr00r00      [17] 2003 	call	_cpct_getScreenPtr
   09AC D1            [10] 2004 	pop	de
                           2005 ;src/includes/world.h:23: cpct_memset (p_video, cpct_px2byteM1(color,color,color,color), 4);
   09AD E5            [11] 2006 	push	hl
   09AE D5            [11] 2007 	push	de
   09AF DD 66 06      [19] 2008 	ld	h,6 (ix)
   09B2 DD 6E 06      [19] 2009 	ld	l,6 (ix)
   09B5 E5            [11] 2010 	push	hl
   09B6 DD 66 06      [19] 2011 	ld	h,6 (ix)
   09B9 DD 6E 06      [19] 2012 	ld	l,6 (ix)
   09BC E5            [11] 2013 	push	hl
   09BD CDr00r00      [17] 2014 	call	_cpct_px2byteM1
   09C0 F1            [10] 2015 	pop	af
   09C1 F1            [10] 2016 	pop	af
   09C2 65            [ 4] 2017 	ld	h,l
   09C3 D1            [10] 2018 	pop	de
   09C4 C1            [10] 2019 	pop	bc
   09C5 69            [ 4] 2020 	ld	l,c
   09C6 58            [ 4] 2021 	ld	e,b
   09C7 D5            [11] 2022 	push	de
   09C8 01 04 00      [10] 2023 	ld	bc,#0x0004
   09CB C5            [11] 2024 	push	bc
   09CC E5            [11] 2025 	push	hl
   09CD 33            [ 6] 2026 	inc	sp
   09CE 63            [ 4] 2027 	ld	h, e
   09CF E5            [11] 2028 	push	hl
   09D0 CDr00r00      [17] 2029 	call	_cpct_memset
   09D3 D1            [10] 2030 	pop	de
                           2031 ;src/includes/world.h:26: p_video = cpct_getScreenPtr(SCR_VMEM, x*TILESIZE_W, (y+1)*TILESIZE_H-1);
   09D4 DD 7E 05      [19] 2032 	ld	a,5 (ix)
   09D7 3C            [ 4] 2033 	inc	a
   09D8 07            [ 4] 2034 	rlca
   09D9 07            [ 4] 2035 	rlca
   09DA 07            [ 4] 2036 	rlca
   09DB 07            [ 4] 2037 	rlca
   09DC E6 F0         [ 7] 2038 	and	a,#0xF0
   09DE 5F            [ 4] 2039 	ld	e,a
   09DF 63            [ 4] 2040 	ld	h,e
   09E0 25            [ 4] 2041 	dec	h
   09E1 D5            [11] 2042 	push	de
   09E2 E5            [11] 2043 	push	hl
   09E3 33            [ 6] 2044 	inc	sp
   09E4 D5            [11] 2045 	push	de
   09E5 33            [ 6] 2046 	inc	sp
   09E6 21 00 C0      [10] 2047 	ld	hl,#0xC000
   09E9 E5            [11] 2048 	push	hl
   09EA CDr00r00      [17] 2049 	call	_cpct_getScreenPtr
   09ED D1            [10] 2050 	pop	de
                           2051 ;src/includes/world.h:27: cpct_memset (p_video, cpct_px2byteM1(color,color,color,color), 4);
   09EE E5            [11] 2052 	push	hl
   09EF D5            [11] 2053 	push	de
   09F0 DD 66 06      [19] 2054 	ld	h,6 (ix)
   09F3 DD 6E 06      [19] 2055 	ld	l,6 (ix)
   09F6 E5            [11] 2056 	push	hl
   09F7 DD 66 06      [19] 2057 	ld	h,6 (ix)
   09FA DD 6E 06      [19] 2058 	ld	l,6 (ix)
   09FD E5            [11] 2059 	push	hl
   09FE CDr00r00      [17] 2060 	call	_cpct_px2byteM1
   0A01 F1            [10] 2061 	pop	af
   0A02 F1            [10] 2062 	pop	af
   0A03 DD 75 FF      [19] 2063 	ld	-1 (ix),l
   0A06 D1            [10] 2064 	pop	de
   0A07 C1            [10] 2065 	pop	bc
   0A08 D5            [11] 2066 	push	de
   0A09 21 04 00      [10] 2067 	ld	hl,#0x0004
   0A0C E5            [11] 2068 	push	hl
   0A0D DD 7E FF      [19] 2069 	ld	a,-1 (ix)
   0A10 F5            [11] 2070 	push	af
   0A11 33            [ 6] 2071 	inc	sp
   0A12 C5            [11] 2072 	push	bc
   0A13 CDr00r00      [17] 2073 	call	_cpct_memset
   0A16 D1            [10] 2074 	pop	de
                           2075 ;src/includes/world.h:28: p_video = cpct_getScreenPtr(SCR_VMEM, x*TILESIZE_W, (y+1)*TILESIZE_H-2);
   0A17 63            [ 4] 2076 	ld	h,e
   0A18 25            [ 4] 2077 	dec	h
   0A19 25            [ 4] 2078 	dec	h
   0A1A E5            [11] 2079 	push	hl
   0A1B 33            [ 6] 2080 	inc	sp
   0A1C D5            [11] 2081 	push	de
   0A1D 33            [ 6] 2082 	inc	sp
   0A1E 21 00 C0      [10] 2083 	ld	hl,#0xC000
   0A21 E5            [11] 2084 	push	hl
   0A22 CDr00r00      [17] 2085 	call	_cpct_getScreenPtr
                           2086 ;src/includes/world.h:29: cpct_memset (p_video, cpct_px2byteM1(color,color,color,color), 4);
   0A25 E5            [11] 2087 	push	hl
   0A26 DD 66 06      [19] 2088 	ld	h,6 (ix)
   0A29 DD 6E 06      [19] 2089 	ld	l,6 (ix)
   0A2C E5            [11] 2090 	push	hl
   0A2D DD 66 06      [19] 2091 	ld	h,6 (ix)
   0A30 DD 6E 06      [19] 2092 	ld	l,6 (ix)
   0A33 E5            [11] 2093 	push	hl
   0A34 CDr00r00      [17] 2094 	call	_cpct_px2byteM1
   0A37 F1            [10] 2095 	pop	af
   0A38 F1            [10] 2096 	pop	af
   0A39 65            [ 4] 2097 	ld	h,l
   0A3A D1            [10] 2098 	pop	de
   0A3B 01 04 00      [10] 2099 	ld	bc,#0x0004
   0A3E C5            [11] 2100 	push	bc
   0A3F E5            [11] 2101 	push	hl
   0A40 33            [ 6] 2102 	inc	sp
   0A41 D5            [11] 2103 	push	de
   0A42 CDr00r00      [17] 2104 	call	_cpct_memset
   0A45 33            [ 6] 2105 	inc	sp
   0A46 DD E1         [14] 2106 	pop	ix
   0A48 C9            [10] 2107 	ret
                           2108 ;src/includes/world.h:33: void generateWorld(u8 *p_world)
                           2109 ;	---------------------------------
                           2110 ; Function generateWorld
                           2111 ; ---------------------------------
   0A49                    2112 _generateWorld::
   0A49 DD E5         [15] 2113 	push	ix
   0A4B DD 21 00 00   [14] 2114 	ld	ix,#0
   0A4F DD 39         [15] 2115 	add	ix,sp
   0A51 F5            [11] 2116 	push	af
   0A52 F5            [11] 2117 	push	af
                           2118 ;src/includes/world.h:39: cpct_setRandomSeedUniform_u8(0);
   0A53 2E 00         [ 7] 2119 	ld	l,#0x00
   0A55 CDr00r00      [17] 2120 	call	_cpct_setRandomSeedUniform_u8
                           2121 ;src/includes/world.h:41: for(iy=0; iy<HEIGHT*WIDTH;iy++)
   0A58 11 00 00      [10] 2122 	ld	de,#0x0000
   0A5B                    2123 00115$:
                           2124 ;src/includes/world.h:43: p_world[iy] = cpct_getRandomUniform_u8_f(0)%2;
   0A5B DD 6E 04      [19] 2125 	ld	l,4 (ix)
   0A5E DD 66 05      [19] 2126 	ld	h,5 (ix)
   0A61 19            [11] 2127 	add	hl,de
   0A62 E5            [11] 2128 	push	hl
   0A63 D5            [11] 2129 	push	de
   0A64 2E 00         [ 7] 2130 	ld	l,#0x00
   0A66 CDr00r00      [17] 2131 	call	_cpct_getRandomUniform_u8_f
   0A69 7D            [ 4] 2132 	ld	a,l
   0A6A D1            [10] 2133 	pop	de
   0A6B E1            [10] 2134 	pop	hl
   0A6C E6 01         [ 7] 2135 	and	a, #0x01
   0A6E 77            [ 7] 2136 	ld	(hl),a
                           2137 ;src/includes/world.h:41: for(iy=0; iy<HEIGHT*WIDTH;iy++)
   0A6F 13            [ 6] 2138 	inc	de
   0A70 7A            [ 4] 2139 	ld	a,d
   0A71 EE 80         [ 7] 2140 	xor	a, #0x80
   0A73 D6 8F         [ 7] 2141 	sub	a, #0x8F
   0A75 38 E4         [12] 2142 	jr	C,00115$
                           2143 ;src/includes/world.h:47: for(ix=0; ix<NBFOREST; ix++)
   0A77 11 00 00      [10] 2144 	ld	de,#0x0000
   0A7A                    2145 00117$:
                           2146 ;src/includes/world.h:49: iy = cpct_getRandomUniform_u8_f(0)*15; // (WIDTH*HEIGHT)/255;
   0A7A D5            [11] 2147 	push	de
   0A7B 2E 00         [ 7] 2148 	ld	l,#0x00
   0A7D CDr00r00      [17] 2149 	call	_cpct_getRandomUniform_u8_f
   0A80 D1            [10] 2150 	pop	de
   0A81 4D            [ 4] 2151 	ld	c,l
   0A82 06 00         [ 7] 2152 	ld	b,#0x00
   0A84 69            [ 4] 2153 	ld	l, c
   0A85 60            [ 4] 2154 	ld	h, b
   0A86 29            [11] 2155 	add	hl, hl
   0A87 09            [11] 2156 	add	hl, bc
   0A88 29            [11] 2157 	add	hl, hl
   0A89 09            [11] 2158 	add	hl, bc
   0A8A 29            [11] 2159 	add	hl, hl
   0A8B 09            [11] 2160 	add	hl, bc
   0A8C 4D            [ 4] 2161 	ld	c,l
   0A8D 44            [ 4] 2162 	ld	b,h
                           2163 ;src/includes/world.h:50: p_world[iy] = FOREST;
   0A8E DD 6E 04      [19] 2164 	ld	l,4 (ix)
   0A91 DD 66 05      [19] 2165 	ld	h,5 (ix)
   0A94 09            [11] 2166 	add	hl,bc
   0A95 36 08         [10] 2167 	ld	(hl),#0x08
                           2168 ;src/includes/world.h:47: for(ix=0; ix<NBFOREST; ix++)
   0A97 13            [ 6] 2169 	inc	de
   0A98 7B            [ 4] 2170 	ld	a,e
   0A99 D6 64         [ 7] 2171 	sub	a, #0x64
   0A9B 7A            [ 4] 2172 	ld	a,d
   0A9C 17            [ 4] 2173 	rla
   0A9D 3F            [ 4] 2174 	ccf
   0A9E 1F            [ 4] 2175 	rra
   0A9F DE 80         [ 7] 2176 	sbc	a, #0x80
   0AA1 38 D7         [12] 2177 	jr	C,00117$
                           2178 ;src/includes/world.h:54: cpct_setRandomSeedUniform_u8(1);
   0AA3 2E 01         [ 7] 2179 	ld	l,#0x01
   0AA5 CDr00r00      [17] 2180 	call	_cpct_setRandomSeedUniform_u8
                           2181 ;src/includes/world.h:56: for(ix=0; ix<NBFARM; ix++)
   0AA8 21 00 00      [10] 2182 	ld	hl,#0x0000
   0AAB E3            [19] 2183 	ex	(sp), hl
   0AAC                    2184 00119$:
                           2185 ;src/includes/world.h:58: iy = cpct_getRandomUniform_u8_f(1)*15; // (WIDTH*HEIGHT)/255;
   0AAC 2E 01         [ 7] 2186 	ld	l,#0x01
   0AAE CDr00r00      [17] 2187 	call	_cpct_getRandomUniform_u8_f
   0AB1 4D            [ 4] 2188 	ld	c,l
   0AB2 06 00         [ 7] 2189 	ld	b,#0x00
   0AB4 69            [ 4] 2190 	ld	l, c
   0AB5 60            [ 4] 2191 	ld	h, b
   0AB6 29            [11] 2192 	add	hl, hl
   0AB7 09            [11] 2193 	add	hl, bc
   0AB8 29            [11] 2194 	add	hl, hl
   0AB9 09            [11] 2195 	add	hl, bc
   0ABA 29            [11] 2196 	add	hl, hl
   0ABB 09            [11] 2197 	add	hl, bc
                           2198 ;src/includes/world.h:60: shift = cpct_getRandomUniform_u8_f(1)%10;
   0ABC E5            [11] 2199 	push	hl
   0ABD 2E 01         [ 7] 2200 	ld	l,#0x01
   0ABF CDr00r00      [17] 2201 	call	_cpct_getRandomUniform_u8_f
   0AC2 45            [ 4] 2202 	ld	b,l
   0AC3 3E 0A         [ 7] 2203 	ld	a,#0x0A
   0AC5 F5            [11] 2204 	push	af
   0AC6 33            [ 6] 2205 	inc	sp
   0AC7 C5            [11] 2206 	push	bc
   0AC8 33            [ 6] 2207 	inc	sp
   0AC9 CDr00r00      [17] 2208 	call	__moduchar
   0ACC F1            [10] 2209 	pop	af
   0ACD D1            [10] 2210 	pop	de
   0ACE 26 00         [ 7] 2211 	ld	h,#0x00
                           2212 ;src/includes/world.h:61: shift=iy-shift+5;
   0AD0 7B            [ 4] 2213 	ld	a,e
   0AD1 95            [ 4] 2214 	sub	a, l
   0AD2 5F            [ 4] 2215 	ld	e,a
   0AD3 7A            [ 4] 2216 	ld	a,d
   0AD4 9C            [ 4] 2217 	sbc	a, h
   0AD5 57            [ 4] 2218 	ld	d,a
   0AD6 13            [ 6] 2219 	inc	de
   0AD7 13            [ 6] 2220 	inc	de
   0AD8 13            [ 6] 2221 	inc	de
   0AD9 13            [ 6] 2222 	inc	de
   0ADA 13            [ 6] 2223 	inc	de
                           2224 ;src/includes/world.h:63: if(shift>0 && shift<WIDTH*HEIGHT)
   0ADB AF            [ 4] 2225 	xor	a, a
   0ADC BB            [ 4] 2226 	cp	a, e
   0ADD 9A            [ 4] 2227 	sbc	a, d
   0ADE E2rE3r0A      [10] 2228 	jp	PO, 00192$
   0AE1 EE 80         [ 7] 2229 	xor	a, #0x80
   0AE3                    2230 00192$:
   0AE3 F2r01r0B      [10] 2231 	jp	P,00120$
   0AE6 7A            [ 4] 2232 	ld	a,d
   0AE7 EE 80         [ 7] 2233 	xor	a, #0x80
   0AE9 D6 8F         [ 7] 2234 	sub	a, #0x8F
   0AEB 30 14         [12] 2235 	jr	NC,00120$
                           2236 ;src/includes/world.h:64: p_world[shift] = (u8)cpct_getRandomUniform_u8_f(1)%2+5;
   0AED DD 6E 04      [19] 2237 	ld	l,4 (ix)
   0AF0 DD 66 05      [19] 2238 	ld	h,5 (ix)
   0AF3 19            [11] 2239 	add	hl,de
   0AF4 E5            [11] 2240 	push	hl
   0AF5 2E 01         [ 7] 2241 	ld	l,#0x01
   0AF7 CDr00r00      [17] 2242 	call	_cpct_getRandomUniform_u8_f
   0AFA 7D            [ 4] 2243 	ld	a,l
   0AFB E1            [10] 2244 	pop	hl
   0AFC E6 01         [ 7] 2245 	and	a, #0x01
   0AFE C6 05         [ 7] 2246 	add	a, #0x05
   0B00 77            [ 7] 2247 	ld	(hl),a
   0B01                    2248 00120$:
                           2249 ;src/includes/world.h:56: for(ix=0; ix<NBFARM; ix++)
   0B01 DD 34 FC      [23] 2250 	inc	-4 (ix)
   0B04 20 03         [12] 2251 	jr	NZ,00193$
   0B06 DD 34 FD      [23] 2252 	inc	-3 (ix)
   0B09                    2253 00193$:
   0B09 DD 7E FC      [19] 2254 	ld	a,-4 (ix)
   0B0C D6 3C         [ 7] 2255 	sub	a, #0x3C
   0B0E DD 7E FD      [19] 2256 	ld	a,-3 (ix)
   0B11 17            [ 4] 2257 	rla
   0B12 3F            [ 4] 2258 	ccf
   0B13 1F            [ 4] 2259 	rra
   0B14 DE 80         [ 7] 2260 	sbc	a, #0x80
   0B16 38 94         [12] 2261 	jr	C,00119$
                           2262 ;src/includes/world.h:69: cpct_setRandomSeedUniform_u8(2);
   0B18 2E 02         [ 7] 2263 	ld	l,#0x02
   0B1A CDr00r00      [17] 2264 	call	_cpct_setRandomSeedUniform_u8
                           2265 ;src/includes/world.h:71: for(ix=0; ix<NBURBAN; ix++)
   0B1D 21 00 00      [10] 2266 	ld	hl,#0x0000
   0B20 E3            [19] 2267 	ex	(sp), hl
   0B21                    2268 00121$:
                           2269 ;src/includes/world.h:73: iy = cpct_getRandomUniform_u8_f(2)*15; // (WIDTH*HEIGHT)/255;
   0B21 2E 02         [ 7] 2270 	ld	l,#0x02
   0B23 CDr00r00      [17] 2271 	call	_cpct_getRandomUniform_u8_f
   0B26 4D            [ 4] 2272 	ld	c,l
   0B27 06 00         [ 7] 2273 	ld	b,#0x00
   0B29 69            [ 4] 2274 	ld	l, c
   0B2A 60            [ 4] 2275 	ld	h, b
   0B2B 29            [11] 2276 	add	hl, hl
   0B2C 09            [11] 2277 	add	hl, bc
   0B2D 29            [11] 2278 	add	hl, hl
   0B2E 09            [11] 2279 	add	hl, bc
   0B2F 29            [11] 2280 	add	hl, hl
   0B30 09            [11] 2281 	add	hl, bc
                           2282 ;src/includes/world.h:75: shift = cpct_getRandomUniform_u8_f(2)%10;
   0B31 E5            [11] 2283 	push	hl
   0B32 2E 02         [ 7] 2284 	ld	l,#0x02
   0B34 CDr00r00      [17] 2285 	call	_cpct_getRandomUniform_u8_f
   0B37 45            [ 4] 2286 	ld	b,l
   0B38 3E 0A         [ 7] 2287 	ld	a,#0x0A
   0B3A F5            [11] 2288 	push	af
   0B3B 33            [ 6] 2289 	inc	sp
   0B3C C5            [11] 2290 	push	bc
   0B3D 33            [ 6] 2291 	inc	sp
   0B3E CDr00r00      [17] 2292 	call	__moduchar
   0B41 F1            [10] 2293 	pop	af
   0B42 D1            [10] 2294 	pop	de
   0B43 26 00         [ 7] 2295 	ld	h,#0x00
                           2296 ;src/includes/world.h:76: shift=iy-shift+5;
   0B45 7B            [ 4] 2297 	ld	a,e
   0B46 95            [ 4] 2298 	sub	a, l
   0B47 4F            [ 4] 2299 	ld	c,a
   0B48 7A            [ 4] 2300 	ld	a,d
   0B49 9C            [ 4] 2301 	sbc	a, h
   0B4A 47            [ 4] 2302 	ld	b,a
   0B4B 03            [ 6] 2303 	inc	bc
   0B4C 03            [ 6] 2304 	inc	bc
   0B4D 03            [ 6] 2305 	inc	bc
   0B4E 03            [ 6] 2306 	inc	bc
   0B4F 03            [ 6] 2307 	inc	bc
                           2308 ;src/includes/world.h:78: if(shift>0 && shift<WIDTH*HEIGHT)
   0B50 AF            [ 4] 2309 	xor	a, a
   0B51 B9            [ 4] 2310 	cp	a, c
   0B52 98            [ 4] 2311 	sbc	a, b
   0B53 E2r58r0B      [10] 2312 	jp	PO, 00194$
   0B56 EE 80         [ 7] 2313 	xor	a, #0x80
   0B58                    2314 00194$:
   0B58 F2r82r0B      [10] 2315 	jp	P,00122$
   0B5B 78            [ 4] 2316 	ld	a,b
   0B5C EE 80         [ 7] 2317 	xor	a, #0x80
   0B5E D6 8F         [ 7] 2318 	sub	a, #0x8F
   0B60 30 20         [12] 2319 	jr	NC,00122$
                           2320 ;src/includes/world.h:79: p_world[shift] = (u8)cpct_getRandomUniform_u8_f(2)%3+2;
   0B62 DD 7E 04      [19] 2321 	ld	a,4 (ix)
   0B65 81            [ 4] 2322 	add	a, c
   0B66 5F            [ 4] 2323 	ld	e,a
   0B67 DD 7E 05      [19] 2324 	ld	a,5 (ix)
   0B6A 88            [ 4] 2325 	adc	a, b
   0B6B 57            [ 4] 2326 	ld	d,a
   0B6C D5            [11] 2327 	push	de
   0B6D 2E 02         [ 7] 2328 	ld	l,#0x02
   0B6F CDr00r00      [17] 2329 	call	_cpct_getRandomUniform_u8_f
   0B72 45            [ 4] 2330 	ld	b,l
   0B73 3E 03         [ 7] 2331 	ld	a,#0x03
   0B75 F5            [11] 2332 	push	af
   0B76 33            [ 6] 2333 	inc	sp
   0B77 C5            [11] 2334 	push	bc
   0B78 33            [ 6] 2335 	inc	sp
   0B79 CDr00r00      [17] 2336 	call	__moduchar
   0B7C F1            [10] 2337 	pop	af
   0B7D 7D            [ 4] 2338 	ld	a,l
   0B7E D1            [10] 2339 	pop	de
   0B7F C6 02         [ 7] 2340 	add	a, #0x02
   0B81 12            [ 7] 2341 	ld	(de),a
   0B82                    2342 00122$:
                           2343 ;src/includes/world.h:71: for(ix=0; ix<NBURBAN; ix++)
   0B82 DD 34 FC      [23] 2344 	inc	-4 (ix)
   0B85 20 03         [12] 2345 	jr	NZ,00195$
   0B87 DD 34 FD      [23] 2346 	inc	-3 (ix)
   0B8A                    2347 00195$:
   0B8A DD 7E FC      [19] 2348 	ld	a,-4 (ix)
   0B8D D6 1E         [ 7] 2349 	sub	a, #0x1E
   0B8F DD 7E FD      [19] 2350 	ld	a,-3 (ix)
   0B92 17            [ 4] 2351 	rla
   0B93 3F            [ 4] 2352 	ccf
   0B94 1F            [ 4] 2353 	rra
   0B95 DE 80         [ 7] 2354 	sbc	a, #0x80
   0B97 38 88         [12] 2355 	jr	C,00121$
                           2356 ;src/includes/world.h:84: cpct_setRandomSeedUniform_u8(3);
   0B99 2E 03         [ 7] 2357 	ld	l,#0x03
   0B9B CDr00r00      [17] 2358 	call	_cpct_setRandomSeedUniform_u8
                           2359 ;src/includes/world.h:86: for(ix=0; ix<NBLIVESTOCK; ix++)
   0B9E 11 00 00      [10] 2360 	ld	de,#0x0000
   0BA1                    2361 00123$:
                           2362 ;src/includes/world.h:88: iy = cpct_getRandomUniform_u8_f(3)*15; // (WIDTH*HEIGHT)/255;
   0BA1 D5            [11] 2363 	push	de
   0BA2 2E 03         [ 7] 2364 	ld	l,#0x03
   0BA4 CDr00r00      [17] 2365 	call	_cpct_getRandomUniform_u8_f
   0BA7 D1            [10] 2366 	pop	de
   0BA8 4D            [ 4] 2367 	ld	c,l
   0BA9 06 00         [ 7] 2368 	ld	b,#0x00
   0BAB 69            [ 4] 2369 	ld	l, c
   0BAC 60            [ 4] 2370 	ld	h, b
   0BAD 29            [11] 2371 	add	hl, hl
   0BAE 09            [11] 2372 	add	hl, bc
   0BAF 29            [11] 2373 	add	hl, hl
   0BB0 09            [11] 2374 	add	hl, bc
   0BB1 29            [11] 2375 	add	hl, hl
   0BB2 09            [11] 2376 	add	hl, bc
   0BB3 DD 75 FE      [19] 2377 	ld	-2 (ix),l
   0BB6 DD 74 FF      [19] 2378 	ld	-1 (ix),h
                           2379 ;src/includes/world.h:90: shift = cpct_getRandomUniform_u8_f(3)%10;
   0BB9 D5            [11] 2380 	push	de
   0BBA 2E 03         [ 7] 2381 	ld	l,#0x03
   0BBC CDr00r00      [17] 2382 	call	_cpct_getRandomUniform_u8_f
   0BBF 45            [ 4] 2383 	ld	b,l
   0BC0 3E 0A         [ 7] 2384 	ld	a,#0x0A
   0BC2 F5            [11] 2385 	push	af
   0BC3 33            [ 6] 2386 	inc	sp
   0BC4 C5            [11] 2387 	push	bc
   0BC5 33            [ 6] 2388 	inc	sp
   0BC6 CDr00r00      [17] 2389 	call	__moduchar
   0BC9 F1            [10] 2390 	pop	af
   0BCA D1            [10] 2391 	pop	de
   0BCB 26 00         [ 7] 2392 	ld	h,#0x00
                           2393 ;src/includes/world.h:91: shift=iy-shift+5;
   0BCD DD 7E FE      [19] 2394 	ld	a,-2 (ix)
   0BD0 95            [ 4] 2395 	sub	a, l
   0BD1 4F            [ 4] 2396 	ld	c,a
   0BD2 DD 7E FF      [19] 2397 	ld	a,-1 (ix)
   0BD5 9C            [ 4] 2398 	sbc	a, h
   0BD6 47            [ 4] 2399 	ld	b,a
   0BD7 03            [ 6] 2400 	inc	bc
   0BD8 03            [ 6] 2401 	inc	bc
   0BD9 03            [ 6] 2402 	inc	bc
   0BDA 03            [ 6] 2403 	inc	bc
   0BDB 03            [ 6] 2404 	inc	bc
                           2405 ;src/includes/world.h:93: if(shift>0 && shift<WIDTH*HEIGHT)
   0BDC AF            [ 4] 2406 	xor	a, a
   0BDD B9            [ 4] 2407 	cp	a, c
   0BDE 98            [ 4] 2408 	sbc	a, b
   0BDF E2rE4r0B      [10] 2409 	jp	PO, 00196$
   0BE2 EE 80         [ 7] 2410 	xor	a, #0x80
   0BE4                    2411 00196$:
   0BE4 F2rF7r0B      [10] 2412 	jp	P,00124$
   0BE7 78            [ 4] 2413 	ld	a,b
   0BE8 EE 80         [ 7] 2414 	xor	a, #0x80
   0BEA D6 8F         [ 7] 2415 	sub	a, #0x8F
   0BEC 30 09         [12] 2416 	jr	NC,00124$
                           2417 ;src/includes/world.h:94: p_world[shift] = LIVESTOCK;
   0BEE DD 6E 04      [19] 2418 	ld	l,4 (ix)
   0BF1 DD 66 05      [19] 2419 	ld	h,5 (ix)
   0BF4 09            [11] 2420 	add	hl,bc
   0BF5 36 09         [10] 2421 	ld	(hl),#0x09
   0BF7                    2422 00124$:
                           2423 ;src/includes/world.h:86: for(ix=0; ix<NBLIVESTOCK; ix++)
   0BF7 13            [ 6] 2424 	inc	de
   0BF8 7B            [ 4] 2425 	ld	a,e
   0BF9 D6 14         [ 7] 2426 	sub	a, #0x14
   0BFB 7A            [ 4] 2427 	ld	a,d
   0BFC 17            [ 4] 2428 	rla
   0BFD 3F            [ 4] 2429 	ccf
   0BFE 1F            [ 4] 2430 	rra
   0BFF DE 80         [ 7] 2431 	sbc	a, #0x80
   0C01 38 9E         [12] 2432 	jr	C,00123$
   0C03 DD F9         [10] 2433 	ld	sp, ix
   0C05 DD E1         [14] 2434 	pop	ix
   0C07 C9            [10] 2435 	ret
                           2436 ;src/includes/world.h:98: void drawTile(u8 *p_world, u8 x_, u8 y_, u8 ix, u8 iy)
                           2437 ;	---------------------------------
                           2438 ; Function drawTile
                           2439 ; ---------------------------------
   0C08                    2440 _drawTile::
   0C08 DD E5         [15] 2441 	push	ix
   0C0A DD 21 00 00   [14] 2442 	ld	ix,#0
   0C0E DD 39         [15] 2443 	add	ix,sp
                           2444 ;src/includes/world.h:101: int adress = (y_+iy)*WIDTH+x_+ix;
   0C10 DD 6E 07      [19] 2445 	ld	l,7 (ix)
   0C13 26 00         [ 7] 2446 	ld	h,#0x00
   0C15 DD 5E 09      [19] 2447 	ld	e,9 (ix)
   0C18 16 00         [ 7] 2448 	ld	d,#0x00
   0C1A 19            [11] 2449 	add	hl,de
   0C1B 4D            [ 4] 2450 	ld	c, l
   0C1C 44            [ 4] 2451 	ld	b, h
   0C1D 29            [11] 2452 	add	hl, hl
   0C1E 29            [11] 2453 	add	hl, hl
   0C1F 09            [11] 2454 	add	hl, bc
   0C20 29            [11] 2455 	add	hl, hl
   0C21 29            [11] 2456 	add	hl, hl
   0C22 29            [11] 2457 	add	hl, hl
   0C23 29            [11] 2458 	add	hl, hl
   0C24 DD 5E 06      [19] 2459 	ld	e,6 (ix)
   0C27 16 00         [ 7] 2460 	ld	d,#0x00
   0C29 19            [11] 2461 	add	hl,de
   0C2A DD 5E 08      [19] 2462 	ld	e,8 (ix)
   0C2D 16 00         [ 7] 2463 	ld	d,#0x00
   0C2F 19            [11] 2464 	add	hl,de
   0C30 5D            [ 4] 2465 	ld	e, l
   0C31 54            [ 4] 2466 	ld	d, h
                           2467 ;src/includes/world.h:103: p_video = cpct_getScreenPtr(SCR_VMEM, ix*TILESIZE_W, iy*TILESIZE_H);
   0C32 DD 7E 09      [19] 2468 	ld	a,9 (ix)
   0C35 07            [ 4] 2469 	rlca
   0C36 07            [ 4] 2470 	rlca
   0C37 07            [ 4] 2471 	rlca
   0C38 07            [ 4] 2472 	rlca
   0C39 E6 F0         [ 7] 2473 	and	a,#0xF0
   0C3B 67            [ 4] 2474 	ld	h,a
   0C3C DD 7E 08      [19] 2475 	ld	a,8 (ix)
   0C3F 87            [ 4] 2476 	add	a, a
   0C40 87            [ 4] 2477 	add	a, a
   0C41 D5            [11] 2478 	push	de
   0C42 E5            [11] 2479 	push	hl
   0C43 33            [ 6] 2480 	inc	sp
   0C44 F5            [11] 2481 	push	af
   0C45 33            [ 6] 2482 	inc	sp
   0C46 21 00 C0      [10] 2483 	ld	hl,#0xC000
   0C49 E5            [11] 2484 	push	hl
   0C4A CDr00r00      [17] 2485 	call	_cpct_getScreenPtr
   0C4D D1            [10] 2486 	pop	de
   0C4E 4D            [ 4] 2487 	ld	c, l
   0C4F 44            [ 4] 2488 	ld	b, h
                           2489 ;src/includes/world.h:105: switch(p_world[adress])
   0C50 DD 6E 04      [19] 2490 	ld	l,4 (ix)
   0C53 DD 66 05      [19] 2491 	ld	h,5 (ix)
   0C56 19            [11] 2492 	add	hl,de
   0C57 5E            [ 7] 2493 	ld	e,(hl)
   0C58 3E 09         [ 7] 2494 	ld	a,#0x09
   0C5A 93            [ 4] 2495 	sub	a, e
   0C5B DAr10r0D      [10] 2496 	jp	C,00112$
   0C5E 16 00         [ 7] 2497 	ld	d,#0x00
   0C60 21r67r0C      [10] 2498 	ld	hl,#00118$
   0C63 19            [11] 2499 	add	hl,de
   0C64 19            [11] 2500 	add	hl,de
   0C65 19            [11] 2501 	add	hl,de
   0C66 E9            [ 4] 2502 	jp	(hl)
   0C67                    2503 00118$:
   0C67 C3r85r0C      [10] 2504 	jp	00101$
   0C6A C3r94r0C      [10] 2505 	jp	00102$
   0C6D C3rA2r0C      [10] 2506 	jp	00103$
   0C70 C3rB0r0C      [10] 2507 	jp	00104$
   0C73 C3rBEr0C      [10] 2508 	jp	00105$
   0C76 C3rCCr0C      [10] 2509 	jp	00106$
   0C79 C3rDAr0C      [10] 2510 	jp	00107$
   0C7C C3rE8r0C      [10] 2511 	jp	00108$
   0C7F C3rF6r0C      [10] 2512 	jp	00109$
   0C82 C3r04r0D      [10] 2513 	jp	00110$
                           2514 ;src/includes/world.h:107: case GRASS1:
   0C85                    2515 00101$:
                           2516 ;src/includes/world.h:108: cpct_drawSprite(grass1, p_video, TILESIZE_W, TILESIZE_H);
   0C85 11r29r00      [10] 2517 	ld	de,#_grass1
   0C88 21 04 10      [10] 2518 	ld	hl,#0x1004
   0C8B E5            [11] 2519 	push	hl
   0C8C C5            [11] 2520 	push	bc
   0C8D D5            [11] 2521 	push	de
   0C8E CDr00r00      [17] 2522 	call	_cpct_drawSprite
                           2523 ;src/includes/world.h:109: break;
   0C91 C3r10r0D      [10] 2524 	jp	00112$
                           2525 ;src/includes/world.h:110: case GRASS2:
   0C94                    2526 00102$:
                           2527 ;src/includes/world.h:111: cpct_drawSprite(grass2, p_video, TILESIZE_W, TILESIZE_H);
   0C94 11r69r00      [10] 2528 	ld	de,#_grass2
   0C97 21 04 10      [10] 2529 	ld	hl,#0x1004
   0C9A E5            [11] 2530 	push	hl
   0C9B C5            [11] 2531 	push	bc
   0C9C D5            [11] 2532 	push	de
   0C9D CDr00r00      [17] 2533 	call	_cpct_drawSprite
                           2534 ;src/includes/world.h:112: break;
   0CA0 18 6E         [12] 2535 	jr	00112$
                           2536 ;src/includes/world.h:113: case DWELLINGS1:
   0CA2                    2537 00103$:
                           2538 ;src/includes/world.h:114: cpct_drawSprite(dwellings1, p_video, TILESIZE_W, TILESIZE_H);
   0CA2 11rE9r00      [10] 2539 	ld	de,#_dwellings1
   0CA5 21 04 10      [10] 2540 	ld	hl,#0x1004
   0CA8 E5            [11] 2541 	push	hl
   0CA9 C5            [11] 2542 	push	bc
   0CAA D5            [11] 2543 	push	de
   0CAB CDr00r00      [17] 2544 	call	_cpct_drawSprite
                           2545 ;src/includes/world.h:115: break;
   0CAE 18 60         [12] 2546 	jr	00112$
                           2547 ;src/includes/world.h:116: case DWELLINGS2:
   0CB0                    2548 00104$:
                           2549 ;src/includes/world.h:117: cpct_drawSprite(dwellings2, p_video, TILESIZE_W, TILESIZE_H);
   0CB0 11r29r01      [10] 2550 	ld	de,#_dwellings2
   0CB3 21 04 10      [10] 2551 	ld	hl,#0x1004
   0CB6 E5            [11] 2552 	push	hl
   0CB7 C5            [11] 2553 	push	bc
   0CB8 D5            [11] 2554 	push	de
   0CB9 CDr00r00      [17] 2555 	call	_cpct_drawSprite
                           2556 ;src/includes/world.h:118: break;
   0CBC 18 52         [12] 2557 	jr	00112$
                           2558 ;src/includes/world.h:119: case DWELLINGS3:
   0CBE                    2559 00105$:
                           2560 ;src/includes/world.h:120: cpct_drawSprite(dwellings3, p_video, TILESIZE_W, TILESIZE_H);
   0CBE 11r69r01      [10] 2561 	ld	de,#_dwellings3
   0CC1 21 04 10      [10] 2562 	ld	hl,#0x1004
   0CC4 E5            [11] 2563 	push	hl
   0CC5 C5            [11] 2564 	push	bc
   0CC6 D5            [11] 2565 	push	de
   0CC7 CDr00r00      [17] 2566 	call	_cpct_drawSprite
                           2567 ;src/includes/world.h:121: break;
   0CCA 18 44         [12] 2568 	jr	00112$
                           2569 ;src/includes/world.h:122: case FARM1:
   0CCC                    2570 00106$:
                           2571 ;src/includes/world.h:123: cpct_drawSprite(farm1, p_video, TILESIZE_W, TILESIZE_H);
   0CCC 11rE9r01      [10] 2572 	ld	de,#_farm1
   0CCF 21 04 10      [10] 2573 	ld	hl,#0x1004
   0CD2 E5            [11] 2574 	push	hl
   0CD3 C5            [11] 2575 	push	bc
   0CD4 D5            [11] 2576 	push	de
   0CD5 CDr00r00      [17] 2577 	call	_cpct_drawSprite
                           2578 ;src/includes/world.h:124: break;
   0CD8 18 36         [12] 2579 	jr	00112$
                           2580 ;src/includes/world.h:125: case FARM2:
   0CDA                    2581 00107$:
                           2582 ;src/includes/world.h:126: cpct_drawSprite(farm2, p_video, TILESIZE_W, TILESIZE_H);
   0CDA 11r29r02      [10] 2583 	ld	de,#_farm2
   0CDD 21 04 10      [10] 2584 	ld	hl,#0x1004
   0CE0 E5            [11] 2585 	push	hl
   0CE1 C5            [11] 2586 	push	bc
   0CE2 D5            [11] 2587 	push	de
   0CE3 CDr00r00      [17] 2588 	call	_cpct_drawSprite
                           2589 ;src/includes/world.h:127: break;
   0CE6 18 28         [12] 2590 	jr	00112$
                           2591 ;src/includes/world.h:128: case WATER:
   0CE8                    2592 00108$:
                           2593 ;src/includes/world.h:129: cpct_drawSprite(water, p_video, TILESIZE_W, TILESIZE_H);
   0CE8 11rA9r01      [10] 2594 	ld	de,#_water
   0CEB 21 04 10      [10] 2595 	ld	hl,#0x1004
   0CEE E5            [11] 2596 	push	hl
   0CEF C5            [11] 2597 	push	bc
   0CF0 D5            [11] 2598 	push	de
   0CF1 CDr00r00      [17] 2599 	call	_cpct_drawSprite
                           2600 ;src/includes/world.h:130: break;
   0CF4 18 1A         [12] 2601 	jr	00112$
                           2602 ;src/includes/world.h:131: case FOREST:
   0CF6                    2603 00109$:
                           2604 ;src/includes/world.h:132: cpct_drawSprite(forest, p_video, TILESIZE_W, TILESIZE_H);
   0CF6 11rA9r00      [10] 2605 	ld	de,#_forest
   0CF9 21 04 10      [10] 2606 	ld	hl,#0x1004
   0CFC E5            [11] 2607 	push	hl
   0CFD C5            [11] 2608 	push	bc
   0CFE D5            [11] 2609 	push	de
   0CFF CDr00r00      [17] 2610 	call	_cpct_drawSprite
                           2611 ;src/includes/world.h:133: break;
   0D02 18 0C         [12] 2612 	jr	00112$
                           2613 ;src/includes/world.h:134: case LIVESTOCK:
   0D04                    2614 00110$:
                           2615 ;src/includes/world.h:135: cpct_drawSprite(livestock, p_video, TILESIZE_W, TILESIZE_H);
   0D04 11r69r02      [10] 2616 	ld	de,#_livestock
   0D07 21 04 10      [10] 2617 	ld	hl,#0x1004
   0D0A E5            [11] 2618 	push	hl
   0D0B C5            [11] 2619 	push	bc
   0D0C D5            [11] 2620 	push	de
   0D0D CDr00r00      [17] 2621 	call	_cpct_drawSprite
                           2622 ;src/includes/world.h:137: }
   0D10                    2623 00112$:
   0D10 DD E1         [14] 2624 	pop	ix
   0D12 C9            [10] 2625 	ret
                           2626 ;src/includes/world.h:140: void drawWorld(u8 *p_world, u8 x_, u8 y_)
                           2627 ;	---------------------------------
                           2628 ; Function drawWorld
                           2629 ; ---------------------------------
   0D13                    2630 _drawWorld::
   0D13 DD E5         [15] 2631 	push	ix
   0D15 DD 21 00 00   [14] 2632 	ld	ix,#0
   0D19 DD 39         [15] 2633 	add	ix,sp
   0D1B 3B            [ 6] 2634 	dec	sp
                           2635 ;src/includes/world.h:148: for(iy=0; iy<NBTILE_H;iy++)
   0D1C 16 00         [ 7] 2636 	ld	d,#0x00
                           2637 ;src/includes/world.h:150: for(ix=0; ix<NBTILE_W;ix++)
   0D1E                    2638 00109$:
   0D1E 1E 00         [ 7] 2639 	ld	e,#0x00
   0D20                    2640 00103$:
                           2641 ;src/includes/world.h:152: drawTile(p_world, x_, y_, ix, iy);
   0D20 D5            [11] 2642 	push	de
   0D21 D5            [11] 2643 	push	de
   0D22 DD 66 07      [19] 2644 	ld	h,7 (ix)
   0D25 DD 6E 06      [19] 2645 	ld	l,6 (ix)
   0D28 E5            [11] 2646 	push	hl
   0D29 DD 6E 04      [19] 2647 	ld	l,4 (ix)
   0D2C DD 66 05      [19] 2648 	ld	h,5 (ix)
   0D2F E5            [11] 2649 	push	hl
   0D30 CDr08r0C      [17] 2650 	call	_drawTile
   0D33 21 06 00      [10] 2651 	ld	hl,#6
   0D36 39            [11] 2652 	add	hl,sp
   0D37 F9            [ 6] 2653 	ld	sp,hl
   0D38 D1            [10] 2654 	pop	de
                           2655 ;src/includes/world.h:150: for(ix=0; ix<NBTILE_W;ix++)
   0D39 1C            [ 4] 2656 	inc	e
   0D3A 7B            [ 4] 2657 	ld	a,e
   0D3B D6 14         [ 7] 2658 	sub	a, #0x14
   0D3D 38 E1         [12] 2659 	jr	C,00103$
                           2660 ;src/includes/world.h:148: for(iy=0; iy<NBTILE_H;iy++)
   0D3F 14            [ 4] 2661 	inc	d
   0D40 7A            [ 4] 2662 	ld	a,d
   0D41 D6 0C         [ 7] 2663 	sub	a, #0x0C
   0D43 38 D9         [12] 2664 	jr	C,00109$
                           2665 ;src/includes/world.h:158: scrollx = x_* (WIDTH-TILESIZE_W)/(WIDTH-NBTILE_W);
   0D45 DD 4E 06      [19] 2666 	ld	c,6 (ix)
   0D48 06 00         [ 7] 2667 	ld	b,#0x00
   0D4A 69            [ 4] 2668 	ld	l, c
   0D4B 60            [ 4] 2669 	ld	h, b
   0D4C 29            [11] 2670 	add	hl, hl
   0D4D 29            [11] 2671 	add	hl, hl
   0D4E 29            [11] 2672 	add	hl, hl
   0D4F 09            [11] 2673 	add	hl, bc
   0D50 29            [11] 2674 	add	hl, hl
   0D51 09            [11] 2675 	add	hl, bc
   0D52 29            [11] 2676 	add	hl, hl
   0D53 29            [11] 2677 	add	hl, hl
   0D54 01 3C 00      [10] 2678 	ld	bc,#0x003C
   0D57 C5            [11] 2679 	push	bc
   0D58 E5            [11] 2680 	push	hl
   0D59 CDr00r00      [17] 2681 	call	__divsint
   0D5C F1            [10] 2682 	pop	af
   0D5D F1            [10] 2683 	pop	af
   0D5E 55            [ 4] 2684 	ld	d,l
                           2685 ;src/includes/world.h:159: scrolly = y_* (HEIGHT*TILESIZE_W-TILESIZE_H)/(HEIGHT-NBTILE_H);
   0D5F DD 4E 07      [19] 2686 	ld	c,7 (ix)
   0D62 06 00         [ 7] 2687 	ld	b,#0x00
   0D64 69            [ 4] 2688 	ld	l, c
   0D65 60            [ 4] 2689 	ld	h, b
   0D66 29            [11] 2690 	add	hl, hl
   0D67 29            [11] 2691 	add	hl, hl
   0D68 09            [11] 2692 	add	hl, bc
   0D69 29            [11] 2693 	add	hl, hl
   0D6A 09            [11] 2694 	add	hl, bc
   0D6B 29            [11] 2695 	add	hl, hl
   0D6C 29            [11] 2696 	add	hl, hl
   0D6D 29            [11] 2697 	add	hl, hl
   0D6E 29            [11] 2698 	add	hl, hl
   0D6F D5            [11] 2699 	push	de
   0D70 01 24 00      [10] 2700 	ld	bc,#0x0024
   0D73 C5            [11] 2701 	push	bc
   0D74 E5            [11] 2702 	push	hl
   0D75 CDr00r00      [17] 2703 	call	__divsint
   0D78 F1            [10] 2704 	pop	af
   0D79 F1            [10] 2705 	pop	af
   0D7A D1            [10] 2706 	pop	de
   0D7B DD 75 FF      [19] 2707 	ld	-1 (ix),l
                           2708 ;src/includes/world.h:161: p_video = cpct_getScreenPtr(SCR_VMEM, scrollx, 0);
   0D7E AF            [ 4] 2709 	xor	a, a
   0D7F F5            [11] 2710 	push	af
   0D80 33            [ 6] 2711 	inc	sp
   0D81 D5            [11] 2712 	push	de
   0D82 33            [ 6] 2713 	inc	sp
   0D83 21 00 C0      [10] 2714 	ld	hl,#0xC000
   0D86 E5            [11] 2715 	push	hl
   0D87 CDr00r00      [17] 2716 	call	_cpct_getScreenPtr
                           2717 ;src/includes/world.h:162: cpct_drawSolidBox(p_video, cpct_px2byteM1(0,0,0,0), 4, TILESIZE_W);
   0D8A E5            [11] 2718 	push	hl
   0D8B 21 00 00      [10] 2719 	ld	hl,#0x0000
   0D8E E5            [11] 2720 	push	hl
   0D8F 2E 00         [ 7] 2721 	ld	l, #0x00
   0D91 E5            [11] 2722 	push	hl
   0D92 CDr00r00      [17] 2723 	call	_cpct_px2byteM1
   0D95 F1            [10] 2724 	pop	af
   0D96 F1            [10] 2725 	pop	af
   0D97 45            [ 4] 2726 	ld	b,l
   0D98 D1            [10] 2727 	pop	de
   0D99 21 04 04      [10] 2728 	ld	hl,#0x0404
   0D9C E5            [11] 2729 	push	hl
   0D9D C5            [11] 2730 	push	bc
   0D9E 33            [ 6] 2731 	inc	sp
   0D9F D5            [11] 2732 	push	de
   0DA0 CDr00r00      [17] 2733 	call	_cpct_drawSolidBox
   0DA3 F1            [10] 2734 	pop	af
   0DA4 F1            [10] 2735 	pop	af
   0DA5 33            [ 6] 2736 	inc	sp
                           2737 ;src/includes/world.h:164: p_video = cpct_getScreenPtr(SCR_VMEM, 0, scrolly);
   0DA6 DD 7E FF      [19] 2738 	ld	a,-1 (ix)
   0DA9 F5            [11] 2739 	push	af
   0DAA 33            [ 6] 2740 	inc	sp
   0DAB AF            [ 4] 2741 	xor	a, a
   0DAC F5            [11] 2742 	push	af
   0DAD 33            [ 6] 2743 	inc	sp
   0DAE 21 00 C0      [10] 2744 	ld	hl,#0xC000
   0DB1 E5            [11] 2745 	push	hl
   0DB2 CDr00r00      [17] 2746 	call	_cpct_getScreenPtr
                           2747 ;src/includes/world.h:165: cpct_drawSolidBox(p_video, cpct_px2byteM1(0,0,0,0), 1, TILESIZE_H);
   0DB5 E5            [11] 2748 	push	hl
   0DB6 21 00 00      [10] 2749 	ld	hl,#0x0000
   0DB9 E5            [11] 2750 	push	hl
   0DBA 2E 00         [ 7] 2751 	ld	l, #0x00
   0DBC E5            [11] 2752 	push	hl
   0DBD CDr00r00      [17] 2753 	call	_cpct_px2byteM1
   0DC0 F1            [10] 2754 	pop	af
   0DC1 F1            [10] 2755 	pop	af
   0DC2 45            [ 4] 2756 	ld	b,l
   0DC3 D1            [10] 2757 	pop	de
   0DC4 21 01 10      [10] 2758 	ld	hl,#0x1001
   0DC7 E5            [11] 2759 	push	hl
   0DC8 C5            [11] 2760 	push	bc
   0DC9 33            [ 6] 2761 	inc	sp
   0DCA D5            [11] 2762 	push	de
   0DCB CDr00r00      [17] 2763 	call	_cpct_drawSolidBox
   0DCE F1            [10] 2764 	pop	af
   0DCF F1            [10] 2765 	pop	af
   0DD0 33            [ 6] 2766 	inc	sp
   0DD1 33            [ 6] 2767 	inc	sp
   0DD2 DD E1         [14] 2768 	pop	ix
   0DD4 C9            [10] 2769 	ret
                           2770 ;src/includes/game.h:1: void menuTile(u8* p_world, u8 x, u8 y)
                           2771 ;	---------------------------------
                           2772 ; Function menuTile
                           2773 ; ---------------------------------
   0DD5                    2774 _menuTile::
   0DD5 DD E5         [15] 2775 	push	ix
   0DD7 DD 21 00 00   [14] 2776 	ld	ix,#0
   0DDB DD 39         [15] 2777 	add	ix,sp
   0DDD 21 F6 FF      [10] 2778 	ld	hl,#-10
   0DE0 39            [11] 2779 	add	hl,sp
   0DE1 F9            [ 6] 2780 	ld	sp,hl
                           2781 ;src/includes/game.h:5: const char *txtMenuTile[] = { 
   0DE2 21 00 00      [10] 2782 	ld	hl,#0x0000
   0DE5 39            [11] 2783 	add	hl,sp
   0DE6 5D            [ 4] 2784 	ld	e,l
   0DE7 54            [ 4] 2785 	ld	d,h
   0DE8 36r35         [10] 2786 	ld	(hl),#<(___str_2)
   0DEA 23            [ 6] 2787 	inc	hl
   0DEB 36s0E         [10] 2788 	ld	(hl),#>(___str_2)
   0DED 6B            [ 4] 2789 	ld	l, e
   0DEE 62            [ 4] 2790 	ld	h, d
   0DEF 23            [ 6] 2791 	inc	hl
   0DF0 23            [ 6] 2792 	inc	hl
   0DF1 01r45r0E      [10] 2793 	ld	bc,#___str_3+0
   0DF4 71            [ 7] 2794 	ld	(hl),c
   0DF5 23            [ 6] 2795 	inc	hl
   0DF6 70            [ 7] 2796 	ld	(hl),b
   0DF7 21 04 00      [10] 2797 	ld	hl,#0x0004
   0DFA 19            [11] 2798 	add	hl,de
   0DFB 01r55r0E      [10] 2799 	ld	bc,#___str_4+0
   0DFE 71            [ 7] 2800 	ld	(hl),c
   0DFF 23            [ 6] 2801 	inc	hl
   0E00 70            [ 7] 2802 	ld	(hl),b
   0E01 21 06 00      [10] 2803 	ld	hl,#0x0006
   0E04 19            [11] 2804 	add	hl,de
   0E05 01r64r0E      [10] 2805 	ld	bc,#___str_5+0
   0E08 71            [ 7] 2806 	ld	(hl),c
   0E09 23            [ 6] 2807 	inc	hl
   0E0A 70            [ 7] 2808 	ld	(hl),b
   0E0B 21 08 00      [10] 2809 	ld	hl,#0x0008
   0E0E 19            [11] 2810 	add	hl,de
   0E0F 01r6Fr0E      [10] 2811 	ld	bc,#___str_6+0
   0E12 71            [ 7] 2812 	ld	(hl),c
   0E13 23            [ 6] 2813 	inc	hl
   0E14 70            [ 7] 2814 	ld	(hl),b
                           2815 ;src/includes/game.h:13: putM2();
   0E15 D5            [11] 2816 	push	de
   0E16 CDrBDr02      [17] 2817 	call	_putM2
   0E19 D1            [10] 2818 	pop	de
                           2819 ;src/includes/game.h:16: do{
   0E1A                    2820 00101$:
                           2821 ;src/includes/game.h:17: menuChoice = drawMenu(txtMenuTile,5);
   0E1A 4B            [ 4] 2822 	ld	c, e
   0E1B 42            [ 4] 2823 	ld	b, d
   0E1C D5            [11] 2824 	push	de
   0E1D 3E 05         [ 7] 2825 	ld	a,#0x05
   0E1F F5            [11] 2826 	push	af
   0E20 33            [ 6] 2827 	inc	sp
   0E21 C5            [11] 2828 	push	bc
   0E22 CDrC3r06      [17] 2829 	call	_drawMenu
   0E25 F1            [10] 2830 	pop	af
   0E26 33            [ 6] 2831 	inc	sp
   0E27 7D            [ 4] 2832 	ld	a,l
   0E28 D1            [10] 2833 	pop	de
                           2834 ;src/includes/game.h:26: while(menuChoice!=4);
   0E29 D6 04         [ 7] 2835 	sub	a, #0x04
   0E2B 20 ED         [12] 2836 	jr	NZ,00101$
                           2837 ;src/includes/game.h:28: putM1();
   0E2D CDrA9r02      [17] 2838 	call	_putM1
   0E30 DD F9         [10] 2839 	ld	sp, ix
   0E32 DD E1         [14] 2840 	pop	ix
   0E34 C9            [10] 2841 	ret
   0E35                    2842 ___str_2:
   0E35 41 62 6F 75 74 20  2843 	.ascii "About this tile"
        74 68 69 73 20 74
        69 6C 65
   0E44 00                 2844 	.db 0x00
   0E45                    2845 ___str_3:
   0E45 42 65 67 69 6E 20  2846 	.ascii "Begin a railway"
        61 20 72 61 69 6C
        77 61 79
   0E54 00                 2847 	.db 0x00
   0E55                    2848 ___str_4:
   0E55 52 61 69 6C 72 6F  2849 	.ascii "Railroad depot"
        61 64 20 64 65 70
        6F 74
   0E63 00                 2850 	.db 0x00
   0E64                    2851 ___str_5:
   0E64 41 63 63 6F 75 6E  2852 	.ascii "Accounting"
        74 69 6E 67
   0E6E 00                 2853 	.db 0x00
   0E6F                    2854 ___str_6:
   0E6F 52 65 73 75 6D 65  2855 	.ascii "Resume"
   0E75 00                 2856 	.db 0x00
                           2857 ;src/includes/game.h:32: void game()
                           2858 ;	---------------------------------
                           2859 ; Function game
                           2860 ; ---------------------------------
   0E76                    2861 _game::
   0E76 DD E5         [15] 2862 	push	ix
   0E78 DD 21 00 00   [14] 2863 	ld	ix,#0
   0E7C DD 39         [15] 2864 	add	ix,sp
   0E7E 21 E3 F0      [10] 2865 	ld	hl,#-3869
   0E81 39            [11] 2866 	add	hl,sp
   0E82 F9            [ 6] 2867 	ld	sp,hl
                           2868 ;src/includes/game.h:35: u8 ulx = 0;
   0E83 FD 21 00 00   [14] 2869 	ld	iy,#0
   0E87 FD 39         [15] 2870 	add	iy,sp
   0E89 FD 36 00 00   [19] 2871 	ld	0 (iy),#0x00
                           2872 ;src/includes/game.h:36: u8 uly = 0;
   0E8D FD 21 01 00   [14] 2873 	ld	iy,#1
   0E91 FD 39         [15] 2874 	add	iy,sp
   0E93 FD 36 00 00   [19] 2875 	ld	0 (iy),#0x00
                           2876 ;src/includes/game.h:37: int xCursor = 10;
   0E97 DD 36 E8 0A   [19] 2877 	ld	-24 (ix),#0x0A
   0E9B DD 36 E9 00   [19] 2878 	ld	-23 (ix),#0x00
                           2879 ;src/includes/game.h:38: int yCursor = 6;
   0E9F 21 03 00      [10] 2880 	ld	hl, #3
   0EA2 39            [11] 2881 	add	hl, sp
   0EA3 36 06         [10] 2882 	ld	(hl), #0x06
   0EA5 23            [ 6] 2883 	inc	hl
   0EA6 36 00         [10] 2884 	ld	(hl), #0x00
                           2885 ;src/includes/game.h:40: u8 exit=0;
   0EA8 FD 21 02 00   [14] 2886 	ld	iy,#2
   0EAC FD 39         [15] 2887 	add	iy,sp
   0EAE FD 36 00 00   [19] 2888 	ld	0 (iy),#0x00
                           2889 ;src/includes/game.h:42: cpct_clearScreen(cpct_px2byteM1(0,0,0,0));
   0EB2 21 00 00      [10] 2890 	ld	hl,#0x0000
   0EB5 E5            [11] 2891 	push	hl
   0EB6 2E 00         [ 7] 2892 	ld	l, #0x00
   0EB8 E5            [11] 2893 	push	hl
   0EB9 CDr00r00      [17] 2894 	call	_cpct_px2byteM1
   0EBC F1            [10] 2895 	pop	af
   0EBD F1            [10] 2896 	pop	af
   0EBE 65            [ 4] 2897 	ld	h,l
   0EBF 01 00 40      [10] 2898 	ld	bc,#0x4000
   0EC2 C5            [11] 2899 	push	bc
   0EC3 E5            [11] 2900 	push	hl
   0EC4 33            [ 6] 2901 	inc	sp
   0EC5 21 00 C0      [10] 2902 	ld	hl,#0xC000
   0EC8 E5            [11] 2903 	push	hl
   0EC9 CDr00r00      [17] 2904 	call	_cpct_memset
                           2905 ;src/includes/game.h:44: generateWorld(p_world);
   0ECC 21 05 00      [10] 2906 	ld	hl,#0x0005
   0ECF 39            [11] 2907 	add	hl,sp
   0ED0 DD 75 F9      [19] 2908 	ld	-7 (ix),l
   0ED3 DD 74 FA      [19] 2909 	ld	-6 (ix),h
   0ED6 DD 6E F9      [19] 2910 	ld	l,-7 (ix)
   0ED9 DD 66 FA      [19] 2911 	ld	h,-6 (ix)
   0EDC E5            [11] 2912 	push	hl
   0EDD CDr49r0A      [17] 2913 	call	_generateWorld
   0EE0 F1            [10] 2914 	pop	af
                           2915 ;src/includes/game.h:46: drawWorld(p_world, ulx, uly);
   0EE1 DD 7E F9      [19] 2916 	ld	a,-7 (ix)
   0EE4 DD 77 F7      [19] 2917 	ld	-9 (ix),a
   0EE7 DD 7E FA      [19] 2918 	ld	a,-6 (ix)
   0EEA DD 77 F8      [19] 2919 	ld	-8 (ix),a
   0EED 21 00 00      [10] 2920 	ld	hl,#0x0000
   0EF0 E5            [11] 2921 	push	hl
   0EF1 DD 6E F7      [19] 2922 	ld	l,-9 (ix)
   0EF4 DD 66 F8      [19] 2923 	ld	h,-8 (ix)
   0EF7 E5            [11] 2924 	push	hl
   0EF8 CDr13r0D      [17] 2925 	call	_drawWorld
   0EFB F1            [10] 2926 	pop	af
   0EFC F1            [10] 2927 	pop	af
                           2928 ;src/includes/game.h:48: do{
   0EFD DD 7E F9      [19] 2929 	ld	a,-7 (ix)
   0F00 DD 77 F7      [19] 2930 	ld	-9 (ix),a
   0F03 DD 7E FA      [19] 2931 	ld	a,-6 (ix)
   0F06 DD 77 F8      [19] 2932 	ld	-8 (ix),a
   0F09 DD 7E F9      [19] 2933 	ld	a,-7 (ix)
   0F0C DD 77 F5      [19] 2934 	ld	-11 (ix),a
   0F0F DD 7E FA      [19] 2935 	ld	a,-6 (ix)
   0F12 DD 77 F6      [19] 2936 	ld	-10 (ix),a
   0F15 DD 7E F9      [19] 2937 	ld	a,-7 (ix)
   0F18 DD 77 EC      [19] 2938 	ld	-20 (ix),a
   0F1B DD 7E FA      [19] 2939 	ld	a,-6 (ix)
   0F1E DD 77 ED      [19] 2940 	ld	-19 (ix),a
   0F21 DD 7E F9      [19] 2941 	ld	a,-7 (ix)
   0F24 DD 77 EE      [19] 2942 	ld	-18 (ix),a
   0F27 DD 7E FA      [19] 2943 	ld	a,-6 (ix)
   0F2A DD 77 EF      [19] 2944 	ld	-17 (ix),a
   0F2D DD 7E F9      [19] 2945 	ld	a,-7 (ix)
   0F30 DD 77 FB      [19] 2946 	ld	-5 (ix),a
   0F33 DD 7E FA      [19] 2947 	ld	a,-6 (ix)
   0F36 DD 77 FC      [19] 2948 	ld	-4 (ix),a
   0F39 DD 7E F9      [19] 2949 	ld	a,-7 (ix)
   0F3C DD 77 EA      [19] 2950 	ld	-22 (ix),a
   0F3F DD 7E FA      [19] 2951 	ld	a,-6 (ix)
   0F42 DD 77 EB      [19] 2952 	ld	-21 (ix),a
   0F45 DD 7E F9      [19] 2953 	ld	a,-7 (ix)
   0F48 DD 77 FE      [19] 2954 	ld	-2 (ix),a
   0F4B DD 7E FA      [19] 2955 	ld	a,-6 (ix)
   0F4E DD 77 FF      [19] 2956 	ld	-1 (ix),a
   0F51 DD 7E F9      [19] 2957 	ld	a,-7 (ix)
   0F54 DD 77 F2      [19] 2958 	ld	-14 (ix),a
   0F57 DD 7E FA      [19] 2959 	ld	a,-6 (ix)
   0F5A DD 77 F3      [19] 2960 	ld	-13 (ix),a
   0F5D DD 7E F9      [19] 2961 	ld	a,-7 (ix)
   0F60 DD 77 F0      [19] 2962 	ld	-16 (ix),a
   0F63 DD 7E FA      [19] 2963 	ld	a,-6 (ix)
   0F66 DD 77 F1      [19] 2964 	ld	-15 (ix),a
   0F69                    2965 00133$:
                           2966 ;src/includes/game.h:49: cpct_scanKeyboard(); 
   0F69 CDr00r00      [17] 2967 	call	_cpct_scanKeyboard
                           2968 ;src/includes/game.h:51: if ( cpct_isKeyPressed(Key_CursorUp) )
   0F6C 21 00 01      [10] 2969 	ld	hl,#0x0100
   0F6F CDr00r00      [17] 2970 	call	_cpct_isKeyPressed
   0F72 55            [ 4] 2971 	ld	d,l
                           2972 ;src/includes/game.h:53: drawTile(p_world, ulx, uly, xCursor, yCursor);
   0F73 DD 7E E8      [19] 2973 	ld	a,-24 (ix)
   0F76 DD 77 FD      [19] 2974 	ld	-3 (ix),a
                           2975 ;src/includes/game.h:51: if ( cpct_isKeyPressed(Key_CursorUp) )
   0F79 7A            [ 4] 2976 	ld	a,d
   0F7A B7            [ 4] 2977 	or	a, a
   0F7B CAr07r10      [10] 2978 	jp	Z,00107$
                           2979 ;src/includes/game.h:53: drawTile(p_world, ulx, uly, xCursor, yCursor);
   0F7E FD 21 03 00   [14] 2980 	ld	iy,#3
   0F82 FD 39         [15] 2981 	add	iy,sp
   0F84 FD 66 00      [19] 2982 	ld	h,0 (iy)
   0F87 DD 5E F5      [19] 2983 	ld	e,-11 (ix)
   0F8A DD 56 F6      [19] 2984 	ld	d,-10 (ix)
   0F8D E5            [11] 2985 	push	hl
   0F8E 33            [ 6] 2986 	inc	sp
   0F8F DD 7E FD      [19] 2987 	ld	a,-3 (ix)
   0F92 F5            [11] 2988 	push	af
   0F93 33            [ 6] 2989 	inc	sp
   0F94 FD 21 03 00   [14] 2990 	ld	iy,#3
   0F98 FD 39         [15] 2991 	add	iy,sp
   0F9A FD 7E 00      [19] 2992 	ld	a,0 (iy)
   0F9D F5            [11] 2993 	push	af
   0F9E 33            [ 6] 2994 	inc	sp
   0F9F FD 21 03 00   [14] 2995 	ld	iy,#3
   0FA3 FD 39         [15] 2996 	add	iy,sp
   0FA5 FD 7E 00      [19] 2997 	ld	a,0 (iy)
   0FA8 F5            [11] 2998 	push	af
   0FA9 33            [ 6] 2999 	inc	sp
   0FAA D5            [11] 3000 	push	de
   0FAB CDr08r0C      [17] 3001 	call	_drawTile
   0FAE 21 06 00      [10] 3002 	ld	hl,#6
   0FB1 39            [11] 3003 	add	hl,sp
   0FB2 F9            [ 6] 3004 	ld	sp,hl
                           3005 ;src/includes/game.h:55: yCursor-=1;
   0FB3 FD 21 03 00   [14] 3006 	ld	iy,#3
   0FB7 FD 39         [15] 3007 	add	iy,sp
   0FB9 FD 6E 00      [19] 3008 	ld	l,0 (iy)
   0FBC FD 66 01      [19] 3009 	ld	h,1 (iy)
   0FBF 2B            [ 6] 3010 	dec	hl
   0FC0 FD 75 00      [19] 3011 	ld	0 (iy),l
   0FC3 FD 74 01      [19] 3012 	ld	1 (iy),h
                           3013 ;src/includes/game.h:58: if(yCursor<0)
   0FC6 FD CB 01 7E   [20] 3014 	bit	7,1 (iy)
   0FCA 28 33         [12] 3015 	jr	Z,00153$
                           3016 ;src/includes/game.h:60: yCursor=0;
   0FCC FD 36 00 00   [19] 3017 	ld	0 (iy),#0x00
   0FD0 FD 36 01 00   [19] 3018 	ld	1 (iy),#0x00
                           3019 ;src/includes/game.h:63: if(uly>0)
   0FD4 FD 21 01 00   [14] 3020 	ld	iy,#1
   0FD8 FD 39         [15] 3021 	add	iy,sp
   0FDA FD 7E 00      [19] 3022 	ld	a,0 (iy)
   0FDD B7            [ 4] 3023 	or	a, a
   0FDE 28 1F         [12] 3024 	jr	Z,00153$
                           3025 ;src/includes/game.h:65: uly-=1;
   0FE0 FD 35 00      [23] 3026 	dec	0 (iy)
                           3027 ;src/includes/game.h:66: drawWorld(p_world, ulx, uly);
   0FE3 DD 5E F7      [19] 3028 	ld	e,-9 (ix)
   0FE6 DD 56 F8      [19] 3029 	ld	d,-8 (ix)
   0FE9 FD 7E 00      [19] 3030 	ld	a,0 (iy)
   0FEC F5            [11] 3031 	push	af
   0FED 33            [ 6] 3032 	inc	sp
   0FEE FD 21 01 00   [14] 3033 	ld	iy,#1
   0FF2 FD 39         [15] 3034 	add	iy,sp
   0FF4 FD 7E 00      [19] 3035 	ld	a,0 (iy)
   0FF7 F5            [11] 3036 	push	af
   0FF8 33            [ 6] 3037 	inc	sp
   0FF9 D5            [11] 3038 	push	de
   0FFA CDr13r0D      [17] 3039 	call	_drawWorld
   0FFD F1            [10] 3040 	pop	af
   0FFE F1            [10] 3041 	pop	af
                           3042 ;src/includes/game.h:71: for(i=0; i<14000; i++) {}
   0FFF                    3043 00153$:
   0FFF 11 B0 36      [10] 3044 	ld	de,#0x36B0
   1002                    3045 00138$:
   1002 1B            [ 6] 3046 	dec	de
   1003 7A            [ 4] 3047 	ld	a,d
   1004 B3            [ 4] 3048 	or	a,e
   1005 20 FB         [12] 3049 	jr	NZ,00138$
   1007                    3050 00107$:
                           3051 ;src/includes/game.h:74: if ( cpct_isKeyPressed(Key_CursorDown) )
   1007 21 00 04      [10] 3052 	ld	hl,#0x0400
   100A CDr00r00      [17] 3053 	call	_cpct_isKeyPressed
   100D 7D            [ 4] 3054 	ld	a,l
   100E B7            [ 4] 3055 	or	a, a
   100F CArA9r10      [10] 3056 	jp	Z,00114$
                           3057 ;src/includes/game.h:76: drawTile(p_world, ulx, uly, xCursor, yCursor);
   1012 FD 21 03 00   [14] 3058 	ld	iy,#3
   1016 FD 39         [15] 3059 	add	iy,sp
   1018 FD 66 00      [19] 3060 	ld	h,0 (iy)
   101B DD 5E EE      [19] 3061 	ld	e,-18 (ix)
   101E DD 56 EF      [19] 3062 	ld	d,-17 (ix)
   1021 E5            [11] 3063 	push	hl
   1022 33            [ 6] 3064 	inc	sp
   1023 DD 7E FD      [19] 3065 	ld	a,-3 (ix)
   1026 F5            [11] 3066 	push	af
   1027 33            [ 6] 3067 	inc	sp
   1028 FD 21 03 00   [14] 3068 	ld	iy,#3
   102C FD 39         [15] 3069 	add	iy,sp
   102E FD 7E 00      [19] 3070 	ld	a,0 (iy)
   1031 F5            [11] 3071 	push	af
   1032 33            [ 6] 3072 	inc	sp
   1033 FD 21 03 00   [14] 3073 	ld	iy,#3
   1037 FD 39         [15] 3074 	add	iy,sp
   1039 FD 7E 00      [19] 3075 	ld	a,0 (iy)
   103C F5            [11] 3076 	push	af
   103D 33            [ 6] 3077 	inc	sp
   103E D5            [11] 3078 	push	de
   103F CDr08r0C      [17] 3079 	call	_drawTile
   1042 21 06 00      [10] 3080 	ld	hl,#6
   1045 39            [11] 3081 	add	hl,sp
   1046 F9            [ 6] 3082 	ld	sp,hl
                           3083 ;src/includes/game.h:77: yCursor+=1;
   1047 FD 21 03 00   [14] 3084 	ld	iy,#3
   104B FD 39         [15] 3085 	add	iy,sp
   104D FD 34 00      [23] 3086 	inc	0 (iy)
   1050 20 03         [12] 3087 	jr	NZ,00234$
   1052 FD 34 01      [23] 3088 	inc	1 (iy)
   1055                    3089 00234$:
                           3090 ;src/includes/game.h:78: if(yCursor>NBTILE_H-1)
   1055 3E 0B         [ 7] 3091 	ld	a,#0x0B
   1057 FD BE 00      [19] 3092 	cp	a, 0 (iy)
   105A 3E 00         [ 7] 3093 	ld	a,#0x00
   105C FD 9E 01      [19] 3094 	sbc	a, 1 (iy)
   105F E2r64r10      [10] 3095 	jp	PO, 00235$
   1062 EE 80         [ 7] 3096 	xor	a, #0x80
   1064                    3097 00235$:
   1064 F2rA1r10      [10] 3098 	jp	P,00158$
                           3099 ;src/includes/game.h:80: yCursor=NBTILE_H-1;
   1067 FD 21 03 00   [14] 3100 	ld	iy,#3
   106B FD 39         [15] 3101 	add	iy,sp
   106D FD 36 00 0B   [19] 3102 	ld	0 (iy),#0x0B
   1071 FD 36 01 00   [19] 3103 	ld	1 (iy),#0x00
                           3104 ;src/includes/game.h:81: if(uly<HEIGHT-NBTILE_H)
   1075 FD 21 01 00   [14] 3105 	ld	iy,#1
   1079 FD 39         [15] 3106 	add	iy,sp
   107B FD 7E 00      [19] 3107 	ld	a,0 (iy)
   107E D6 24         [ 7] 3108 	sub	a, #0x24
   1080 30 1F         [12] 3109 	jr	NC,00158$
                           3110 ;src/includes/game.h:83: uly+=1;
   1082 FD 34 00      [23] 3111 	inc	0 (iy)
                           3112 ;src/includes/game.h:84: drawWorld(p_world, ulx, uly);
   1085 DD 5E EC      [19] 3113 	ld	e,-20 (ix)
   1088 DD 56 ED      [19] 3114 	ld	d,-19 (ix)
   108B FD 7E 00      [19] 3115 	ld	a,0 (iy)
   108E F5            [11] 3116 	push	af
   108F 33            [ 6] 3117 	inc	sp
   1090 FD 21 01 00   [14] 3118 	ld	iy,#1
   1094 FD 39         [15] 3119 	add	iy,sp
   1096 FD 7E 00      [19] 3120 	ld	a,0 (iy)
   1099 F5            [11] 3121 	push	af
   109A 33            [ 6] 3122 	inc	sp
   109B D5            [11] 3123 	push	de
   109C CDr13r0D      [17] 3124 	call	_drawWorld
   109F F1            [10] 3125 	pop	af
   10A0 F1            [10] 3126 	pop	af
                           3127 ;src/includes/game.h:89: for(i=0; i<5000; i++) {}
   10A1                    3128 00158$:
   10A1 11 88 13      [10] 3129 	ld	de,#0x1388
   10A4                    3130 00141$:
   10A4 1B            [ 6] 3131 	dec	de
   10A5 7A            [ 4] 3132 	ld	a,d
   10A6 B3            [ 4] 3133 	or	a,e
   10A7 20 FB         [12] 3134 	jr	NZ,00141$
   10A9                    3135 00114$:
                           3136 ;src/includes/game.h:92: if ( cpct_isKeyPressed(Key_CursorLeft) )
   10A9 21 01 01      [10] 3137 	ld	hl,#0x0101
   10AC CDr00r00      [17] 3138 	call	_cpct_isKeyPressed
   10AF 55            [ 4] 3139 	ld	d,l
                           3140 ;src/includes/game.h:53: drawTile(p_world, ulx, uly, xCursor, yCursor);
   10B0 FD 21 03 00   [14] 3141 	ld	iy,#3
   10B4 FD 39         [15] 3142 	add	iy,sp
   10B6 FD 7E 00      [19] 3143 	ld	a,0 (iy)
   10B9 DD 77 F4      [19] 3144 	ld	-12 (ix),a
                           3145 ;src/includes/game.h:92: if ( cpct_isKeyPressed(Key_CursorLeft) )
   10BC 7A            [ 4] 3146 	ld	a,d
   10BD B7            [ 4] 3147 	or	a, a
   10BE CAr44r11      [10] 3148 	jp	Z,00121$
                           3149 ;src/includes/game.h:94: drawTile(p_world, ulx, uly, xCursor, yCursor);
   10C1 DD 5E EA      [19] 3150 	ld	e,-22 (ix)
   10C4 DD 56 EB      [19] 3151 	ld	d,-21 (ix)
   10C7 DD 7E F4      [19] 3152 	ld	a,-12 (ix)
   10CA F5            [11] 3153 	push	af
   10CB 33            [ 6] 3154 	inc	sp
   10CC DD 7E FD      [19] 3155 	ld	a,-3 (ix)
   10CF F5            [11] 3156 	push	af
   10D0 33            [ 6] 3157 	inc	sp
   10D1 FD 21 03 00   [14] 3158 	ld	iy,#3
   10D5 FD 39         [15] 3159 	add	iy,sp
   10D7 FD 7E 00      [19] 3160 	ld	a,0 (iy)
   10DA F5            [11] 3161 	push	af
   10DB 33            [ 6] 3162 	inc	sp
   10DC FD 21 03 00   [14] 3163 	ld	iy,#3
   10E0 FD 39         [15] 3164 	add	iy,sp
   10E2 FD 7E 00      [19] 3165 	ld	a,0 (iy)
   10E5 F5            [11] 3166 	push	af
   10E6 33            [ 6] 3167 	inc	sp
   10E7 D5            [11] 3168 	push	de
   10E8 CDr08r0C      [17] 3169 	call	_drawTile
   10EB 21 06 00      [10] 3170 	ld	hl,#6
   10EE 39            [11] 3171 	add	hl,sp
   10EF F9            [ 6] 3172 	ld	sp,hl
                           3173 ;src/includes/game.h:95: xCursor-=1;
   10F0 DD 6E E8      [19] 3174 	ld	l,-24 (ix)
   10F3 DD 66 E9      [19] 3175 	ld	h,-23 (ix)
   10F6 2B            [ 6] 3176 	dec	hl
   10F7 DD 75 E8      [19] 3177 	ld	-24 (ix),l
   10FA DD 74 E9      [19] 3178 	ld	-23 (ix),h
                           3179 ;src/includes/game.h:96: if(xCursor<0)
   10FD DD CB E9 7E   [20] 3180 	bit	7, -23 (ix)
   1101 28 39         [12] 3181 	jr	Z,00163$
                           3182 ;src/includes/game.h:98: xCursor=0;
   1103 DD 36 E8 00   [19] 3183 	ld	-24 (ix),#0x00
   1107 DD 36 E9 00   [19] 3184 	ld	-23 (ix),#0x00
                           3185 ;src/includes/game.h:99: if(ulx>0)
   110B FD 21 00 00   [14] 3186 	ld	iy,#0
   110F FD 39         [15] 3187 	add	iy,sp
   1111 FD 7E 00      [19] 3188 	ld	a,0 (iy)
   1114 B7            [ 4] 3189 	or	a, a
   1115 28 25         [12] 3190 	jr	Z,00163$
                           3191 ;src/includes/game.h:101: ulx-=1;
   1117 FD 35 00      [23] 3192 	dec	0 (iy)
                           3193 ;src/includes/game.h:102: drawWorld(p_world, ulx, uly);
   111A DD 5E FB      [19] 3194 	ld	e,-5 (ix)
   111D DD 56 FC      [19] 3195 	ld	d,-4 (ix)
   1120 FD 21 01 00   [14] 3196 	ld	iy,#1
   1124 FD 39         [15] 3197 	add	iy,sp
   1126 FD 7E 00      [19] 3198 	ld	a,0 (iy)
   1129 F5            [11] 3199 	push	af
   112A 33            [ 6] 3200 	inc	sp
   112B FD 21 01 00   [14] 3201 	ld	iy,#1
   112F FD 39         [15] 3202 	add	iy,sp
   1131 FD 7E 00      [19] 3203 	ld	a,0 (iy)
   1134 F5            [11] 3204 	push	af
   1135 33            [ 6] 3205 	inc	sp
   1136 D5            [11] 3206 	push	de
   1137 CDr13r0D      [17] 3207 	call	_drawWorld
   113A F1            [10] 3208 	pop	af
   113B F1            [10] 3209 	pop	af
                           3210 ;src/includes/game.h:107: for(i=0; i<14000; i++) {}
   113C                    3211 00163$:
   113C 11 B0 36      [10] 3212 	ld	de,#0x36B0
   113F                    3213 00144$:
   113F 1B            [ 6] 3214 	dec	de
   1140 7A            [ 4] 3215 	ld	a,d
   1141 B3            [ 4] 3216 	or	a,e
   1142 20 FB         [12] 3217 	jr	NZ,00144$
   1144                    3218 00121$:
                           3219 ;src/includes/game.h:110: if ( cpct_isKeyPressed(Key_CursorRight) )
   1144 21 00 02      [10] 3220 	ld	hl,#0x0200
   1147 CDr00r00      [17] 3221 	call	_cpct_isKeyPressed
   114A 7D            [ 4] 3222 	ld	a,l
   114B B7            [ 4] 3223 	or	a, a
   114C CArDAr11      [10] 3224 	jp	Z,00128$
                           3225 ;src/includes/game.h:112: drawTile(p_world, ulx, uly, xCursor, yCursor);
   114F DD 56 E8      [19] 3226 	ld	d,-24 (ix)
   1152 DD 4E F2      [19] 3227 	ld	c,-14 (ix)
   1155 DD 46 F3      [19] 3228 	ld	b,-13 (ix)
   1158 DD 7E F4      [19] 3229 	ld	a,-12 (ix)
   115B F5            [11] 3230 	push	af
   115C 33            [ 6] 3231 	inc	sp
   115D D5            [11] 3232 	push	de
   115E 33            [ 6] 3233 	inc	sp
   115F FD 21 03 00   [14] 3234 	ld	iy,#3
   1163 FD 39         [15] 3235 	add	iy,sp
   1165 FD 7E 00      [19] 3236 	ld	a,0 (iy)
   1168 F5            [11] 3237 	push	af
   1169 33            [ 6] 3238 	inc	sp
   116A FD 21 03 00   [14] 3239 	ld	iy,#3
   116E FD 39         [15] 3240 	add	iy,sp
   1170 FD 7E 00      [19] 3241 	ld	a,0 (iy)
   1173 F5            [11] 3242 	push	af
   1174 33            [ 6] 3243 	inc	sp
   1175 C5            [11] 3244 	push	bc
   1176 CDr08r0C      [17] 3245 	call	_drawTile
   1179 21 06 00      [10] 3246 	ld	hl,#6
   117C 39            [11] 3247 	add	hl,sp
   117D F9            [ 6] 3248 	ld	sp,hl
                           3249 ;src/includes/game.h:113: xCursor+=1;
   117E DD 34 E8      [23] 3250 	inc	-24 (ix)
   1181 20 03         [12] 3251 	jr	NZ,00236$
   1183 DD 34 E9      [23] 3252 	inc	-23 (ix)
   1186                    3253 00236$:
                           3254 ;src/includes/game.h:114: if(xCursor>NBTILE_W-1)
   1186 3E 13         [ 7] 3255 	ld	a,#0x13
   1188 DD BE E8      [19] 3256 	cp	a, -24 (ix)
   118B 3E 00         [ 7] 3257 	ld	a,#0x00
   118D DD 9E E9      [19] 3258 	sbc	a, -23 (ix)
   1190 E2r95r11      [10] 3259 	jp	PO, 00237$
   1193 EE 80         [ 7] 3260 	xor	a, #0x80
   1195                    3261 00237$:
   1195 F2rD2r11      [10] 3262 	jp	P,00168$
                           3263 ;src/includes/game.h:116: xCursor=NBTILE_W-1;
   1198 DD 36 E8 13   [19] 3264 	ld	-24 (ix),#0x13
   119C DD 36 E9 00   [19] 3265 	ld	-23 (ix),#0x00
                           3266 ;src/includes/game.h:117: if(ulx<WIDTH-NBTILE_W)
   11A0 FD 21 00 00   [14] 3267 	ld	iy,#0
   11A4 FD 39         [15] 3268 	add	iy,sp
   11A6 FD 7E 00      [19] 3269 	ld	a,0 (iy)
   11A9 D6 3C         [ 7] 3270 	sub	a, #0x3C
   11AB 30 25         [12] 3271 	jr	NC,00168$
                           3272 ;src/includes/game.h:119: ulx+=1;
   11AD FD 34 00      [23] 3273 	inc	0 (iy)
                           3274 ;src/includes/game.h:120: drawWorld(p_world, ulx, uly);
   11B0 DD 5E FE      [19] 3275 	ld	e,-2 (ix)
   11B3 DD 56 FF      [19] 3276 	ld	d,-1 (ix)
   11B6 FD 21 01 00   [14] 3277 	ld	iy,#1
   11BA FD 39         [15] 3278 	add	iy,sp
   11BC FD 7E 00      [19] 3279 	ld	a,0 (iy)
   11BF F5            [11] 3280 	push	af
   11C0 33            [ 6] 3281 	inc	sp
   11C1 FD 21 01 00   [14] 3282 	ld	iy,#1
   11C5 FD 39         [15] 3283 	add	iy,sp
   11C7 FD 7E 00      [19] 3284 	ld	a,0 (iy)
   11CA F5            [11] 3285 	push	af
   11CB 33            [ 6] 3286 	inc	sp
   11CC D5            [11] 3287 	push	de
   11CD CDr13r0D      [17] 3288 	call	_drawWorld
   11D0 F1            [10] 3289 	pop	af
   11D1 F1            [10] 3290 	pop	af
                           3291 ;src/includes/game.h:125: for(i=0; i<14000; i++) {}
   11D2                    3292 00168$:
   11D2 11 B0 36      [10] 3293 	ld	de,#0x36B0
   11D5                    3294 00147$:
   11D5 1B            [ 6] 3295 	dec	de
   11D6 7A            [ 4] 3296 	ld	a,d
   11D7 B3            [ 4] 3297 	or	a,e
   11D8 20 FB         [12] 3298 	jr	NZ,00147$
   11DA                    3299 00128$:
                           3300 ;src/includes/game.h:128: if ( cpct_isKeyPressed(Key_Esc) )
   11DA 21 08 04      [10] 3301 	ld	hl,#0x0408
   11DD CDr00r00      [17] 3302 	call	_cpct_isKeyPressed
   11E0 7D            [ 4] 3303 	ld	a,l
   11E1 B7            [ 4] 3304 	or	a, a
   11E2 28 0A         [12] 3305 	jr	Z,00130$
                           3306 ;src/includes/game.h:130: exit=1;
   11E4 FD 21 02 00   [14] 3307 	ld	iy,#2
   11E8 FD 39         [15] 3308 	add	iy,sp
   11EA FD 36 00 01   [19] 3309 	ld	0 (iy),#0x01
   11EE                    3310 00130$:
                           3311 ;src/includes/game.h:133: if ( cpct_isKeyPressed(Key_Return) )
   11EE 21 02 04      [10] 3312 	ld	hl,#0x0402
   11F1 CDr00r00      [17] 3313 	call	_cpct_isKeyPressed
   11F4 7D            [ 4] 3314 	ld	a,l
   11F5 B7            [ 4] 3315 	or	a, a
   11F6 28 6C         [12] 3316 	jr	Z,00132$
                           3317 ;src/includes/game.h:135: menuTile(p_world, ulx+xCursor, uly+yCursor);
   11F8 FD 21 03 00   [14] 3318 	ld	iy,#3
   11FC FD 39         [15] 3319 	add	iy,sp
   11FE FD 6E 00      [19] 3320 	ld	l,0 (iy)
   1201 FD 21 01 00   [14] 3321 	ld	iy,#1
   1205 FD 39         [15] 3322 	add	iy,sp
   1207 FD 7E 00      [19] 3323 	ld	a, 0 (iy)
   120A 85            [ 4] 3324 	add	a, l
   120B 4F            [ 4] 3325 	ld	c,a
   120C DD 6E E8      [19] 3326 	ld	l,-24 (ix)
   120F FD 21 00 00   [14] 3327 	ld	iy,#0
   1213 FD 39         [15] 3328 	add	iy,sp
   1215 FD 7E 00      [19] 3329 	ld	a, 0 (iy)
   1218 85            [ 4] 3330 	add	a, l
   1219 5F            [ 4] 3331 	ld	e,a
   121A DD 6E F0      [19] 3332 	ld	l,-16 (ix)
   121D DD 66 F1      [19] 3333 	ld	h,-15 (ix)
   1220 51            [ 4] 3334 	ld	d, c
   1221 D5            [11] 3335 	push	de
   1222 E5            [11] 3336 	push	hl
   1223 CDrD5r0D      [17] 3337 	call	_menuTile
   1226 F1            [10] 3338 	pop	af
   1227 F1            [10] 3339 	pop	af
                           3340 ;src/includes/game.h:136: cpct_clearScreen(cpct_px2byteM1(0,0,0,0));	
   1228 21 00 00      [10] 3341 	ld	hl,#0x0000
   122B E5            [11] 3342 	push	hl
   122C 2E 00         [ 7] 3343 	ld	l, #0x00
   122E E5            [11] 3344 	push	hl
   122F CDr00r00      [17] 3345 	call	_cpct_px2byteM1
   1232 F1            [10] 3346 	pop	af
   1233 F1            [10] 3347 	pop	af
   1234 65            [ 4] 3348 	ld	h,l
   1235 01 00 40      [10] 3349 	ld	bc,#0x4000
   1238 C5            [11] 3350 	push	bc
   1239 E5            [11] 3351 	push	hl
   123A 33            [ 6] 3352 	inc	sp
   123B 21 00 C0      [10] 3353 	ld	hl,#0xC000
   123E E5            [11] 3354 	push	hl
   123F CDr00r00      [17] 3355 	call	_cpct_memset
                           3356 ;src/includes/game.h:137: drawWorld(p_world, ulx, uly);
   1242 DD 5E F9      [19] 3357 	ld	e,-7 (ix)
   1245 DD 56 FA      [19] 3358 	ld	d,-6 (ix)
   1248 FD 21 01 00   [14] 3359 	ld	iy,#1
   124C FD 39         [15] 3360 	add	iy,sp
   124E FD 7E 00      [19] 3361 	ld	a,0 (iy)
   1251 F5            [11] 3362 	push	af
   1252 33            [ 6] 3363 	inc	sp
   1253 FD 21 01 00   [14] 3364 	ld	iy,#1
   1257 FD 39         [15] 3365 	add	iy,sp
   1259 FD 7E 00      [19] 3366 	ld	a,0 (iy)
   125C F5            [11] 3367 	push	af
   125D 33            [ 6] 3368 	inc	sp
   125E D5            [11] 3369 	push	de
   125F CDr13r0D      [17] 3370 	call	_drawWorld
   1262 F1            [10] 3371 	pop	af
   1263 F1            [10] 3372 	pop	af
   1264                    3373 00132$:
                           3374 ;src/includes/game.h:140: drawCursor(xCursor, yCursor, 0);
   1264 DD 56 E8      [19] 3375 	ld	d,-24 (ix)
   1267 AF            [ 4] 3376 	xor	a, a
   1268 F5            [11] 3377 	push	af
   1269 33            [ 6] 3378 	inc	sp
   126A DD 7E F4      [19] 3379 	ld	a,-12 (ix)
   126D F5            [11] 3380 	push	af
   126E 33            [ 6] 3381 	inc	sp
   126F D5            [11] 3382 	push	de
   1270 33            [ 6] 3383 	inc	sp
   1271 CDr4Er09      [17] 3384 	call	_drawCursor
   1274 F1            [10] 3385 	pop	af
   1275 33            [ 6] 3386 	inc	sp
                           3387 ;src/includes/game.h:142: while(!exit);
   1276 FD 21 02 00   [14] 3388 	ld	iy,#2
   127A FD 39         [15] 3389 	add	iy,sp
   127C FD 7E 00      [19] 3390 	ld	a,0 (iy)
   127F B7            [ 4] 3391 	or	a, a
   1280 CAr69r0F      [10] 3392 	jp	Z,00133$
   1283 DD F9         [10] 3393 	ld	sp, ix
   1285 DD E1         [14] 3394 	pop	ix
   1287 C9            [10] 3395 	ret
                           3396 ;src/main.c:16: void drawTrain() 
                           3397 ;	---------------------------------
                           3398 ; Function drawTrain
                           3399 ; ---------------------------------
   1288                    3400 _drawTrain::
                           3401 ;src/main.c:54: }
   1288 C9            [10] 3402 	ret
                           3403 ;src/main.c:57: void main(void)
                           3404 ;	---------------------------------
                           3405 ; Function main
                           3406 ; ---------------------------------
   1289                    3407 _main::
   1289 DD E5         [15] 3408 	push	ix
   128B DD 21 00 00   [14] 3409 	ld	ix,#0
   128F DD 39         [15] 3410 	add	ix,sp
   1291 21 ED FF      [10] 3411 	ld	hl,#-19
   1294 39            [11] 3412 	add	hl,sp
   1295 F9            [ 6] 3413 	ld	sp,hl
                           3414 ;src/main.c:62: const char *menuMain[] = { 
   1296 21 00 00      [10] 3415 	ld	hl,#0x0000
   1299 39            [11] 3416 	add	hl,sp
   129A 5D            [ 4] 3417 	ld	e,l
   129B 54            [ 4] 3418 	ld	d,h
   129C 36r83         [10] 3419 	ld	(hl),#<(___str_7)
   129E 23            [ 6] 3420 	inc	hl
   129F 36s13         [10] 3421 	ld	(hl),#>(___str_7)
   12A1 6B            [ 4] 3422 	ld	l, e
   12A2 62            [ 4] 3423 	ld	h, d
   12A3 23            [ 6] 3424 	inc	hl
   12A4 23            [ 6] 3425 	inc	hl
   12A5 01r8Cr13      [10] 3426 	ld	bc,#___str_8+0
   12A8 71            [ 7] 3427 	ld	(hl),c
   12A9 23            [ 6] 3428 	inc	hl
   12AA 70            [ 7] 3429 	ld	(hl),b
   12AB 21 04 00      [10] 3430 	ld	hl,#0x0004
   12AE 19            [11] 3431 	add	hl,de
   12AF 01r94r13      [10] 3432 	ld	bc,#___str_9+0
   12B2 71            [ 7] 3433 	ld	(hl),c
   12B3 23            [ 6] 3434 	inc	hl
   12B4 70            [ 7] 3435 	ld	(hl),b
                           3436 ;src/main.c:68: const char *windowCredit[] = { 
   12B5 21 09 00      [10] 3437 	ld	hl,#0x0009
   12B8 39            [11] 3438 	add	hl,sp
   12B9 DD 75 FC      [19] 3439 	ld	-4 (ix),l
   12BC DD 74 FD      [19] 3440 	ld	-3 (ix),h
   12BF DD 6E FC      [19] 3441 	ld	l,-4 (ix)
   12C2 DD 66 FD      [19] 3442 	ld	h,-3 (ix)
   12C5 36r99         [10] 3443 	ld	(hl),#<(___str_10)
   12C7 23            [ 6] 3444 	inc	hl
   12C8 36s13         [10] 3445 	ld	(hl),#>(___str_10)
   12CA DD 6E FC      [19] 3446 	ld	l,-4 (ix)
   12CD DD 66 FD      [19] 3447 	ld	h,-3 (ix)
   12D0 23            [ 6] 3448 	inc	hl
   12D1 23            [ 6] 3449 	inc	hl
   12D2 01rA2r13      [10] 3450 	ld	bc,#___str_11+0
   12D5 71            [ 7] 3451 	ld	(hl),c
   12D6 23            [ 6] 3452 	inc	hl
   12D7 70            [ 7] 3453 	ld	(hl),b
   12D8 DD 7E FC      [19] 3454 	ld	a,-4 (ix)
   12DB C6 04         [ 7] 3455 	add	a, #0x04
   12DD 6F            [ 4] 3456 	ld	l,a
   12DE DD 7E FD      [19] 3457 	ld	a,-3 (ix)
   12E1 CE 00         [ 7] 3458 	adc	a, #0x00
   12E3 67            [ 4] 3459 	ld	h,a
   12E4 01rA3r13      [10] 3460 	ld	bc,#___str_12+0
   12E7 71            [ 7] 3461 	ld	(hl),c
   12E8 23            [ 6] 3462 	inc	hl
   12E9 70            [ 7] 3463 	ld	(hl),b
                           3464 ;src/main.c:74: firmware = cpct_disableFirmware();
   12EA D5            [11] 3465 	push	de
   12EB CDr00r00      [17] 3466 	call	_cpct_disableFirmware
   12EE D1            [10] 3467 	pop	de
   12EF DD 75 F3      [19] 3468 	ld	-13 (ix),l
   12F2 DD 74 F4      [19] 3469 	ld	-12 (ix),h
                           3470 ;src/main.c:76: cpct_fw2hw(paletteTrains, 16);
   12F5 21r13r00      [10] 3471 	ld	hl,#_paletteTrains
   12F8 D5            [11] 3472 	push	de
   12F9 01 10 00      [10] 3473 	ld	bc,#0x0010
   12FC C5            [11] 3474 	push	bc
   12FD E5            [11] 3475 	push	hl
   12FE CDr00r00      [17] 3476 	call	_cpct_fw2hw
   1301 D1            [10] 3477 	pop	de
                           3478 ;src/main.c:77: cpct_fw2hw(paletteMenusM2, 2);
   1302 21r27r00      [10] 3479 	ld	hl,#_paletteMenusM2
   1305 D5            [11] 3480 	push	de
   1306 01 02 00      [10] 3481 	ld	bc,#0x0002
   1309 C5            [11] 3482 	push	bc
   130A E5            [11] 3483 	push	hl
   130B CDr00r00      [17] 3484 	call	_cpct_fw2hw
   130E D1            [10] 3485 	pop	de
                           3486 ;src/main.c:78: cpct_fw2hw(paletteMenusM1, 4);
   130F 21r23r00      [10] 3487 	ld	hl,#_paletteMenusM1
   1312 D5            [11] 3488 	push	de
   1313 01 04 00      [10] 3489 	ld	bc,#0x0004
   1316 C5            [11] 3490 	push	bc
   1317 E5            [11] 3491 	push	hl
   1318 CDr00r00      [17] 3492 	call	_cpct_fw2hw
   131B D1            [10] 3493 	pop	de
                           3494 ;src/main.c:80: cpct_setBorder(paletteTrains[12]);
   131C 3Ar1Fr00      [13] 3495 	ld	a, (#_paletteTrains + 12)
   131F D5            [11] 3496 	push	de
   1320 57            [ 4] 3497 	ld	d,a
   1321 1E 10         [ 7] 3498 	ld	e,#0x10
   1323 D5            [11] 3499 	push	de
   1324 CDr00r00      [17] 3500 	call	_cpct_setPALColour
   1327 CDrBDr02      [17] 3501 	call	_putM2
   132A D1            [10] 3502 	pop	de
                           3503 ;src/main.c:84: do{
   132B DD 73 FE      [19] 3504 	ld	-2 (ix),e
   132E DD 72 FF      [19] 3505 	ld	-1 (ix),d
   1331                    3506 00105$:
                           3507 ;src/main.c:85: menuChoice = drawMenu(menuMain,3);
   1331 DD 5E FE      [19] 3508 	ld	e,-2 (ix)
   1334 DD 56 FF      [19] 3509 	ld	d,-1 (ix)
   1337 3E 03         [ 7] 3510 	ld	a,#0x03
   1339 F5            [11] 3511 	push	af
   133A 33            [ 6] 3512 	inc	sp
   133B D5            [11] 3513 	push	de
   133C CDrC3r06      [17] 3514 	call	_drawMenu
   133F F1            [10] 3515 	pop	af
   1340 33            [ 6] 3516 	inc	sp
                           3517 ;src/main.c:87: if(menuChoice==0)
   1341 DD 75 F5      [19] 3518 	ld	-11 (ix), l
   1344 7D            [ 4] 3519 	ld	a, l
   1345 B7            [ 4] 3520 	or	a, a
   1346 20 09         [12] 3521 	jr	NZ,00102$
                           3522 ;src/main.c:89: putM1();
   1348 CDrA9r02      [17] 3523 	call	_putM1
                           3524 ;src/main.c:91: game();
   134B CDr76r0E      [17] 3525 	call	_game
                           3526 ;src/main.c:93: putM2();
   134E CDrBDr02      [17] 3527 	call	_putM2
   1351                    3528 00102$:
                           3529 ;src/main.c:96: if(menuChoice==1)
   1351 DD 7E F5      [19] 3530 	ld	a,-11 (ix)
   1354 3D            [ 4] 3531 	dec	a
   1355 20 10         [12] 3532 	jr	NZ,00106$
                           3533 ;src/main.c:97: drawWindow(windowCredit,3,0);
   1357 DD 5E FC      [19] 3534 	ld	e,-4 (ix)
   135A DD 56 FD      [19] 3535 	ld	d,-3 (ix)
   135D 21 03 00      [10] 3536 	ld	hl,#0x0003
   1360 E5            [11] 3537 	push	hl
   1361 D5            [11] 3538 	push	de
   1362 CDrB1r07      [17] 3539 	call	_drawWindow
   1365 F1            [10] 3540 	pop	af
   1366 F1            [10] 3541 	pop	af
   1367                    3542 00106$:
                           3543 ;src/main.c:99: while(menuChoice!=2);
   1367 DD 7E F5      [19] 3544 	ld	a,-11 (ix)
   136A D6 02         [ 7] 3545 	sub	a, #0x02
   136C 20 C3         [12] 3546 	jr	NZ,00105$
                           3547 ;src/main.c:101: cpct_setVideoMode(0);
   136E AF            [ 4] 3548 	xor	a, a
   136F F5            [11] 3549 	push	af
   1370 33            [ 6] 3550 	inc	sp
   1371 CDr00r00      [17] 3551 	call	_cpct_setVideoMode
   1374 33            [ 6] 3552 	inc	sp
                           3553 ;src/main.c:102: cpct_reenableFirmware(firmware);
   1375 DD 6E F3      [19] 3554 	ld	l,-13 (ix)
   1378 DD 66 F4      [19] 3555 	ld	h,-12 (ix)
   137B CDr00r00      [17] 3556 	call	_cpct_reenableFirmware
   137E DD F9         [10] 3557 	ld	sp, ix
   1380 DD E1         [14] 3558 	pop	ix
   1382 C9            [10] 3559 	ret
   1383                    3560 ___str_7:
   1383 4E 65 77 20 67 61  3561 	.ascii "New game"
        6D 65
   138B 00                 3562 	.db 0x00
   138C                    3563 ___str_8:
   138C 43 72 65 64 69 74  3564 	.ascii "Credits"
        73
   1393 00                 3565 	.db 0x00
   1394                    3566 ___str_9:
   1394 51 75 69 74        3567 	.ascii "Quit"
   1398 00                 3568 	.db 0x00
   1399                    3569 ___str_10:
   1399 52 61 69 6C 77 61  3570 	.ascii "Railways"
        79 73
   13A1 00                 3571 	.db 0x00
   13A2                    3572 ___str_11:
   13A2 00                 3573 	.db 0x00
   13A3                    3574 ___str_12:
   13A3 54 72 65 77 64 62  3575 	.ascii "Trewdbal  Productions 2016"
        61 6C 20 20 50 72
        6F 64 75 63 74 69
        6F 6E 73 20 32 30
        31 36
   13BD 00                 3576 	.db 0x00
                           3577 	.area _CODE
                           3578 	.area _INITIALIZER
                           3579 	.area _CABS (ABS)
