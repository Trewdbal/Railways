                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.4 #9329 (Linux)
                              4 ; This file was generated Sat Feb  6 17:14:12 2016
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _drawTrain
                             14 	.globl _game
                             15 	.globl _drawWindow
                             16 	.globl _drawMenu
                             17 	.globl _putM2
                             18 	.globl _cpct_setPALColour
                             19 	.globl _cpct_fw2hw
                             20 	.globl _cpct_setVideoMode
                             21 	.globl _cpct_disableFirmware
                             22 	.globl _cpct_reenableFirmware
                             23 ;--------------------------------------------------------
                             24 ; special function registers
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DABS (ABS)
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _GSINIT
                             43 	.area _GSFINAL
                             44 	.area _GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _HOME
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 ;src/main.c:11: void drawTrain() 
                             55 ;	---------------------------------
                             56 ; Function drawTrain
                             57 ; ---------------------------------
   0000                      58 _drawTrain::
                             59 ;src/main.c:49: }
   0000 C9            [10]   60 	ret
                             61 ;src/main.c:52: void main(void)
                             62 ;	---------------------------------
                             63 ; Function main
                             64 ; ---------------------------------
   0001                      65 _main::
   0001 DD E5         [15]   66 	push	ix
   0003 DD 21 00 00   [14]   67 	ld	ix,#0
   0007 DD 39         [15]   68 	add	ix,sp
   0009 21 EE FF      [10]   69 	ld	hl,#-18
   000C 39            [11]   70 	add	hl,sp
   000D F9            [ 6]   71 	ld	sp,hl
                             72 ;src/main.c:57: const char *menuMain[] = { 
   000E 21 00 00      [10]   73 	ld	hl,#0x0000
   0011 39            [11]   74 	add	hl,sp
   0012 5D            [ 4]   75 	ld	e,l
   0013 54            [ 4]   76 	ld	d,h
   0014 36rF6         [10]   77 	ld	(hl),#<(___str_0)
   0016 23            [ 6]   78 	inc	hl
   0017 36s00         [10]   79 	ld	(hl),#>(___str_0)
   0019 6B            [ 4]   80 	ld	l, e
   001A 62            [ 4]   81 	ld	h, d
   001B 23            [ 6]   82 	inc	hl
   001C 23            [ 6]   83 	inc	hl
   001D 01rFFr00      [10]   84 	ld	bc,#___str_1+0
   0020 71            [ 7]   85 	ld	(hl),c
   0021 23            [ 6]   86 	inc	hl
   0022 70            [ 7]   87 	ld	(hl),b
   0023 21 04 00      [10]   88 	ld	hl,#0x0004
   0026 19            [11]   89 	add	hl,de
   0027 01r07r01      [10]   90 	ld	bc,#___str_2+0
   002A 71            [ 7]   91 	ld	(hl),c
   002B 23            [ 6]   92 	inc	hl
   002C 70            [ 7]   93 	ld	(hl),b
                             94 ;src/main.c:63: const char *windowCredit[] = { 
   002D 21 08 00      [10]   95 	ld	hl,#0x0008
   0030 39            [11]   96 	add	hl,sp
   0031 DD 75 FC      [19]   97 	ld	-4 (ix),l
   0034 DD 74 FD      [19]   98 	ld	-3 (ix),h
   0037 DD 6E FC      [19]   99 	ld	l,-4 (ix)
   003A DD 66 FD      [19]  100 	ld	h,-3 (ix)
   003D 36r0C         [10]  101 	ld	(hl),#<(___str_3)
   003F 23            [ 6]  102 	inc	hl
   0040 36s01         [10]  103 	ld	(hl),#>(___str_3)
   0042 DD 6E FC      [19]  104 	ld	l,-4 (ix)
   0045 DD 66 FD      [19]  105 	ld	h,-3 (ix)
   0048 23            [ 6]  106 	inc	hl
   0049 23            [ 6]  107 	inc	hl
   004A 01r15r01      [10]  108 	ld	bc,#___str_4+0
   004D 71            [ 7]  109 	ld	(hl),c
   004E 23            [ 6]  110 	inc	hl
   004F 70            [ 7]  111 	ld	(hl),b
   0050 DD 7E FC      [19]  112 	ld	a,-4 (ix)
   0053 C6 04         [ 7]  113 	add	a, #0x04
   0055 6F            [ 4]  114 	ld	l,a
   0056 DD 7E FD      [19]  115 	ld	a,-3 (ix)
   0059 CE 00         [ 7]  116 	adc	a, #0x00
   005B 67            [ 4]  117 	ld	h,a
   005C 01r16r01      [10]  118 	ld	bc,#___str_5+0
   005F 71            [ 7]  119 	ld	(hl),c
   0060 23            [ 6]  120 	inc	hl
   0061 70            [ 7]  121 	ld	(hl),b
                            122 ;src/main.c:69: firmware = cpct_disableFirmware();
   0062 D5            [11]  123 	push	de
   0063 CDr00r00      [17]  124 	call	_cpct_disableFirmware
   0066 D1            [10]  125 	pop	de
   0067 DD 75 F4      [19]  126 	ld	-12 (ix),l
   006A DD 74 F5      [19]  127 	ld	-11 (ix),h
                            128 ;src/main.c:71: cpct_fw2hw(paletteTrains, 16);
   006D 21r00r00      [10]  129 	ld	hl,#_paletteTrains
   0070 D5            [11]  130 	push	de
   0071 01 10 00      [10]  131 	ld	bc,#0x0010
   0074 C5            [11]  132 	push	bc
   0075 E5            [11]  133 	push	hl
   0076 CDr00r00      [17]  134 	call	_cpct_fw2hw
   0079 D1            [10]  135 	pop	de
                            136 ;src/main.c:72: cpct_fw2hw(paletteMenusM2, 2);
   007A 21r00r00      [10]  137 	ld	hl,#_paletteMenusM2
   007D D5            [11]  138 	push	de
   007E 01 02 00      [10]  139 	ld	bc,#0x0002
   0081 C5            [11]  140 	push	bc
   0082 E5            [11]  141 	push	hl
   0083 CDr00r00      [17]  142 	call	_cpct_fw2hw
   0086 D1            [10]  143 	pop	de
                            144 ;src/main.c:73: cpct_fw2hw(paletteMenusM1, 4);
   0087 21r00r00      [10]  145 	ld	hl,#_paletteMenusM1
   008A D5            [11]  146 	push	de
   008B 01 04 00      [10]  147 	ld	bc,#0x0004
   008E C5            [11]  148 	push	bc
   008F E5            [11]  149 	push	hl
   0090 CDr00r00      [17]  150 	call	_cpct_fw2hw
   0093 D1            [10]  151 	pop	de
                            152 ;src/main.c:75: cpct_setBorder(paletteTrains[12]);
   0094 3Ar0Cr00      [13]  153 	ld	a, (#_paletteTrains + 12)
   0097 D5            [11]  154 	push	de
   0098 57            [ 4]  155 	ld	d,a
   0099 1E 10         [ 7]  156 	ld	e,#0x10
   009B D5            [11]  157 	push	de
   009C CDr00r00      [17]  158 	call	_cpct_setPALColour
   009F CDr00r00      [17]  159 	call	_putM2
   00A2 D1            [10]  160 	pop	de
                            161 ;src/main.c:79: do{
   00A3 DD 73 FE      [19]  162 	ld	-2 (ix),e
   00A6 DD 72 FF      [19]  163 	ld	-1 (ix),d
   00A9                     164 00105$:
                            165 ;src/main.c:80: menuChoice = drawMenu(menuMain,3);
   00A9 DD 5E FE      [19]  166 	ld	e,-2 (ix)
   00AC DD 56 FF      [19]  167 	ld	d,-1 (ix)
   00AF 3E 03         [ 7]  168 	ld	a,#0x03
   00B1 F5            [11]  169 	push	af
   00B2 33            [ 6]  170 	inc	sp
   00B3 D5            [11]  171 	push	de
   00B4 CDr00r00      [17]  172 	call	_drawMenu
   00B7 F1            [10]  173 	pop	af
   00B8 33            [ 6]  174 	inc	sp
   00B9 55            [ 4]  175 	ld	d,l
                            176 ;src/main.c:82: if(menuChoice==0)
   00BA 7A            [ 4]  177 	ld	a,d
   00BB B7            [ 4]  178 	or	a, a
   00BC 20 08         [12]  179 	jr	NZ,00102$
                            180 ;src/main.c:84: game();
   00BE D5            [11]  181 	push	de
   00BF CDr00r00      [17]  182 	call	_game
   00C2 CDr00r00      [17]  183 	call	_putM2
   00C5 D1            [10]  184 	pop	de
   00C6                     185 00102$:
                            186 ;src/main.c:89: if(menuChoice==1)
   00C6 7A            [ 4]  187 	ld	a,d
   00C7 3D            [ 4]  188 	dec	a
   00C8 20 12         [12]  189 	jr	NZ,00106$
                            190 ;src/main.c:90: drawWindow(windowCredit,3,0);
   00CA DD 4E FC      [19]  191 	ld	c,-4 (ix)
   00CD DD 46 FD      [19]  192 	ld	b,-3 (ix)
   00D0 D5            [11]  193 	push	de
   00D1 21 03 00      [10]  194 	ld	hl,#0x0003
   00D4 E5            [11]  195 	push	hl
   00D5 C5            [11]  196 	push	bc
   00D6 CDr00r00      [17]  197 	call	_drawWindow
   00D9 F1            [10]  198 	pop	af
   00DA F1            [10]  199 	pop	af
   00DB D1            [10]  200 	pop	de
   00DC                     201 00106$:
                            202 ;src/main.c:92: while(menuChoice!=2);
   00DC 7A            [ 4]  203 	ld	a,d
   00DD D6 02         [ 7]  204 	sub	a, #0x02
   00DF 20 C8         [12]  205 	jr	NZ,00105$
                            206 ;src/main.c:94: cpct_setVideoMode(0);
   00E1 AF            [ 4]  207 	xor	a, a
   00E2 F5            [11]  208 	push	af
   00E3 33            [ 6]  209 	inc	sp
   00E4 CDr00r00      [17]  210 	call	_cpct_setVideoMode
   00E7 33            [ 6]  211 	inc	sp
                            212 ;src/main.c:95: cpct_reenableFirmware(firmware);
   00E8 DD 6E F4      [19]  213 	ld	l,-12 (ix)
   00EB DD 66 F5      [19]  214 	ld	h,-11 (ix)
   00EE CDr00r00      [17]  215 	call	_cpct_reenableFirmware
   00F1 DD F9         [10]  216 	ld	sp, ix
   00F3 DD E1         [14]  217 	pop	ix
   00F5 C9            [10]  218 	ret
   00F6                     219 ___str_0:
   00F6 4E 65 77 20 67 61   220 	.ascii "New game"
        6D 65
   00FE 00                  221 	.db 0x00
   00FF                     222 ___str_1:
   00FF 43 72 65 64 69 74   223 	.ascii "Credits"
        73
   0106 00                  224 	.db 0x00
   0107                     225 ___str_2:
   0107 51 75 69 74         226 	.ascii "Quit"
   010B 00                  227 	.db 0x00
   010C                     228 ___str_3:
   010C 52 61 69 6C 77 61   229 	.ascii "Railways"
        79 73
   0114 00                  230 	.db 0x00
   0115                     231 ___str_4:
   0115 00                  232 	.db 0x00
   0116                     233 ___str_5:
   0116 54 72 65 77 64 62   234 	.ascii "Trewdbal  Productions 2016"
        61 6C 20 20 50 72
        6F 64 75 63 74 69
        6F 6E 73 20 32 30
        31 36
   0130 00                  235 	.db 0x00
                            236 	.area _CODE
                            237 	.area _INITIALIZER
                            238 	.area _CABS (ABS)
