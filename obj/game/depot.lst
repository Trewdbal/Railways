                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.4 #9329 (Linux)
                              4 ; This file was generated Sat Feb  6 22:37:07 2016
                              5 ;--------------------------------------------------------
                              6 	.module depot
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _drawMenu
                             13 	.globl _putM2
                             14 	.globl _putM0
                             15 	.globl _cpct_getScreenPtr
                             16 	.globl _cpct_drawSolidBox
                             17 	.globl _cpct_drawSprite
                             18 	.globl _cpct_px2byteM0
                             19 	.globl _cpct_isKeyPressed
                             20 	.globl _cpct_scanKeyboard
                             21 	.globl _cpct_memset
                             22 	.globl _railroadDepot
                             23 	.globl _buyLocomotive
                             24 ;--------------------------------------------------------
                             25 ; special function registers
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DATA
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _INITIALIZED
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DABS (ABS)
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;src/game/depot.c:3: void railroadDepot()
                             56 ;	---------------------------------
                             57 ; Function railroadDepot
                             58 ; ---------------------------------
   0000                      59 _railroadDepot::
   0000 DD E5         [15]   60 	push	ix
   0002 DD 21 00 00   [14]   61 	ld	ix,#0
   0006 DD 39         [15]   62 	add	ix,sp
   0008 F5            [11]   63 	push	af
   0009 F5            [11]   64 	push	af
   000A 3B            [ 6]   65 	dec	sp
                             66 ;src/game/depot.c:5: u8 exit=0;
   000B DD 36 FF 00   [19]   67 	ld	-1 (ix),#0x00
                             68 ;src/game/depot.c:7: cpct_clearScreen(0b11111111);
   000F 21 00 40      [10]   69 	ld	hl,#0x4000
   0012 E5            [11]   70 	push	hl
   0013 3E FF         [ 7]   71 	ld	a,#0xFF
   0015 F5            [11]   72 	push	af
   0016 33            [ 6]   73 	inc	sp
   0017 26 C0         [ 7]   74 	ld	h, #0xC0
   0019 E5            [11]   75 	push	hl
   001A CDr00r00      [17]   76 	call	_cpct_memset
                             77 ;src/game/depot.c:9: do
   001D                      78 00108$:
                             79 ;src/game/depot.c:11: cpct_scanKeyboard(); 
   001D CDr00r00      [17]   80 	call	_cpct_scanKeyboard
                             81 ;src/game/depot.c:13: if ( cpct_isKeyPressed(Key_Esc) )
   0020 21 08 04      [10]   82 	ld	hl,#0x0408
   0023 CDr00r00      [17]   83 	call	_cpct_isKeyPressed
   0026 7D            [ 4]   84 	ld	a,l
   0027 B7            [ 4]   85 	or	a, a
   0028 28 06         [12]   86 	jr	Z,00106$
                             87 ;src/game/depot.c:14: exit=1;
   002A DD 36 FF 01   [19]   88 	ld	-1 (ix),#0x01
   002E 18 2F         [12]   89 	jr	00109$
   0030                      90 00106$:
                             91 ;src/game/depot.c:15: else if(cpct_isKeyPressed(Key_Return) )
   0030 21 02 04      [10]   92 	ld	hl,#0x0402
   0033 CDr00r00      [17]   93 	call	_cpct_isKeyPressed
   0036 7D            [ 4]   94 	ld	a,l
   0037 B7            [ 4]   95 	or	a, a
   0038 28 25         [12]   96 	jr	Z,00109$
                             97 ;src/game/depot.c:17: const char *txtMenuChoice[] = { 
   003A 21 00 00      [10]   98 	ld	hl,#0x0000
   003D 39            [11]   99 	add	hl,sp
   003E 5D            [ 4]  100 	ld	e,l
   003F 54            [ 4]  101 	ld	d,h
   0040 36r6A         [10]  102 	ld	(hl),#<(___str_0)
   0042 23            [ 6]  103 	inc	hl
   0043 36s00         [10]  104 	ld	(hl),#>(___str_0)
   0045 6B            [ 4]  105 	ld	l, e
   0046 62            [ 4]  106 	ld	h, d
   0047 23            [ 6]  107 	inc	hl
   0048 23            [ 6]  108 	inc	hl
   0049 36r7B         [10]  109 	ld	(hl),#<(___str_1)
   004B 23            [ 6]  110 	inc	hl
   004C 36s00         [10]  111 	ld	(hl),#>(___str_1)
                            112 ;src/game/depot.c:21: u8 menuChoice = drawMenu(txtMenuChoice,2);
   004E 3E 02         [ 7]  113 	ld	a,#0x02
   0050 F5            [11]  114 	push	af
   0051 33            [ 6]  115 	inc	sp
   0052 D5            [11]  116 	push	de
   0053 CDr00r00      [17]  117 	call	_drawMenu
   0056 F1            [10]  118 	pop	af
   0057 33            [ 6]  119 	inc	sp
   0058 7D            [ 4]  120 	ld	a,l
                            121 ;src/game/depot.c:23: if(menuChoice == 0)
   0059 B7            [ 4]  122 	or	a, a
   005A 20 03         [12]  123 	jr	NZ,00109$
                            124 ;src/game/depot.c:24: buyLocomotive();
   005C CDr89r00      [17]  125 	call	_buyLocomotive
   005F                     126 00109$:
                            127 ;src/game/depot.c:28: while(!exit);
   005F DD 7E FF      [19]  128 	ld	a,-1 (ix)
   0062 B7            [ 4]  129 	or	a, a
   0063 28 B8         [12]  130 	jr	Z,00108$
   0065 DD F9         [10]  131 	ld	sp, ix
   0067 DD E1         [14]  132 	pop	ix
   0069 C9            [10]  133 	ret
   006A                     134 ___str_0:
   006A 42 75 79 20 61 20   135 	.ascii "Buy a locomotive"
        6C 6F 63 6F 6D 6F
        74 69 76 65
   007A 00                  136 	.db 0x00
   007B                     137 ___str_1:
   007B 42 61 63 6B 20 74   138 	.ascii "Back to depot"
        6F 20 64 65 70 6F
        74
   0088 00                  139 	.db 0x00
                            140 ;src/game/depot.c:31: void buyLocomotive()
                            141 ;	---------------------------------
                            142 ; Function buyLocomotive
                            143 ; ---------------------------------
   0089                     144 _buyLocomotive::
   0089 DD E5         [15]  145 	push	ix
   008B DD 21 00 00   [14]  146 	ld	ix,#0
   008F DD 39         [15]  147 	add	ix,sp
   0091 F5            [11]  148 	push	af
   0092 F5            [11]  149 	push	af
   0093 3B            [ 6]  150 	dec	sp
                            151 ;src/game/depot.c:33: u8 exit=0;
   0094 DD 36 FB 00   [19]  152 	ld	-5 (ix),#0x00
                            153 ;src/game/depot.c:37: putM0();
   0098 CDr00r00      [17]  154 	call	_putM0
                            155 ;src/game/depot.c:39: cpct_clearScreen(cpct_px2byteM0(14,15));
   009B 21 0E 0F      [10]  156 	ld	hl,#0x0F0E
   009E E5            [11]  157 	push	hl
   009F CDr00r00      [17]  158 	call	_cpct_px2byteM0
   00A2 65            [ 4]  159 	ld	h,l
   00A3 01 00 40      [10]  160 	ld	bc,#0x4000
   00A6 C5            [11]  161 	push	bc
   00A7 E5            [11]  162 	push	hl
   00A8 33            [ 6]  163 	inc	sp
   00A9 21 00 C0      [10]  164 	ld	hl,#0xC000
   00AC E5            [11]  165 	push	hl
   00AD CDr00r00      [17]  166 	call	_cpct_memset
                            167 ;src/game/depot.c:41: for(i=0; i<12; i++)
   00B0 1E 00         [ 7]  168 	ld	e,#0x00
   00B2                     169 00110$:
                            170 ;src/game/depot.c:43: p_video = cpct_getScreenPtr(SCR_VMEM, 5+25*(i%3), 30+40*(i%4));
   00B2 7B            [ 4]  171 	ld	a,e
   00B3 E6 03         [ 7]  172 	and	a, #0x03
   00B5 4F            [ 4]  173 	ld	c,a
   00B6 87            [ 4]  174 	add	a, a
   00B7 87            [ 4]  175 	add	a, a
   00B8 81            [ 4]  176 	add	a, c
   00B9 87            [ 4]  177 	add	a, a
   00BA 87            [ 4]  178 	add	a, a
   00BB 87            [ 4]  179 	add	a, a
   00BC DD 77 FF      [19]  180 	ld	-1 (ix), a
   00BF C6 1E         [ 7]  181 	add	a, #0x1E
   00C1 57            [ 4]  182 	ld	d,a
   00C2 D5            [11]  183 	push	de
   00C3 16 03         [ 7]  184 	ld	d,#0x03
   00C5 D5            [11]  185 	push	de
   00C6 CDr00r00      [17]  186 	call	__moduchar
   00C9 F1            [10]  187 	pop	af
   00CA 7D            [ 4]  188 	ld	a,l
   00CB D1            [10]  189 	pop	de
   00CC 4F            [ 4]  190 	ld	c,a
   00CD 87            [ 4]  191 	add	a, a
   00CE 81            [ 4]  192 	add	a, c
   00CF 87            [ 4]  193 	add	a, a
   00D0 87            [ 4]  194 	add	a, a
   00D1 87            [ 4]  195 	add	a, a
   00D2 81            [ 4]  196 	add	a, c
   00D3 DD 77 FE      [19]  197 	ld	-2 (ix), a
   00D6 C6 05         [ 7]  198 	add	a, #0x05
   00D8 D5            [11]  199 	push	de
   00D9 D5            [11]  200 	push	de
   00DA 33            [ 6]  201 	inc	sp
   00DB F5            [11]  202 	push	af
   00DC 33            [ 6]  203 	inc	sp
   00DD 21 00 C0      [10]  204 	ld	hl,#0xC000
   00E0 E5            [11]  205 	push	hl
   00E1 CDr00r00      [17]  206 	call	_cpct_getScreenPtr
   00E4 D1            [10]  207 	pop	de
                            208 ;src/game/depot.c:46: cpct_drawSolidBox(p_video, cpct_px2byteM0(11,11), 22, 22);
   00E5 E5            [11]  209 	push	hl
   00E6 D5            [11]  210 	push	de
   00E7 21 0B 0B      [10]  211 	ld	hl,#0x0B0B
   00EA E5            [11]  212 	push	hl
   00EB CDr00r00      [17]  213 	call	_cpct_px2byteM0
   00EE 7D            [ 4]  214 	ld	a, l
   00EF D1            [10]  215 	pop	de
   00F0 57            [ 4]  216 	ld	d,a
   00F1 C1            [10]  217 	pop	bc
   00F2 D5            [11]  218 	push	de
   00F3 21 16 16      [10]  219 	ld	hl,#0x1616
   00F6 E5            [11]  220 	push	hl
   00F7 D5            [11]  221 	push	de
   00F8 33            [ 6]  222 	inc	sp
   00F9 C5            [11]  223 	push	bc
   00FA CDr00r00      [17]  224 	call	_cpct_drawSolidBox
   00FD F1            [10]  225 	pop	af
   00FE F1            [10]  226 	pop	af
   00FF 33            [ 6]  227 	inc	sp
   0100 D1            [10]  228 	pop	de
                            229 ;src/game/depot.c:48: p_video = cpct_getScreenPtr(SCR_VMEM, 5+25*(i%3)+1, 30+40*(i%4)+1);
   0101 DD 7E FF      [19]  230 	ld	a,-1 (ix)
   0104 C6 1F         [ 7]  231 	add	a, #0x1F
   0106 67            [ 4]  232 	ld	h,a
   0107 DD 7E FE      [19]  233 	ld	a,-2 (ix)
   010A C6 06         [ 7]  234 	add	a, #0x06
   010C D5            [11]  235 	push	de
   010D E5            [11]  236 	push	hl
   010E 33            [ 6]  237 	inc	sp
   010F F5            [11]  238 	push	af
   0110 33            [ 6]  239 	inc	sp
   0111 21 00 C0      [10]  240 	ld	hl,#0xC000
   0114 E5            [11]  241 	push	hl
   0115 CDr00r00      [17]  242 	call	_cpct_getScreenPtr
   0118 D1            [10]  243 	pop	de
                            244 ;src/game/depot.c:46: cpct_drawSolidBox(p_video, cpct_px2byteM0(11,11), 22, 22);
   0119 DD 75 FC      [19]  245 	ld	-4 (ix),l
   011C DD 74 FD      [19]  246 	ld	-3 (ix),h
                            247 ;src/game/depot.c:50: if(i<locDelocked)
   011F 21r00r00      [10]  248 	ld	hl,#_locDelocked
   0122 7B            [ 4]  249 	ld	a,e
   0123 96            [ 7]  250 	sub	a, (hl)
   0124 30 16         [12]  251 	jr	NC,00102$
                            252 ;src/game/depot.c:52: cpct_drawSprite(l141P, p_video, 20, 20);
   0126 01r00r00      [10]  253 	ld	bc,#_l141P
   0129 D5            [11]  254 	push	de
   012A 21 14 14      [10]  255 	ld	hl,#0x1414
   012D E5            [11]  256 	push	hl
   012E DD 6E FC      [19]  257 	ld	l,-4 (ix)
   0131 DD 66 FD      [19]  258 	ld	h,-3 (ix)
   0134 E5            [11]  259 	push	hl
   0135 C5            [11]  260 	push	bc
   0136 CDr00r00      [17]  261 	call	_cpct_drawSprite
   0139 D1            [10]  262 	pop	de
   013A 18 14         [12]  263 	jr	00111$
   013C                     264 00102$:
                            265 ;src/game/depot.c:56: cpct_drawSprite(lock, p_video, 20, 20);
   013C 01r00r00      [10]  266 	ld	bc,#_lock
   013F D5            [11]  267 	push	de
   0140 21 14 14      [10]  268 	ld	hl,#0x1414
   0143 E5            [11]  269 	push	hl
   0144 DD 6E FC      [19]  270 	ld	l,-4 (ix)
   0147 DD 66 FD      [19]  271 	ld	h,-3 (ix)
   014A E5            [11]  272 	push	hl
   014B C5            [11]  273 	push	bc
   014C CDr00r00      [17]  274 	call	_cpct_drawSprite
   014F D1            [10]  275 	pop	de
   0150                     276 00111$:
                            277 ;src/game/depot.c:41: for(i=0; i<12; i++)
   0150 1C            [ 4]  278 	inc	e
   0151 7B            [ 4]  279 	ld	a,e
   0152 D6 0C         [ 7]  280 	sub	a, #0x0C
   0154 DArB2r00      [10]  281 	jp	C,00110$
                            282 ;src/game/depot.c:61: do
   0157                     283 00107$:
                            284 ;src/game/depot.c:63: cpct_scanKeyboard(); 
   0157 CDr00r00      [17]  285 	call	_cpct_scanKeyboard
                            286 ;src/game/depot.c:65: if ( cpct_isKeyPressed(Key_Esc) )
   015A 21 08 04      [10]  287 	ld	hl,#0x0408
   015D CDr00r00      [17]  288 	call	_cpct_isKeyPressed
   0160 7D            [ 4]  289 	ld	a,l
   0161 B7            [ 4]  290 	or	a, a
   0162 28 04         [12]  291 	jr	Z,00108$
                            292 ;src/game/depot.c:66: exit=1;
   0164 DD 36 FB 01   [19]  293 	ld	-5 (ix),#0x01
   0168                     294 00108$:
                            295 ;src/game/depot.c:68: while(!exit);
   0168 DD 7E FB      [19]  296 	ld	a,-5 (ix)
   016B B7            [ 4]  297 	or	a, a
   016C 28 E9         [12]  298 	jr	Z,00107$
                            299 ;src/game/depot.c:70: putM2();
   016E CDr00r00      [17]  300 	call	_putM2
   0171 DD F9         [10]  301 	ld	sp, ix
   0173 DD E1         [14]  302 	pop	ix
   0175 C9            [10]  303 	ret
                            304 	.area _CODE
                            305 	.area _INITIALIZER
                            306 	.area _CABS (ABS)
